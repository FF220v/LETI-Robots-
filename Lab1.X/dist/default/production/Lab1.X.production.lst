

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 21 09:37:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4525 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _ADCON2bits	set	4032
    57  0000                     _ADCON1bits	set	4033
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATBbits	set	3978
    60  0000                     _LATCbits	set	3979
    61  0000                     _LATEbits	set	3981
    62  0000                     _LATAbits	set	3977
    63  0000                     _TRISD	set	3989
    64  0000                     _LATD	set	3980
    65  0000                     _PORTDbits	set	3971
    66  0000                     _TRISB2	set	31898
    67  0000                     _TRISB1	set	31897
    68  0000                     _TRISD1	set	31913
    69  0000                     _TRISD0	set	31912
    70  0000                     _TRISB3	set	31899
    71  0000                     _TRISC0	set	31904
    72  0000                     _TRISA4	set	31892
    73  0000                     _TRISC3	set	31907
    74  0000                     _TRISC4	set	31908
    75  0000                     _TRISC6	set	31910
    76  0000                     _TRISC7	set	31911
    77  0000                     _TRISB0	set	31896
    78  0000                     _TRISB5	set	31901
    79  0000                     _TRISB4	set	31900
    80  0000                     _TRISC5	set	31909
    81  0000                     _TRISE2	set	31922
    82  0000                     _TRISE1	set	31921
    83  0000                     _TRISE0	set	31920
    84  0000                     _TRISA5	set	31893
    85  0000                     _TRISA3	set	31891
    86  0000                     _TRISA2	set	31890
    87  0000                     _TRISA1	set	31889
    88  0000                     _TRISA0	set	31888
    89                           
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	opt stack 0
    93  001000  00                 	db	0
    94  001001                     STR_1:
    95  001001  31                 	db	49	;'1'
    96  001002  32                 	db	50	;'2'
    97  001003  33                 	db	51	;'3'
    98  001004  34                 	db	52	;'4'
    99  001005  35                 	db	53	;'5'
   100  001006  00                 	db	0
   101                           
   102                           ; #config settings
   103  001007  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           	psect	cinit
   106  001580                     __pcinit:
   107                           	opt stack 0
   108  001580                     start_initialization:
   109                           	opt stack 0
   110  001580                     __initialization:
   111                           	opt stack 0
   112  001580                     end_of_initialization:
   113                           	opt stack 0
   114  001580                     __end_of__initialization:
   115                           	opt stack 0
   116  001580  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  001582  6EF8               	movwf	tblptru,c
   118  001584  0100               	movlb	0
   119  001586  EFB0  F00A         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           
   122                           	psect	cstackCOMRAM
   123  000001                     __pcstackCOMRAM:
   124                           	opt stack 0
   125  000001                     ??_lcdCmd:
   126  000001                     ??_lcd_print_char:
   127  000001                     pinMode@mode:
   128                           	opt stack 0
   129  000001                     digitalWrite@mode:
   130                           	opt stack 0
   131                           
   132                           ; 1 bytes @ 0x0
   133  000001                     	ds	1
   134  000002                     lcdCmd@cmd:
   135                           	opt stack 0
   136  000002                     lcd_print_char@entity:
   137                           	opt stack 0
   138  000002                     pinMode@pin:
   139                           	opt stack 0
   140  000002                     digitalWrite@pin:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0x1
   144  000002                     	ds	1
   145  000003                     ??_initLCD:
   146  000003                     initOutputs@i:
   147                           	opt stack 0
   148  000003                     lcd_print_string@entity:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x2
   152  000003                     	ds	1
   153  000004                     initLCD@i:
   154                           	opt stack 0
   155  000004                     initOutputs@i_811:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x3
   159  000004                     	ds	1
   160  000005                     tblptru	equ	0xFF8
   161                           
   162                           ; 1 bytes @ 0x4
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 2 in file "main.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;Total ram usage:        0 bytes
   187 ;; Hardware stack levels required when called:    4
   188 ;; This function calls:
   189 ;;		_init
   190 ;;		_lcd_print_string
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  001560                     __ptext0:
   198                           	opt stack 0
   199  001560                     _main:
   200                           	opt stack 27
   201                           
   202                           ;main.c: 4: init();
   203                           
   204                           ;incstack = 0
   205  001560  ECB9  F00A         	call	_init	;wreg free
   206  001564                     
   207                           ;main.c: 9: lcd_print_string("12345");
   208  001564  0E01               	movlw	low STR_1
   209  001566  6E03               	movwf	lcd_print_string@entity,c
   210  001568  0E10               	movlw	high STR_1
   211  00156A  6E04               	movwf	lcd_print_string@entity+1,c
   212  00156C  EC13  F00A         	call	_lcd_print_string	;wreg free
   213  001570  D7F9               	goto	l9
   214  001572                     __end_of_main:
   215                           	opt stack 0
   216                           tblptru	equ	0xFF8
   217                           
   218 ;; *************** function _lcd_print_string *****************
   219 ;; Defined at:
   220 ;;		line 66 in file "RobotLib.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;  entity          2    2[COMRAM] PTR unsigned char 
   223 ;;		 -> lcd_print_long@buff(16), lcd_print_int@buff(16), STR_1(6), 
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   239 ;;Total ram usage:        2 bytes
   240 ;; Hardware stack levels used:    1
   241 ;; Hardware stack levels required when called:    2
   242 ;; This function calls:
   243 ;;		_lcd_print_char
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  001426                     __ptext1:
   251                           	opt stack 0
   252  001426                     _lcd_print_string:
   253                           	opt stack 28
   254                           
   255                           ;RobotLib.c: 67: while(*entity)
   256                           
   257                           ;incstack = 0
   258  001426  D014               	goto	l130
   259  001428                     
   260                           ;RobotLib.c: 68: {
   261                           ;RobotLib.c: 69: lcd_print_char(*entity);
   262  001428  C003  FFF6         	movff	lcd_print_string@entity,tblptrl
   263  00142C  C004  FFF7         	movff	lcd_print_string@entity+1,tblptrh
   264  001430  6AF8               	clrf	tblptru,c
   265  001432  0E0F               	movlw	(high __ramtop+-1)
   266  001434  64F7               	cpfsgt	tblptrh,c
   267  001436  D003               	bra	u1067
   268  001438  0008               	tblrd		*
   269  00143A  50F5               	movf	tablat,w,c
   270  00143C  D005               	bra	u1060
   271  00143E                     u1067:
   272  00143E  CFF6 FFE9          	movff	tblptrl,fsr0l
   273  001442  CFF7 FFEA          	movff	tblptrh,fsr0h
   274  001446  50EF               	movf	indf0,w,c
   275  001448                     u1060:
   276  001448  EC7C  F00A         	call	_lcd_print_char
   277                           
   278                           ;RobotLib.c: 70: entity++;
   279  00144C  4A03               	infsnz	lcd_print_string@entity,f,c
   280  00144E  2A04               	incf	lcd_print_string@entity+1,f,c
   281  001450                     l130:
   282  001450  C003  FFF6         	movff	lcd_print_string@entity,tblptrl
   283  001454  C004  FFF7         	movff	lcd_print_string@entity+1,tblptrh
   284  001458  6AF8               	clrf	tblptru,c
   285  00145A  0E0F               	movlw	(high __ramtop+-1)
   286  00145C  64F7               	cpfsgt	tblptrh,c
   287  00145E  D003               	bra	u1077
   288  001460  0008               	tblrd		*
   289  001462  50F5               	movf	tablat,w,c
   290  001464  D005               	bra	u1070
   291  001466                     u1077:
   292  001466  CFF6 FFE9          	movff	tblptrl,fsr0l
   293  00146A  CFF7 FFEA          	movff	tblptrh,fsr0h
   294  00146E  50EF               	movf	indf0,w,c
   295  001470                     u1070:
   296  001470  0900               	iorlw	0
   297  001472  B4D8               	btfsc	status,2,c
   298  001474  0012               	return	
   299  001476  D7D8               	goto	l131
   300  001478                     __end_of_lcd_print_string:
   301                           	opt stack 0
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           indf0	equ	0xFEF
   307                           fsr0h	equ	0xFEA
   308                           fsr0l	equ	0xFE9
   309                           status	equ	0xFD8
   310                           
   311 ;; *************** function _lcd_print_char *****************
   312 ;; Defined at:
   313 ;;		line 58 in file "RobotLib.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;  entity          1    wreg     unsigned char 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  entity          1    1[COMRAM] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        2 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; Hardware stack levels required when called:    1
   334 ;; This function calls:
   335 ;;		_lcdPulse
   336 ;; This function is called by:
   337 ;;		_lcd_print_string
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342  0014F8                     __ptext2:
   343                           	opt stack 0
   344  0014F8                     _lcd_print_char:
   345                           	opt stack 28
   346                           
   347                           ;incstack = 0
   348                           ;lcd_print_char@entity stored from wreg
   349  0014F8  6E02               	movwf	lcd_print_char@entity,c
   350                           
   351                           ;RobotLib.c: 59: PORTDbits.RD2 = 1;
   352  0014FA  8483               	bsf	3971,2,c	;volatile
   353                           
   354                           ;RobotLib.c: 60: LATD = (LATD&0x0f)|(entity & 0xf0);
   355  0014FC  C002  F001         	movff	lcd_print_char@entity,??_lcd_print_char
   356  001500  0EF0               	movlw	240
   357  001502  1601               	andwf	??_lcd_print_char,f,c
   358  001504  508C               	movf	3980,w,c	;volatile
   359  001506  0B0F               	andlw	15
   360  001508  1001               	iorwf	??_lcd_print_char,w,c
   361  00150A  6E8C               	movwf	3980,c	;volatile
   362                           
   363                           ;RobotLib.c: 61: lcdPulse();
   364  00150C  ECA5  F00A         	call	_lcdPulse	;wreg free
   365                           
   366                           ;RobotLib.c: 62: LATD = (LATD&0x0f)|((entity<<4)&0xf0);
   367  001510  C002  F001         	movff	lcd_print_char@entity,??_lcd_print_char
   368  001514  3A01               	swapf	??_lcd_print_char,f,c
   369  001516  0EF0               	movlw	240
   370  001518  1601               	andwf	??_lcd_print_char,f,c
   371  00151A  0EF0               	movlw	240
   372  00151C  1601               	andwf	??_lcd_print_char,f,c
   373  00151E  508C               	movf	3980,w,c	;volatile
   374  001520  0B0F               	andlw	15
   375  001522  1001               	iorwf	??_lcd_print_char,w,c
   376  001524  6E8C               	movwf	3980,c	;volatile
   377                           
   378                           ;RobotLib.c: 63: lcdPulse();
   379  001526  ECA5  F00A         	call	_lcdPulse	;wreg free
   380  00152A  0012               	return		;funcret
   381  00152C                     __end_of_lcd_print_char:
   382                           	opt stack 0
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           indf0	equ	0xFEF
   388                           fsr0h	equ	0xFEA
   389                           fsr0l	equ	0xFE9
   390                           status	equ	0xFD8
   391                           
   392 ;; *************** function _init *****************
   393 ;; Defined at:
   394 ;;		line 5 in file "RobotLib.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; Hardware stack levels required when called:    3
   415 ;; This function calls:
   416 ;;		_initADC
   417 ;;		_initLCD
   418 ;;		_initOutputs
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text3
   425  001572                     __ptext3:
   426                           	opt stack 0
   427  001572                     _init:
   428                           	opt stack 27
   429                           
   430                           ;RobotLib.c: 6: initOutputs();
   431                           
   432                           ;incstack = 0
   433  001572  EC5D  F00A         	call	_initOutputs	;wreg free
   434                           
   435                           ;RobotLib.c: 7: initADC();
   436  001576  EC96  F00A         	call	_initADC	;wreg free
   437                           
   438                           ;RobotLib.c: 8: initLCD();
   439  00157A  ECD8  F009         	call	_initLCD	;wreg free
   440  00157E  0012               	return		;funcret
   441  001580                     __end_of_init:
   442                           	opt stack 0
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           indf0	equ	0xFEF
   448                           fsr0h	equ	0xFEA
   449                           fsr0l	equ	0xFE9
   450                           status	equ	0xFD8
   451                           
   452 ;; *************** function _initOutputs *****************
   453 ;; Defined at:
   454 ;;		line 113 in file "RobotLib.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  i               1    3[COMRAM] unsigned char 
   459 ;;  i               1    2[COMRAM] unsigned char 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    1
   476 ;; This function calls:
   477 ;;		_digitalWrite
   478 ;;		_pinMode
   479 ;; This function is called by:
   480 ;;		_init
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text4
   485  0014BA                     __ptext4:
   486                           	opt stack 0
   487  0014BA                     _initOutputs:
   488                           	opt stack 28
   489                           
   490                           ;RobotLib.c: 115: for(char i = 0; i<=7; i++)
   491                           
   492                           ;incstack = 0
   493  0014BA  0E00               	movlw	0
   494  0014BC  6E03               	movwf	initOutputs@i,c
   495  0014BE                     l1472:
   496  0014BE  0E07               	movlw	7
   497  0014C0  6403               	cpfsgt	initOutputs@i,c
   498  0014C2  D001               	goto	l153
   499  0014C4  D007               	goto	u1030
   500  0014C6                     l153:
   501                           
   502                           ;RobotLib.c: 116: pinMode(i, 1);
   503  0014C6  0E01               	movlw	1
   504  0014C8  6E01               	movwf	pinMode@mode,c
   505  0014CA  5003               	movf	initOutputs@i,w,c
   506  0014CC  EC04  F008         	call	_pinMode
   507  0014D0  2A03               	incf	initOutputs@i,f,c
   508  0014D2  D7F5               	goto	l1472
   509  0014D4                     u1030:
   510                           
   511                           ;RobotLib.c: 117: for(char i = 19; i<=22; i++){
   512  0014D4  0E13               	movlw	19
   513  0014D6  6E04               	movwf	initOutputs@i_811,c
   514  0014D8                     l1484:
   515  0014D8  0E16               	movlw	22
   516  0014DA  6404               	cpfsgt	initOutputs@i_811,c
   517  0014DC  D001               	goto	l155
   518  0014DE  0012               	return	
   519  0014E0                     l155:
   520                           
   521                           ;RobotLib.c: 118: pinMode(i, 0);
   522  0014E0  0E00               	movlw	0
   523  0014E2  6E01               	movwf	pinMode@mode,c
   524  0014E4  5004               	movf	initOutputs@i_811,w,c
   525  0014E6  EC04  F008         	call	_pinMode
   526                           
   527                           ;RobotLib.c: 119: digitalWrite(i, 0);
   528  0014EA  0E00               	movlw	0
   529  0014EC  6E01               	movwf	digitalWrite@mode,c
   530  0014EE  5004               	movf	initOutputs@i_811,w,c
   531  0014F0  ECEE  F008         	call	_digitalWrite
   532  0014F4  2A04               	incf	initOutputs@i_811,f,c
   533  0014F6  D7F0               	goto	l1484
   534  0014F8                     __end_of_initOutputs:
   535                           	opt stack 0
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           indf0	equ	0xFEF
   541                           fsr0h	equ	0xFEA
   542                           fsr0l	equ	0xFE9
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _pinMode *****************
   546 ;; Defined at:
   547 ;;		line 122 in file "RobotLib.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  pin             1    wreg     unsigned char 
   550 ;;  mode            1    0[COMRAM] unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  pin             1    1[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_initOutputs
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text5
   576  001008                     __ptext5:
   577                           	opt stack 0
   578  001008                     _pinMode:
   579                           	opt stack 28
   580                           
   581                           ;incstack = 0
   582                           ;pinMode@pin stored from wreg
   583  001008  6E02               	movwf	pinMode@pin,c
   584                           
   585                           ;RobotLib.c: 123: switch(pin)
   586  00100A  D0A1               	goto	l160
   587  00100C                     
   588                           ;RobotLib.c: 126: if(mode)
   589  00100C  5001               	movf	pinMode@mode,w,c
   590  00100E  B4D8               	btfsc	status,2,c
   591  001010  D002               	goto	l162
   592                           
   593                           ;RobotLib.c: 127: TRISA0 = 1;
   594  001012  8092               	bsf	3986,0,c	;volatile
   595  001014  0012               	return	
   596  001016                     l162:
   597                           
   598                           ;RobotLib.c: 128: else
   599                           ;RobotLib.c: 129: TRISA0 = 0;
   600  001016  9092               	bcf	3986,0,c	;volatile
   601                           
   602                           ;RobotLib.c: 130: break;
   603  001018  0012               	return	
   604  00101A                     
   605                           ;RobotLib.c: 133: if(mode)
   606  00101A  5001               	movf	pinMode@mode,w,c
   607  00101C  B4D8               	btfsc	status,2,c
   608  00101E  D002               	goto	l166
   609                           
   610                           ;RobotLib.c: 134: TRISA1 = 1;
   611  001020  8292               	bsf	3986,1,c	;volatile
   612  001022  0012               	return	
   613  001024                     l166:
   614                           
   615                           ;RobotLib.c: 135: else
   616                           ;RobotLib.c: 136: TRISA1 = 0;
   617  001024  9292               	bcf	3986,1,c	;volatile
   618                           
   619                           ;RobotLib.c: 137: break;
   620  001026  0012               	return	
   621  001028                     
   622                           ;RobotLib.c: 140: if(mode)
   623  001028  5001               	movf	pinMode@mode,w,c
   624  00102A  B4D8               	btfsc	status,2,c
   625  00102C  D002               	goto	l169
   626                           
   627                           ;RobotLib.c: 141: TRISA2 = 1;
   628  00102E  8492               	bsf	3986,2,c	;volatile
   629  001030  0012               	return	
   630  001032                     l169:
   631                           
   632                           ;RobotLib.c: 142: else
   633                           ;RobotLib.c: 143: TRISA2 = 0;
   634  001032  9492               	bcf	3986,2,c	;volatile
   635                           
   636                           ;RobotLib.c: 144: break;
   637  001034  0012               	return	
   638  001036                     
   639                           ;RobotLib.c: 147: if(mode)
   640  001036  5001               	movf	pinMode@mode,w,c
   641  001038  B4D8               	btfsc	status,2,c
   642  00103A  D002               	goto	l172
   643                           
   644                           ;RobotLib.c: 148: TRISA3 = 1;
   645  00103C  8692               	bsf	3986,3,c	;volatile
   646  00103E  0012               	return	
   647  001040                     l172:
   648                           
   649                           ;RobotLib.c: 149: else
   650                           ;RobotLib.c: 150: TRISA3 = 0;
   651  001040  9692               	bcf	3986,3,c	;volatile
   652                           
   653                           ;RobotLib.c: 151: break;
   654  001042  0012               	return	
   655  001044                     
   656                           ;RobotLib.c: 154: if(mode)
   657  001044  5001               	movf	pinMode@mode,w,c
   658  001046  B4D8               	btfsc	status,2,c
   659  001048  D002               	goto	l175
   660                           
   661                           ;RobotLib.c: 155: TRISA5 = 1;
   662  00104A  8A92               	bsf	3986,5,c	;volatile
   663  00104C  0012               	return	
   664  00104E                     l175:
   665                           
   666                           ;RobotLib.c: 156: else
   667                           ;RobotLib.c: 157: TRISA5 = 0;
   668  00104E  9A92               	bcf	3986,5,c	;volatile
   669                           
   670                           ;RobotLib.c: 158: break;
   671  001050  0012               	return	
   672  001052                     
   673                           ;RobotLib.c: 161: if(mode)
   674  001052  5001               	movf	pinMode@mode,w,c
   675  001054  B4D8               	btfsc	status,2,c
   676  001056  D002               	goto	l178
   677                           
   678                           ;RobotLib.c: 162: TRISE0 = 1;
   679  001058  8096               	bsf	3990,0,c	;volatile
   680  00105A  0012               	return	
   681  00105C                     l178:
   682                           
   683                           ;RobotLib.c: 163: else
   684                           ;RobotLib.c: 164: TRISE0 = 0;
   685  00105C  9096               	bcf	3990,0,c	;volatile
   686                           
   687                           ;RobotLib.c: 165: break;
   688  00105E  0012               	return	
   689  001060                     
   690                           ;RobotLib.c: 168: if(mode)
   691  001060  5001               	movf	pinMode@mode,w,c
   692  001062  B4D8               	btfsc	status,2,c
   693  001064  D002               	goto	l181
   694                           
   695                           ;RobotLib.c: 169: TRISE1 = 1;
   696  001066  8296               	bsf	3990,1,c	;volatile
   697  001068  0012               	return	
   698  00106A                     l181:
   699                           
   700                           ;RobotLib.c: 170: else
   701                           ;RobotLib.c: 171: TRISE1 = 0;
   702  00106A  9296               	bcf	3990,1,c	;volatile
   703                           
   704                           ;RobotLib.c: 172: break;
   705  00106C  0012               	return	
   706  00106E                     
   707                           ;RobotLib.c: 175: if(mode)
   708  00106E  5001               	movf	pinMode@mode,w,c
   709  001070  B4D8               	btfsc	status,2,c
   710  001072  D002               	goto	l184
   711                           
   712                           ;RobotLib.c: 176: TRISE2 = 1;
   713  001074  8496               	bsf	3990,2,c	;volatile
   714  001076  0012               	return	
   715  001078                     l184:
   716                           
   717                           ;RobotLib.c: 177: else
   718                           ;RobotLib.c: 178: TRISE2 = 0;
   719  001078  9496               	bcf	3990,2,c	;volatile
   720                           
   721                           ;RobotLib.c: 179: break;
   722  00107A  0012               	return	
   723  00107C                     
   724                           ;RobotLib.c: 182: if(mode)
   725  00107C  5001               	movf	pinMode@mode,w,c
   726  00107E  B4D8               	btfsc	status,2,c
   727  001080  D002               	goto	l187
   728                           
   729                           ;RobotLib.c: 183: TRISC5 = 1;
   730  001082  8A94               	bsf	3988,5,c	;volatile
   731  001084  0012               	return	
   732  001086                     l187:
   733                           
   734                           ;RobotLib.c: 184: else
   735                           ;RobotLib.c: 185: TRISC5 = 0;
   736  001086  9A94               	bcf	3988,5,c	;volatile
   737                           
   738                           ;RobotLib.c: 186: break;
   739  001088  0012               	return	
   740  00108A                     
   741                           ;RobotLib.c: 189: if(mode)
   742  00108A  5001               	movf	pinMode@mode,w,c
   743  00108C  B4D8               	btfsc	status,2,c
   744  00108E  D002               	goto	l190
   745                           
   746                           ;RobotLib.c: 190: TRISB4 = 1;
   747  001090  8893               	bsf	3987,4,c	;volatile
   748  001092  0012               	return	
   749  001094                     l190:
   750                           
   751                           ;RobotLib.c: 191: else
   752                           ;RobotLib.c: 192: TRISB4 = 0;
   753  001094  9893               	bcf	3987,4,c	;volatile
   754                           
   755                           ;RobotLib.c: 193: break;
   756  001096  0012               	return	
   757  001098                     
   758                           ;RobotLib.c: 196: if(mode)
   759  001098  5001               	movf	pinMode@mode,w,c
   760  00109A  B4D8               	btfsc	status,2,c
   761  00109C  D002               	goto	l193
   762                           
   763                           ;RobotLib.c: 197: TRISB5 = 1;
   764  00109E  8A93               	bsf	3987,5,c	;volatile
   765  0010A0  0012               	return	
   766  0010A2                     l193:
   767                           
   768                           ;RobotLib.c: 198: else
   769                           ;RobotLib.c: 199: TRISB5 = 0;
   770  0010A2  9A93               	bcf	3987,5,c	;volatile
   771                           
   772                           ;RobotLib.c: 200: break;
   773  0010A4  0012               	return	
   774  0010A6                     
   775                           ;RobotLib.c: 203: if(mode)
   776  0010A6  5001               	movf	pinMode@mode,w,c
   777  0010A8  B4D8               	btfsc	status,2,c
   778  0010AA  D002               	goto	l196
   779                           
   780                           ;RobotLib.c: 204: TRISB0 = 1;
   781  0010AC  8093               	bsf	3987,0,c	;volatile
   782  0010AE  0012               	return	
   783  0010B0                     l196:
   784                           
   785                           ;RobotLib.c: 205: else
   786                           ;RobotLib.c: 206: TRISB0 = 0;
   787  0010B0  9093               	bcf	3987,0,c	;volatile
   788                           
   789                           ;RobotLib.c: 207: break;
   790  0010B2  0012               	return	
   791  0010B4                     
   792                           ;RobotLib.c: 210: if(mode)
   793  0010B4  5001               	movf	pinMode@mode,w,c
   794  0010B6  B4D8               	btfsc	status,2,c
   795  0010B8  D002               	goto	l199
   796                           
   797                           ;RobotLib.c: 211: TRISC7 = 1;
   798  0010BA  8E94               	bsf	3988,7,c	;volatile
   799  0010BC  0012               	return	
   800  0010BE                     l199:
   801                           
   802                           ;RobotLib.c: 212: else
   803                           ;RobotLib.c: 213: TRISC7 = 0;
   804  0010BE  9E94               	bcf	3988,7,c	;volatile
   805                           
   806                           ;RobotLib.c: 214: break;
   807  0010C0  0012               	return	
   808  0010C2                     
   809                           ;RobotLib.c: 217: if(mode)
   810  0010C2  5001               	movf	pinMode@mode,w,c
   811  0010C4  B4D8               	btfsc	status,2,c
   812  0010C6  D002               	goto	l202
   813                           
   814                           ;RobotLib.c: 218: TRISC6 = 1;
   815  0010C8  8C94               	bsf	3988,6,c	;volatile
   816  0010CA  0012               	return	
   817  0010CC                     l202:
   818                           
   819                           ;RobotLib.c: 219: else
   820                           ;RobotLib.c: 220: TRISC6 = 0;
   821  0010CC  9C94               	bcf	3988,6,c	;volatile
   822                           
   823                           ;RobotLib.c: 221: break;
   824  0010CE  0012               	return	
   825  0010D0                     
   826                           ;RobotLib.c: 224: if(mode)
   827  0010D0  5001               	movf	pinMode@mode,w,c
   828  0010D2  B4D8               	btfsc	status,2,c
   829  0010D4  D002               	goto	l205
   830                           
   831                           ;RobotLib.c: 225: TRISC4 = 1;
   832  0010D6  8894               	bsf	3988,4,c	;volatile
   833  0010D8  0012               	return	
   834  0010DA                     l205:
   835                           
   836                           ;RobotLib.c: 226: else
   837                           ;RobotLib.c: 227: TRISC4 = 0;
   838  0010DA  9894               	bcf	3988,4,c	;volatile
   839                           
   840                           ;RobotLib.c: 228: break;
   841  0010DC  0012               	return	
   842  0010DE                     
   843                           ;RobotLib.c: 231: if(mode)
   844  0010DE  5001               	movf	pinMode@mode,w,c
   845  0010E0  B4D8               	btfsc	status,2,c
   846  0010E2  D002               	goto	l208
   847                           
   848                           ;RobotLib.c: 232: TRISC3 = 1;
   849  0010E4  8694               	bsf	3988,3,c	;volatile
   850  0010E6  0012               	return	
   851  0010E8                     l208:
   852                           
   853                           ;RobotLib.c: 233: else
   854                           ;RobotLib.c: 234: TRISC3 = 0;
   855  0010E8  9694               	bcf	3988,3,c	;volatile
   856                           
   857                           ;RobotLib.c: 235: break;
   858  0010EA  0012               	return	
   859  0010EC                     
   860                           ;RobotLib.c: 238: if(mode)
   861  0010EC  5001               	movf	pinMode@mode,w,c
   862  0010EE  B4D8               	btfsc	status,2,c
   863  0010F0  D002               	goto	l211
   864                           
   865                           ;RobotLib.c: 239: TRISA4 = 1;
   866  0010F2  8892               	bsf	3986,4,c	;volatile
   867  0010F4  0012               	return	
   868  0010F6                     l211:
   869                           
   870                           ;RobotLib.c: 240: else
   871                           ;RobotLib.c: 241: TRISA4 = 0;
   872  0010F6  9892               	bcf	3986,4,c	;volatile
   873                           
   874                           ;RobotLib.c: 242: break;
   875  0010F8  0012               	return	
   876  0010FA                     
   877                           ;RobotLib.c: 245: if(mode)
   878  0010FA  5001               	movf	pinMode@mode,w,c
   879  0010FC  B4D8               	btfsc	status,2,c
   880  0010FE  D002               	goto	l214
   881                           
   882                           ;RobotLib.c: 246: TRISC0 = 1;
   883  001100  8094               	bsf	3988,0,c	;volatile
   884  001102  0012               	return	
   885  001104                     l214:
   886                           
   887                           ;RobotLib.c: 247: else
   888                           ;RobotLib.c: 248: TRISC0 = 0;
   889  001104  9094               	bcf	3988,0,c	;volatile
   890                           
   891                           ;RobotLib.c: 249: break;
   892  001106  0012               	return	
   893  001108                     
   894                           ;RobotLib.c: 252: if(mode)
   895  001108  5001               	movf	pinMode@mode,w,c
   896  00110A  B4D8               	btfsc	status,2,c
   897  00110C  D002               	goto	l217
   898                           
   899                           ;RobotLib.c: 253: TRISB3 = 1;
   900  00110E  8693               	bsf	3987,3,c	;volatile
   901  001110  0012               	return	
   902  001112                     l217:
   903                           
   904                           ;RobotLib.c: 254: else
   905                           ;RobotLib.c: 255: TRISB3 = 0;
   906  001112  9693               	bcf	3987,3,c	;volatile
   907                           
   908                           ;RobotLib.c: 256: break;
   909  001114  0012               	return	
   910  001116                     
   911                           ;RobotLib.c: 259: if(mode)
   912  001116  5001               	movf	pinMode@mode,w,c
   913  001118  B4D8               	btfsc	status,2,c
   914  00111A  D002               	goto	l220
   915                           
   916                           ;RobotLib.c: 260: TRISD0 = 1;
   917  00111C  8095               	bsf	3989,0,c	;volatile
   918  00111E  0012               	return	
   919  001120                     l220:
   920                           
   921                           ;RobotLib.c: 261: else
   922                           ;RobotLib.c: 262: TRISD0 = 0;
   923  001120  9095               	bcf	3989,0,c	;volatile
   924                           
   925                           ;RobotLib.c: 263: break;
   926  001122  0012               	return	
   927  001124                     
   928                           ;RobotLib.c: 266: if(mode)
   929  001124  5001               	movf	pinMode@mode,w,c
   930  001126  B4D8               	btfsc	status,2,c
   931  001128  D002               	goto	l223
   932                           
   933                           ;RobotLib.c: 267: TRISD1 = 1;
   934  00112A  8295               	bsf	3989,1,c	;volatile
   935  00112C  0012               	return	
   936  00112E                     l223:
   937                           
   938                           ;RobotLib.c: 268: else
   939                           ;RobotLib.c: 269: TRISD1 = 0;
   940  00112E  9295               	bcf	3989,1,c	;volatile
   941                           
   942                           ;RobotLib.c: 270: break;
   943  001130  0012               	return	
   944  001132                     
   945                           ;RobotLib.c: 274: if(mode)
   946  001132  5001               	movf	pinMode@mode,w,c
   947  001134  B4D8               	btfsc	status,2,c
   948  001136  D002               	goto	l226
   949                           
   950                           ;RobotLib.c: 275: TRISB1 = 1;
   951  001138  8293               	bsf	3987,1,c	;volatile
   952  00113A  0012               	return	
   953  00113C                     l226:
   954                           
   955                           ;RobotLib.c: 276: else
   956                           ;RobotLib.c: 277: TRISB1 = 0;
   957  00113C  9293               	bcf	3987,1,c	;volatile
   958                           
   959                           ;RobotLib.c: 278: break;
   960  00113E  0012               	return	
   961  001140                     
   962                           ;RobotLib.c: 281: if(mode)
   963  001140  5001               	movf	pinMode@mode,w,c
   964  001142  B4D8               	btfsc	status,2,c
   965  001144  D002               	goto	l229
   966                           
   967                           ;RobotLib.c: 282: TRISB2 = 1;
   968  001146  8493               	bsf	3987,2,c	;volatile
   969  001148  0012               	return	
   970  00114A                     l229:
   971                           
   972                           ;RobotLib.c: 283: else
   973                           ;RobotLib.c: 284: TRISB2 = 0;
   974  00114A  9493               	bcf	3987,2,c	;volatile
   975                           
   976                           ;RobotLib.c: 287: }
   977                           
   978                           ;RobotLib.c: 285: break;
   979  00114C  0012               	return	
   980  00114E                     l160:
   981  00114E  5002               	movf	pinMode@pin,w,c
   982                           
   983                           ; Switch size 1, requested type "space"
   984                           ; Number of cases is 23, Range of values is 0 to 22
   985                           ; switch strategies available:
   986                           ; Name         Instructions Cycles
   987                           ; simple_byte           70    36 (average)
   988                           ;	Chosen strategy is simple_byte
   989  001150  0A00               	xorlw	0	; case 0
   990  001152  B4D8               	btfsc	status,2,c
   991  001154  D75B               	goto	l161
   992  001156  0A01               	xorlw	1	; case 1
   993  001158  B4D8               	btfsc	status,2,c
   994  00115A  D75F               	goto	l165
   995  00115C  0A03               	xorlw	3	; case 2
   996  00115E  B4D8               	btfsc	status,2,c
   997  001160  D763               	goto	l168
   998  001162  0A01               	xorlw	1	; case 3
   999  001164  B4D8               	btfsc	status,2,c
  1000  001166  D767               	goto	l171
  1001  001168  0A07               	xorlw	7	; case 4
  1002  00116A  B4D8               	btfsc	status,2,c
  1003  00116C  D76B               	goto	l174
  1004  00116E  0A01               	xorlw	1	; case 5
  1005  001170  B4D8               	btfsc	status,2,c
  1006  001172  D76F               	goto	l177
  1007  001174  0A03               	xorlw	3	; case 6
  1008  001176  B4D8               	btfsc	status,2,c
  1009  001178  D773               	goto	l180
  1010  00117A  0A01               	xorlw	1	; case 7
  1011  00117C  B4D8               	btfsc	status,2,c
  1012  00117E  D777               	goto	l183
  1013  001180  0A0F               	xorlw	15	; case 8
  1014  001182  B4D8               	btfsc	status,2,c
  1015  001184  D77B               	goto	l186
  1016  001186  0A01               	xorlw	1	; case 9
  1017  001188  B4D8               	btfsc	status,2,c
  1018  00118A  D77F               	goto	l189
  1019  00118C  0A03               	xorlw	3	; case 10
  1020  00118E  B4D8               	btfsc	status,2,c
  1021  001190  D783               	goto	l192
  1022  001192  0A01               	xorlw	1	; case 11
  1023  001194  B4D8               	btfsc	status,2,c
  1024  001196  D787               	goto	l195
  1025  001198  0A07               	xorlw	7	; case 12
  1026  00119A  B4D8               	btfsc	status,2,c
  1027  00119C  D78B               	goto	l198
  1028  00119E  0A01               	xorlw	1	; case 13
  1029  0011A0  B4D8               	btfsc	status,2,c
  1030  0011A2  D78F               	goto	l201
  1031  0011A4  0A03               	xorlw	3	; case 14
  1032  0011A6  B4D8               	btfsc	status,2,c
  1033  0011A8  D793               	goto	l204
  1034  0011AA  0A01               	xorlw	1	; case 15
  1035  0011AC  B4D8               	btfsc	status,2,c
  1036  0011AE  D797               	goto	l207
  1037  0011B0  0A1F               	xorlw	31	; case 16
  1038  0011B2  B4D8               	btfsc	status,2,c
  1039  0011B4  D79B               	goto	l210
  1040  0011B6  0A01               	xorlw	1	; case 17
  1041  0011B8  B4D8               	btfsc	status,2,c
  1042  0011BA  D79F               	goto	l213
  1043  0011BC  0A03               	xorlw	3	; case 18
  1044  0011BE  B4D8               	btfsc	status,2,c
  1045  0011C0  D7A3               	goto	l216
  1046  0011C2  0A01               	xorlw	1	; case 19
  1047  0011C4  B4D8               	btfsc	status,2,c
  1048  0011C6  D7A7               	goto	l219
  1049  0011C8  0A07               	xorlw	7	; case 20
  1050  0011CA  B4D8               	btfsc	status,2,c
  1051  0011CC  D7AB               	goto	l222
  1052  0011CE  0A01               	xorlw	1	; case 21
  1053  0011D0  B4D8               	btfsc	status,2,c
  1054  0011D2  D7AF               	goto	l225
  1055  0011D4  0A03               	xorlw	3	; case 22
  1056  0011D6  A4D8               	btfss	status,2,c
  1057  0011D8  0012               	return	
  1058  0011DA  D7B2               	goto	l228
  1059  0011DC                     __end_of_pinMode:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           indf0	equ	0xFEF
  1066                           fsr0h	equ	0xFEA
  1067                           fsr0l	equ	0xFE9
  1068                           status	equ	0xFD8
  1069                           
  1070 ;; *************** function _digitalWrite *****************
  1071 ;; Defined at:
  1072 ;;		line 290 in file "RobotLib.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  pin             1    wreg     unsigned char 
  1075 ;;  mode            1    0[COMRAM] unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  pin             1    1[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_initOutputs
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text6
  1101  0011DC                     __ptext6:
  1102                           	opt stack 0
  1103  0011DC                     _digitalWrite:
  1104                           	opt stack 28
  1105                           
  1106                           ;incstack = 0
  1107                           ;digitalWrite@pin stored from wreg
  1108  0011DC  6E02               	movwf	digitalWrite@pin,c
  1109                           
  1110                           ;RobotLib.c: 291: switch(pin)
  1111  0011DE  D0A1               	goto	l234
  1112  0011E0                     
  1113                           ;RobotLib.c: 294: if(mode)
  1114  0011E0  5001               	movf	digitalWrite@mode,w,c
  1115  0011E2  B4D8               	btfsc	status,2,c
  1116  0011E4  D002               	goto	l236
  1117                           
  1118                           ;RobotLib.c: 295: LATAbits.LATA0 = 1;
  1119  0011E6  8089               	bsf	3977,0,c	;volatile
  1120  0011E8  0012               	return	
  1121  0011EA                     l236:
  1122                           
  1123                           ;RobotLib.c: 296: else
  1124                           ;RobotLib.c: 297: LATAbits.LATA0 = 0;
  1125  0011EA  9089               	bcf	3977,0,c	;volatile
  1126                           
  1127                           ;RobotLib.c: 298: break;
  1128  0011EC  0012               	return	
  1129  0011EE                     
  1130                           ;RobotLib.c: 301: if(mode)
  1131  0011EE  5001               	movf	digitalWrite@mode,w,c
  1132  0011F0  B4D8               	btfsc	status,2,c
  1133  0011F2  D002               	goto	l240
  1134                           
  1135                           ;RobotLib.c: 302: LATAbits.LATA1 = 1;
  1136  0011F4  8289               	bsf	3977,1,c	;volatile
  1137  0011F6  0012               	return	
  1138  0011F8                     l240:
  1139                           
  1140                           ;RobotLib.c: 303: else
  1141                           ;RobotLib.c: 304: LATAbits.LATA1 = 0;
  1142  0011F8  9289               	bcf	3977,1,c	;volatile
  1143                           
  1144                           ;RobotLib.c: 305: break;
  1145  0011FA  0012               	return	
  1146  0011FC                     
  1147                           ;RobotLib.c: 308: if(mode)
  1148  0011FC  5001               	movf	digitalWrite@mode,w,c
  1149  0011FE  B4D8               	btfsc	status,2,c
  1150  001200  D002               	goto	l243
  1151                           
  1152                           ;RobotLib.c: 309: LATAbits.LATA2 = 1;
  1153  001202  8489               	bsf	3977,2,c	;volatile
  1154  001204  0012               	return	
  1155  001206                     l243:
  1156                           
  1157                           ;RobotLib.c: 310: else
  1158                           ;RobotLib.c: 311: LATAbits.LATA2 = 0;
  1159  001206  9489               	bcf	3977,2,c	;volatile
  1160                           
  1161                           ;RobotLib.c: 312: break;
  1162  001208  0012               	return	
  1163  00120A                     
  1164                           ;RobotLib.c: 315: if(mode)
  1165  00120A  5001               	movf	digitalWrite@mode,w,c
  1166  00120C  B4D8               	btfsc	status,2,c
  1167  00120E  D002               	goto	l246
  1168                           
  1169                           ;RobotLib.c: 316: LATAbits.LATA3 = 1;
  1170  001210  8689               	bsf	3977,3,c	;volatile
  1171  001212  0012               	return	
  1172  001214                     l246:
  1173                           
  1174                           ;RobotLib.c: 317: else
  1175                           ;RobotLib.c: 318: LATAbits.LATA3 = 0;
  1176  001214  9689               	bcf	3977,3,c	;volatile
  1177                           
  1178                           ;RobotLib.c: 319: break;
  1179  001216  0012               	return	
  1180  001218                     
  1181                           ;RobotLib.c: 322: if(mode)
  1182  001218  5001               	movf	digitalWrite@mode,w,c
  1183  00121A  B4D8               	btfsc	status,2,c
  1184  00121C  D002               	goto	l249
  1185                           
  1186                           ;RobotLib.c: 323: LATAbits.LATA5 = 1;
  1187  00121E  8A89               	bsf	3977,5,c	;volatile
  1188  001220  0012               	return	
  1189  001222                     l249:
  1190                           
  1191                           ;RobotLib.c: 324: else
  1192                           ;RobotLib.c: 325: LATAbits.LATA5 = 0;
  1193  001222  9A89               	bcf	3977,5,c	;volatile
  1194                           
  1195                           ;RobotLib.c: 326: break;
  1196  001224  0012               	return	
  1197  001226                     
  1198                           ;RobotLib.c: 329: if(mode)
  1199  001226  5001               	movf	digitalWrite@mode,w,c
  1200  001228  B4D8               	btfsc	status,2,c
  1201  00122A  D002               	goto	l252
  1202                           
  1203                           ;RobotLib.c: 330: LATEbits.LATE0 = 1;
  1204  00122C  808D               	bsf	3981,0,c	;volatile
  1205  00122E  0012               	return	
  1206  001230                     l252:
  1207                           
  1208                           ;RobotLib.c: 331: else
  1209                           ;RobotLib.c: 332: LATEbits.LATE0 = 0;
  1210  001230  908D               	bcf	3981,0,c	;volatile
  1211                           
  1212                           ;RobotLib.c: 333: break;
  1213  001232  0012               	return	
  1214  001234                     
  1215                           ;RobotLib.c: 336: if(mode)
  1216  001234  5001               	movf	digitalWrite@mode,w,c
  1217  001236  B4D8               	btfsc	status,2,c
  1218  001238  D002               	goto	l255
  1219                           
  1220                           ;RobotLib.c: 337: LATEbits.LATE1 = 1;
  1221  00123A  828D               	bsf	3981,1,c	;volatile
  1222  00123C  0012               	return	
  1223  00123E                     l255:
  1224                           
  1225                           ;RobotLib.c: 338: else
  1226                           ;RobotLib.c: 339: LATEbits.LATE1 = 0;
  1227  00123E  928D               	bcf	3981,1,c	;volatile
  1228                           
  1229                           ;RobotLib.c: 340: break;
  1230  001240  0012               	return	
  1231  001242                     
  1232                           ;RobotLib.c: 343: if(mode)
  1233  001242  5001               	movf	digitalWrite@mode,w,c
  1234  001244  B4D8               	btfsc	status,2,c
  1235  001246  D002               	goto	l258
  1236                           
  1237                           ;RobotLib.c: 344: LATEbits.LATE2 = 1;
  1238  001248  848D               	bsf	3981,2,c	;volatile
  1239  00124A  0012               	return	
  1240  00124C                     l258:
  1241                           
  1242                           ;RobotLib.c: 345: else
  1243                           ;RobotLib.c: 346: LATEbits.LATE2 = 0;
  1244  00124C  948D               	bcf	3981,2,c	;volatile
  1245                           
  1246                           ;RobotLib.c: 347: break;
  1247  00124E  0012               	return	
  1248  001250                     
  1249                           ;RobotLib.c: 350: if(mode)
  1250  001250  5001               	movf	digitalWrite@mode,w,c
  1251  001252  B4D8               	btfsc	status,2,c
  1252  001254  D002               	goto	l261
  1253                           
  1254                           ;RobotLib.c: 351: LATCbits.LATC5 = 1;
  1255  001256  8A8B               	bsf	3979,5,c	;volatile
  1256  001258  0012               	return	
  1257  00125A                     l261:
  1258                           
  1259                           ;RobotLib.c: 352: else
  1260                           ;RobotLib.c: 353: LATCbits.LATC5 = 0;
  1261  00125A  9A8B               	bcf	3979,5,c	;volatile
  1262                           
  1263                           ;RobotLib.c: 354: break;
  1264  00125C  0012               	return	
  1265  00125E                     
  1266                           ;RobotLib.c: 357: if(mode)
  1267  00125E  5001               	movf	digitalWrite@mode,w,c
  1268  001260  B4D8               	btfsc	status,2,c
  1269  001262  D002               	goto	l264
  1270                           
  1271                           ;RobotLib.c: 358: LATBbits.LATB4 = 1;
  1272  001264  888A               	bsf	3978,4,c	;volatile
  1273  001266  0012               	return	
  1274  001268                     l264:
  1275                           
  1276                           ;RobotLib.c: 359: else
  1277                           ;RobotLib.c: 360: LATBbits.LATB4 = 0;
  1278  001268  988A               	bcf	3978,4,c	;volatile
  1279                           
  1280                           ;RobotLib.c: 361: break;
  1281  00126A  0012               	return	
  1282  00126C                     
  1283                           ;RobotLib.c: 364: if(mode)
  1284  00126C  5001               	movf	digitalWrite@mode,w,c
  1285  00126E  B4D8               	btfsc	status,2,c
  1286  001270  D002               	goto	l267
  1287                           
  1288                           ;RobotLib.c: 365: LATBbits.LATB5 = 1;
  1289  001272  8A8A               	bsf	3978,5,c	;volatile
  1290  001274  0012               	return	
  1291  001276                     l267:
  1292                           
  1293                           ;RobotLib.c: 366: else
  1294                           ;RobotLib.c: 367: LATBbits.LATB5 = 0;
  1295  001276  9A8A               	bcf	3978,5,c	;volatile
  1296                           
  1297                           ;RobotLib.c: 368: break;
  1298  001278  0012               	return	
  1299  00127A                     
  1300                           ;RobotLib.c: 371: if(mode)
  1301  00127A  5001               	movf	digitalWrite@mode,w,c
  1302  00127C  B4D8               	btfsc	status,2,c
  1303  00127E  D002               	goto	l270
  1304                           
  1305                           ;RobotLib.c: 372: LATBbits.LATB0 = 1;
  1306  001280  808A               	bsf	3978,0,c	;volatile
  1307  001282  0012               	return	
  1308  001284                     l270:
  1309                           
  1310                           ;RobotLib.c: 373: else
  1311                           ;RobotLib.c: 374: LATBbits.LATB0 = 0;
  1312  001284  908A               	bcf	3978,0,c	;volatile
  1313                           
  1314                           ;RobotLib.c: 375: break;
  1315  001286  0012               	return	
  1316  001288                     
  1317                           ;RobotLib.c: 378: if(mode)
  1318  001288  5001               	movf	digitalWrite@mode,w,c
  1319  00128A  B4D8               	btfsc	status,2,c
  1320  00128C  D002               	goto	l273
  1321                           
  1322                           ;RobotLib.c: 379: LATCbits.LATC7 = 1;
  1323  00128E  8E8B               	bsf	3979,7,c	;volatile
  1324  001290  0012               	return	
  1325  001292                     l273:
  1326                           
  1327                           ;RobotLib.c: 380: else
  1328                           ;RobotLib.c: 381: LATCbits.LATC7 = 0;
  1329  001292  9E8B               	bcf	3979,7,c	;volatile
  1330                           
  1331                           ;RobotLib.c: 382: break;
  1332  001294  0012               	return	
  1333  001296                     
  1334                           ;RobotLib.c: 385: if(mode)
  1335  001296  5001               	movf	digitalWrite@mode,w,c
  1336  001298  B4D8               	btfsc	status,2,c
  1337  00129A  D002               	goto	l276
  1338                           
  1339                           ;RobotLib.c: 386: LATCbits.LATC6 = 1;
  1340  00129C  8C8B               	bsf	3979,6,c	;volatile
  1341  00129E  0012               	return	
  1342  0012A0                     l276:
  1343                           
  1344                           ;RobotLib.c: 387: else
  1345                           ;RobotLib.c: 388: LATCbits.LATC6 = 0;
  1346  0012A0  9C8B               	bcf	3979,6,c	;volatile
  1347                           
  1348                           ;RobotLib.c: 389: break;
  1349  0012A2  0012               	return	
  1350  0012A4                     
  1351                           ;RobotLib.c: 392: if(mode)
  1352  0012A4  5001               	movf	digitalWrite@mode,w,c
  1353  0012A6  B4D8               	btfsc	status,2,c
  1354  0012A8  D002               	goto	l279
  1355                           
  1356                           ;RobotLib.c: 393: LATCbits.LATC4 = 1;
  1357  0012AA  888B               	bsf	3979,4,c	;volatile
  1358  0012AC  0012               	return	
  1359  0012AE                     l279:
  1360                           
  1361                           ;RobotLib.c: 394: else
  1362                           ;RobotLib.c: 395: LATCbits.LATC4 = 0;
  1363  0012AE  988B               	bcf	3979,4,c	;volatile
  1364                           
  1365                           ;RobotLib.c: 396: break;
  1366  0012B0  0012               	return	
  1367  0012B2                     
  1368                           ;RobotLib.c: 399: if(mode)
  1369  0012B2  5001               	movf	digitalWrite@mode,w,c
  1370  0012B4  B4D8               	btfsc	status,2,c
  1371  0012B6  D002               	goto	l282
  1372                           
  1373                           ;RobotLib.c: 400: LATCbits.LATC3 = 1;
  1374  0012B8  868B               	bsf	3979,3,c	;volatile
  1375  0012BA  0012               	return	
  1376  0012BC                     l282:
  1377                           
  1378                           ;RobotLib.c: 401: else
  1379                           ;RobotLib.c: 402: LATCbits.LATC3 = 0;
  1380  0012BC  968B               	bcf	3979,3,c	;volatile
  1381                           
  1382                           ;RobotLib.c: 403: break;
  1383  0012BE  0012               	return	
  1384  0012C0                     
  1385                           ;RobotLib.c: 406: if(mode)
  1386  0012C0  5001               	movf	digitalWrite@mode,w,c
  1387  0012C2  B4D8               	btfsc	status,2,c
  1388  0012C4  D002               	goto	l285
  1389                           
  1390                           ;RobotLib.c: 407: LATAbits.LATA4 = 1;
  1391  0012C6  8889               	bsf	3977,4,c	;volatile
  1392  0012C8  0012               	return	
  1393  0012CA                     l285:
  1394                           
  1395                           ;RobotLib.c: 408: else
  1396                           ;RobotLib.c: 409: LATAbits.LATA4 = 0;
  1397  0012CA  9889               	bcf	3977,4,c	;volatile
  1398                           
  1399                           ;RobotLib.c: 410: break;
  1400  0012CC  0012               	return	
  1401  0012CE                     
  1402                           ;RobotLib.c: 413: if(mode)
  1403  0012CE  5001               	movf	digitalWrite@mode,w,c
  1404  0012D0  B4D8               	btfsc	status,2,c
  1405  0012D2  D002               	goto	l288
  1406                           
  1407                           ;RobotLib.c: 414: LATCbits.LATC0 = 1;
  1408  0012D4  808B               	bsf	3979,0,c	;volatile
  1409  0012D6  0012               	return	
  1410  0012D8                     l288:
  1411                           
  1412                           ;RobotLib.c: 415: else
  1413                           ;RobotLib.c: 416: LATCbits.LATC0 = 0;
  1414  0012D8  908B               	bcf	3979,0,c	;volatile
  1415                           
  1416                           ;RobotLib.c: 417: break;
  1417  0012DA  0012               	return	
  1418  0012DC                     
  1419                           ;RobotLib.c: 420: if(mode)
  1420  0012DC  5001               	movf	digitalWrite@mode,w,c
  1421  0012DE  B4D8               	btfsc	status,2,c
  1422  0012E0  D002               	goto	l291
  1423                           
  1424                           ;RobotLib.c: 421: LATBbits.LATB3 = 1;
  1425  0012E2  868A               	bsf	3978,3,c	;volatile
  1426  0012E4  0012               	return	
  1427  0012E6                     l291:
  1428                           
  1429                           ;RobotLib.c: 422: else
  1430                           ;RobotLib.c: 423: LATBbits.LATB3 = 0;
  1431  0012E6  968A               	bcf	3978,3,c	;volatile
  1432                           
  1433                           ;RobotLib.c: 424: break;
  1434  0012E8  0012               	return	
  1435  0012EA                     
  1436                           ;RobotLib.c: 427: if(mode)
  1437  0012EA  5001               	movf	digitalWrite@mode,w,c
  1438  0012EC  B4D8               	btfsc	status,2,c
  1439  0012EE  D002               	goto	l294
  1440                           
  1441                           ;RobotLib.c: 428: LATDbits.LATD0 = 1;
  1442  0012F0  808C               	bsf	3980,0,c	;volatile
  1443  0012F2  0012               	return	
  1444  0012F4                     l294:
  1445                           
  1446                           ;RobotLib.c: 429: else
  1447                           ;RobotLib.c: 430: LATDbits.LATD0 = 0;
  1448  0012F4  908C               	bcf	3980,0,c	;volatile
  1449                           
  1450                           ;RobotLib.c: 431: break;
  1451  0012F6  0012               	return	
  1452  0012F8                     
  1453                           ;RobotLib.c: 434: if(mode)
  1454  0012F8  5001               	movf	digitalWrite@mode,w,c
  1455  0012FA  B4D8               	btfsc	status,2,c
  1456  0012FC  D002               	goto	l297
  1457                           
  1458                           ;RobotLib.c: 435: LATDbits.LATD1 = 1;
  1459  0012FE  828C               	bsf	3980,1,c	;volatile
  1460  001300  0012               	return	
  1461  001302                     l297:
  1462                           
  1463                           ;RobotLib.c: 436: else
  1464                           ;RobotLib.c: 437: LATDbits.LATD1 = 0;
  1465  001302  928C               	bcf	3980,1,c	;volatile
  1466                           
  1467                           ;RobotLib.c: 438: break;
  1468  001304  0012               	return	
  1469  001306                     
  1470                           ;RobotLib.c: 442: if(mode)
  1471  001306  5001               	movf	digitalWrite@mode,w,c
  1472  001308  B4D8               	btfsc	status,2,c
  1473  00130A  D002               	goto	l300
  1474                           
  1475                           ;RobotLib.c: 443: LATBbits.LATB1 = 1;
  1476  00130C  828A               	bsf	3978,1,c	;volatile
  1477  00130E  0012               	return	
  1478  001310                     l300:
  1479                           
  1480                           ;RobotLib.c: 444: else
  1481                           ;RobotLib.c: 445: LATBbits.LATB1 = 0;
  1482  001310  928A               	bcf	3978,1,c	;volatile
  1483                           
  1484                           ;RobotLib.c: 446: break;
  1485  001312  0012               	return	
  1486  001314                     
  1487                           ;RobotLib.c: 449: if(mode)
  1488  001314  5001               	movf	digitalWrite@mode,w,c
  1489  001316  B4D8               	btfsc	status,2,c
  1490  001318  D002               	goto	l303
  1491                           
  1492                           ;RobotLib.c: 450: LATBbits.LATB2 = 1;
  1493  00131A  848A               	bsf	3978,2,c	;volatile
  1494  00131C  0012               	return	
  1495  00131E                     l303:
  1496                           
  1497                           ;RobotLib.c: 451: else
  1498                           ;RobotLib.c: 452: LATBbits.LATB2 = 0;
  1499  00131E  948A               	bcf	3978,2,c	;volatile
  1500                           
  1501                           ;RobotLib.c: 455: }
  1502                           
  1503                           ;RobotLib.c: 453: break;
  1504  001320  0012               	return	
  1505  001322                     l234:
  1506  001322  5002               	movf	digitalWrite@pin,w,c
  1507                           
  1508                           ; Switch size 1, requested type "space"
  1509                           ; Number of cases is 23, Range of values is 0 to 22
  1510                           ; switch strategies available:
  1511                           ; Name         Instructions Cycles
  1512                           ; simple_byte           70    36 (average)
  1513                           ;	Chosen strategy is simple_byte
  1514  001324  0A00               	xorlw	0	; case 0
  1515  001326  B4D8               	btfsc	status,2,c
  1516  001328  D75B               	goto	l235
  1517  00132A  0A01               	xorlw	1	; case 1
  1518  00132C  B4D8               	btfsc	status,2,c
  1519  00132E  D75F               	goto	l239
  1520  001330  0A03               	xorlw	3	; case 2
  1521  001332  B4D8               	btfsc	status,2,c
  1522  001334  D763               	goto	l242
  1523  001336  0A01               	xorlw	1	; case 3
  1524  001338  B4D8               	btfsc	status,2,c
  1525  00133A  D767               	goto	l245
  1526  00133C  0A07               	xorlw	7	; case 4
  1527  00133E  B4D8               	btfsc	status,2,c
  1528  001340  D76B               	goto	l248
  1529  001342  0A01               	xorlw	1	; case 5
  1530  001344  B4D8               	btfsc	status,2,c
  1531  001346  D76F               	goto	l251
  1532  001348  0A03               	xorlw	3	; case 6
  1533  00134A  B4D8               	btfsc	status,2,c
  1534  00134C  D773               	goto	l254
  1535  00134E  0A01               	xorlw	1	; case 7
  1536  001350  B4D8               	btfsc	status,2,c
  1537  001352  D777               	goto	l257
  1538  001354  0A0F               	xorlw	15	; case 8
  1539  001356  B4D8               	btfsc	status,2,c
  1540  001358  D77B               	goto	l260
  1541  00135A  0A01               	xorlw	1	; case 9
  1542  00135C  B4D8               	btfsc	status,2,c
  1543  00135E  D77F               	goto	l263
  1544  001360  0A03               	xorlw	3	; case 10
  1545  001362  B4D8               	btfsc	status,2,c
  1546  001364  D783               	goto	l266
  1547  001366  0A01               	xorlw	1	; case 11
  1548  001368  B4D8               	btfsc	status,2,c
  1549  00136A  D787               	goto	l269
  1550  00136C  0A07               	xorlw	7	; case 12
  1551  00136E  B4D8               	btfsc	status,2,c
  1552  001370  D78B               	goto	l272
  1553  001372  0A01               	xorlw	1	; case 13
  1554  001374  B4D8               	btfsc	status,2,c
  1555  001376  D78F               	goto	l275
  1556  001378  0A03               	xorlw	3	; case 14
  1557  00137A  B4D8               	btfsc	status,2,c
  1558  00137C  D793               	goto	l278
  1559  00137E  0A01               	xorlw	1	; case 15
  1560  001380  B4D8               	btfsc	status,2,c
  1561  001382  D797               	goto	l281
  1562  001384  0A1F               	xorlw	31	; case 16
  1563  001386  B4D8               	btfsc	status,2,c
  1564  001388  D79B               	goto	l284
  1565  00138A  0A01               	xorlw	1	; case 17
  1566  00138C  B4D8               	btfsc	status,2,c
  1567  00138E  D79F               	goto	l287
  1568  001390  0A03               	xorlw	3	; case 18
  1569  001392  B4D8               	btfsc	status,2,c
  1570  001394  D7A3               	goto	l290
  1571  001396  0A01               	xorlw	1	; case 19
  1572  001398  B4D8               	btfsc	status,2,c
  1573  00139A  D7A7               	goto	l293
  1574  00139C  0A07               	xorlw	7	; case 20
  1575  00139E  B4D8               	btfsc	status,2,c
  1576  0013A0  D7AB               	goto	l296
  1577  0013A2  0A01               	xorlw	1	; case 21
  1578  0013A4  B4D8               	btfsc	status,2,c
  1579  0013A6  D7AF               	goto	l299
  1580  0013A8  0A03               	xorlw	3	; case 22
  1581  0013AA  A4D8               	btfss	status,2,c
  1582  0013AC  0012               	return	
  1583  0013AE  D7B2               	goto	l302
  1584  0013B0                     __end_of_digitalWrite:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           indf0	equ	0xFEF
  1591                           fsr0h	equ	0xFEA
  1592                           fsr0l	equ	0xFE9
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _initLCD *****************
  1596 ;; Defined at:
  1597 ;;		line 27 in file "RobotLib.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  i               1    3[COMRAM] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    2
  1618 ;; This function calls:
  1619 ;;		_lcdCmd
  1620 ;;		_lcdPulse
  1621 ;; This function is called by:
  1622 ;;		_init
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text7
  1627  0013B0                     __ptext7:
  1628                           	opt stack 0
  1629  0013B0                     _initLCD:
  1630                           	opt stack 27
  1631                           
  1632                           ;RobotLib.c: 29: TRISD &= 0x03;
  1633                           
  1634                           ;incstack = 0
  1635  0013B0  0E03               	movlw	3
  1636  0013B2  1695               	andwf	3989,f,c	;volatile
  1637                           
  1638                           ;RobotLib.c: 30: LATD &= 0b00001111;
  1639  0013B4  0E0F               	movlw	15
  1640  0013B6  168C               	andwf	3980,f,c	;volatile
  1641                           
  1642                           ;RobotLib.c: 31: PORTDbits.RD3 = 0;
  1643  0013B8  9683               	bcf	3971,3,c	;volatile
  1644                           
  1645                           ;RobotLib.c: 32: PORTDbits.RD2 = 0;
  1646  0013BA  9483               	bcf	3971,2,c	;volatile
  1647                           
  1648                           ;RobotLib.c: 33: for(char i = 0; i<3; i++){
  1649  0013BC  0E00               	movlw	0
  1650  0013BE  6E04               	movwf	initLCD@i,c
  1651  0013C0                     l1228:
  1652  0013C0  0E02               	movlw	2
  1653  0013C2  6404               	cpfsgt	initLCD@i,c
  1654  0013C4  D001               	goto	l116
  1655  0013C6  D00F               	goto	u520
  1656  0013C8                     l116:
  1657                           
  1658                           ;RobotLib.c: 34: _delay((unsigned long)((1)*(40000000/4000.0)));
  1659  0013C8  0E0D               	movlw	13
  1660  0013CA  6E03               	movwf	??_initLCD& (0+255),c
  1661  0013CC  0EFC               	movlw	252
  1662  0013CE                     u1097:
  1663  0013CE  2EE8               	decfsz	wreg,f,c
  1664  0013D0  D7FE               	bra	u1097
  1665  0013D2  2E03               	decfsz	??_initLCD& (0+255),f,c
  1666  0013D4  D7FC               	bra	u1097
  1667                           
  1668                           ;RobotLib.c: 35: LATD = (LATD&0x0f)|0x30;
  1669  0013D6  508C               	movf	3980,w,c	;volatile
  1670  0013D8  0B0F               	andlw	15
  1671  0013DA  0930               	iorlw	48
  1672  0013DC  6E8C               	movwf	3980,c	;volatile
  1673                           
  1674                           ;RobotLib.c: 36: lcdPulse();
  1675  0013DE  ECA5  F00A         	call	_lcdPulse	;wreg free
  1676  0013E2  2A04               	incf	initLCD@i,f,c
  1677  0013E4  D7ED               	goto	l1228
  1678  0013E6                     u520:
  1679                           
  1680                           ;RobotLib.c: 37: }
  1681                           ;RobotLib.c: 38: LATD = (LATD&0x0f)|0x20;
  1682  0013E6  508C               	movf	3980,w,c	;volatile
  1683  0013E8  0B0F               	andlw	15
  1684  0013EA  0920               	iorlw	32
  1685  0013EC  6E8C               	movwf	3980,c	;volatile
  1686                           
  1687                           ;RobotLib.c: 39: lcdPulse();
  1688  0013EE  ECA5  F00A         	call	_lcdPulse	;wreg free
  1689                           
  1690                           ;RobotLib.c: 40: _delay((unsigned long)((1)*(40000000/4000.0)));
  1691  0013F2  0E0D               	movlw	13
  1692  0013F4  6E03               	movwf	??_initLCD& (0+255),c
  1693  0013F6  0EFC               	movlw	252
  1694  0013F8                     u1107:
  1695  0013F8  2EE8               	decfsz	wreg,f,c
  1696  0013FA  D7FE               	bra	u1107
  1697  0013FC  2E03               	decfsz	??_initLCD& (0+255),f,c
  1698  0013FE  D7FC               	bra	u1107
  1699                           
  1700                           ;RobotLib.c: 41: lcdCmd(0x28);
  1701  001400  0E28               	movlw	40
  1702  001402  EC3C  F00A         	call	_lcdCmd
  1703                           
  1704                           ;RobotLib.c: 42: lcdCmd(0x01);
  1705  001406  0E01               	movlw	1
  1706  001408  EC3C  F00A         	call	_lcdCmd
  1707                           
  1708                           ;RobotLib.c: 43: lcdCmd(0x06);
  1709  00140C  0E06               	movlw	6
  1710  00140E  EC3C  F00A         	call	_lcdCmd
  1711                           
  1712                           ;RobotLib.c: 44: lcdCmd(0x0C);
  1713  001412  0E0C               	movlw	12
  1714  001414  EC3C  F00A         	call	_lcdCmd
  1715                           
  1716                           ;RobotLib.c: 45: lcdCmd(0x02);
  1717  001418  0E02               	movlw	2
  1718  00141A  EC3C  F00A         	call	_lcdCmd
  1719                           
  1720                           ;RobotLib.c: 46: lcdCmd(0x01);
  1721  00141E  0E01               	movlw	1
  1722  001420  EC3C  F00A         	call	_lcdCmd
  1723  001424  0012               	return		;funcret
  1724  001426                     __end_of_initLCD:
  1725                           	opt stack 0
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           indf0	equ	0xFEF
  1731                           fsr0h	equ	0xFEA
  1732                           fsr0l	equ	0xFE9
  1733                           wreg	equ	0xFE8
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function _lcdCmd *****************
  1737 ;; Defined at:
  1738 ;;		line 18 in file "RobotLib.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  cmd             1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  cmd             1    1[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    1
  1759 ;; This function calls:
  1760 ;;		_lcdPulse
  1761 ;; This function is called by:
  1762 ;;		_initLCD
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text8
  1767  001478                     __ptext8:
  1768                           	opt stack 0
  1769  001478                     _lcdCmd:
  1770                           	opt stack 27
  1771                           
  1772                           ;incstack = 0
  1773                           ;lcdCmd@cmd stored from wreg
  1774  001478  6E02               	movwf	lcdCmd@cmd,c
  1775                           
  1776                           ;RobotLib.c: 19: PORTDbits.RD2 = 0;
  1777  00147A  9483               	bcf	3971,2,c	;volatile
  1778                           
  1779                           ;RobotLib.c: 20: LATD = (LATD&0x0f)|(cmd&0xf0);
  1780  00147C  C002  F001         	movff	lcdCmd@cmd,??_lcdCmd
  1781  001480  0EF0               	movlw	240
  1782  001482  1601               	andwf	??_lcdCmd,f,c
  1783  001484  508C               	movf	3980,w,c	;volatile
  1784  001486  0B0F               	andlw	15
  1785  001488  1001               	iorwf	??_lcdCmd,w,c
  1786  00148A  6E8C               	movwf	3980,c	;volatile
  1787                           
  1788                           ;RobotLib.c: 21: lcdPulse();
  1789  00148C  ECA5  F00A         	call	_lcdPulse	;wreg free
  1790                           
  1791                           ;RobotLib.c: 22: LATD = (LATD&0x0f)|((cmd<<4)&0xf0);
  1792  001490  C002  F001         	movff	lcdCmd@cmd,??_lcdCmd
  1793  001494  3A01               	swapf	??_lcdCmd,f,c
  1794  001496  0EF0               	movlw	240
  1795  001498  1601               	andwf	??_lcdCmd,f,c
  1796  00149A  0EF0               	movlw	240
  1797  00149C  1601               	andwf	??_lcdCmd,f,c
  1798  00149E  508C               	movf	3980,w,c	;volatile
  1799  0014A0  0B0F               	andlw	15
  1800  0014A2  1001               	iorwf	??_lcdCmd,w,c
  1801  0014A4  6E8C               	movwf	3980,c	;volatile
  1802                           
  1803                           ;RobotLib.c: 23: lcdPulse();
  1804  0014A6  ECA5  F00A         	call	_lcdPulse	;wreg free
  1805                           
  1806                           ;RobotLib.c: 24: _delay((unsigned long)((1)*(40000000/4000.0)));
  1807  0014AA  0E0D               	movlw	13
  1808  0014AC  6E01               	movwf	??_lcdCmd& (0+255),c
  1809  0014AE  0EFC               	movlw	252
  1810  0014B0                     u1117:
  1811  0014B0  2EE8               	decfsz	wreg,f,c
  1812  0014B2  D7FE               	bra	u1117
  1813  0014B4  2E01               	decfsz	??_lcdCmd& (0+255),f,c
  1814  0014B6  D7FC               	bra	u1117
  1815  0014B8  0012               	return		;funcret
  1816  0014BA                     __end_of_lcdCmd:
  1817                           	opt stack 0
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           indf0	equ	0xFEF
  1823                           fsr0h	equ	0xFEA
  1824                           fsr0l	equ	0xFE9
  1825                           wreg	equ	0xFE8
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _lcdPulse *****************
  1829 ;; Defined at:
  1830 ;;		line 11 in file "RobotLib.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_lcdCmd
  1854 ;;		_initLCD
  1855 ;;		_lcd_print_char
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text9
  1860  00154A                     __ptext9:
  1861                           	opt stack 0
  1862  00154A                     _lcdPulse:
  1863                           	opt stack 28
  1864                           
  1865                           ;RobotLib.c: 12: PORTDbits.RD3=1;
  1866                           
  1867                           ;incstack = 0
  1868  00154A  8683               	bsf	3971,3,c	;volatile
  1869                           
  1870                           ;RobotLib.c: 13: _delay((unsigned long)((50)*(40000000/4000000.0)));
  1871  00154C  0EA6               	movlw	166
  1872  00154E                     u1127:
  1873  00154E  2EE8               	decfsz	wreg,f,c
  1874  001550  D7FE               	bra	u1127
  1875  001552  D000               	nop2	
  1876                           
  1877                           ;RobotLib.c: 14: PORTDbits.RD3=0;
  1878  001554  9683               	bcf	3971,3,c	;volatile
  1879                           
  1880                           ;RobotLib.c: 15: _delay((unsigned long)((50)*(40000000/4000000.0)));
  1881  001556  0EA6               	movlw	166
  1882  001558                     u1137:
  1883  001558  2EE8               	decfsz	wreg,f,c
  1884  00155A  D7FE               	bra	u1137
  1885  00155C  D000               	nop2	
  1886  00155E  0012               	return		;funcret
  1887  001560                     __end_of_lcdPulse:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           indf0	equ	0xFEF
  1894                           fsr0h	equ	0xFEA
  1895                           fsr0l	equ	0xFE9
  1896                           wreg	equ	0xFE8
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _initADC *****************
  1900 ;; Defined at:
  1901 ;;		line 488 in file "RobotLib.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_init
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text10
  1929  00152C                     __ptext10:
  1930                           	opt stack 0
  1931  00152C                     _initADC:
  1932                           	opt stack 29
  1933                           
  1934                           ;RobotLib.c: 490: ADCON1bits.PCFG=0b1111;
  1935                           
  1936                           ;incstack = 0
  1937  00152C  80C1               	bsf	4033,0,c	;volatile
  1938  00152E  82C1               	bsf	4033,1,c	;volatile
  1939  001530  84C1               	bsf	4033,2,c	;volatile
  1940  001532  86C1               	bsf	4033,3,c	;volatile
  1941                           
  1942                           ;RobotLib.c: 491: ADCON1bits.VCFG=0b00;
  1943  001534  0ECF               	movlw	-49
  1944  001536  16C1               	andwf	4033,f,c	;volatile
  1945                           
  1946                           ;RobotLib.c: 492: ADCON2bits.ACQT=0b111;
  1947  001538  86C0               	bsf	4032,3,c	;volatile
  1948  00153A  88C0               	bsf	4032,4,c	;volatile
  1949  00153C  8AC0               	bsf	4032,5,c	;volatile
  1950                           
  1951                           ;RobotLib.c: 493: ADCON2bits.ADCS=0b110;
  1952  00153E  50C0               	movf	4032,w,c	;volatile
  1953  001540  0BF8               	andlw	-8
  1954  001542  0906               	iorlw	6
  1955  001544  6EC0               	movwf	4032,c	;volatile
  1956                           
  1957                           ;RobotLib.c: 494: ADCON2bits.ADFM=0;
  1958  001546  9EC0               	bcf	4032,7,c	;volatile
  1959  001548  0012               	return		;funcret
  1960  00154A                     __end_of_initADC:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           indf0	equ	0xFEF
  1967                           fsr0h	equ	0xFEA
  1968                           fsr0l	equ	0xFE9
  1969                           wreg	equ	0xFE8
  1970                           status	equ	0xFD8
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           indf0	equ	0xFEF
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           status	equ	0xFD8
  1980                           
  1981                           	psect	rparam
  1982  0000                     tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           indf0	equ	0xFEF
  1987                           fsr0h	equ	0xFEA
  1988                           fsr0l	equ	0xFE9
  1989                           wreg	equ	0xFE8
  1990                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_print_string@entity	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_print_long@buff(COMRAM[16]), lcd_print_int@buff(COMRAM[16]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_lcd_print_string
    _lcd_print_string->_lcd_print_char
    _init->_initLCD
    _init->_initOutputs
    _initOutputs->_digitalWrite
    _initOutputs->_pinMode
    _initLCD->_lcdCmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1779
                               _init
                   _lcd_print_string
 ---------------------------------------------------------------------------------
 (1) _lcd_print_string                                     2     0      2     277
                                              2 COMRAM     2     0      2
                     _lcd_print_char
 ---------------------------------------------------------------------------------
 (2) _lcd_print_char                                       2     2      0      30
                                              0 COMRAM     2     2      0
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1502
                            _initADC
                            _initLCD
                        _initOutputs
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          2     2      0    1442
                                              2 COMRAM     2     2      0
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              2     1      1     680
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         2     1      1     604
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      60
                                              2 COMRAM     2     2      0
                             _lcdCmd
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (3) _lcdCmd                                               2     2      0      30
                                              0 COMRAM     2     2      0
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (3) _lcdPulse                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _initADC
     _initLCD
       _lcdCmd
         _lcdPulse
       _lcdPulse
     _initOutputs
       _digitalWrite
       _pinMode
   _lcd_print_string
     _lcd_print_char
       _lcdPulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      4       4       1        3.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 21 09:37:07 2018

                        l9 1564                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000                __CFG_WDT$ON 000000  
                      l201 10C2                        l210 10EC                        l202 10CC  
                      l130 1450                        l211 10F6                        l131 1428  
                      l116 13C8                        l300 1310                        l220 1120  
                      l204 10D0                        l213 10FA                        l205 10DA  
                      l302 1314                        l222 1124                        l214 1104  
                      l303 131E                        l223 112E                        l207 10DE  
                      l240 11F8                        l160 114E                        l216 1108  
                      l208 10E8                        l225 1132                        l217 1112  
                      l161 100C                        l153 14C6                        l234 1322  
                      l242 11FC                        l226 113C                        l162 1016  
                      l251 1226                        l243 1206                        l235 11E0  
                      l219 1116                        l171 1036                        l155 14E0  
                      l260 1250                        l252 1230                        l236 11EA  
                      l228 1140                        l180 1060                        l172 1040  
                      l261 125A                        l245 120A                        l229 114A  
                      l181 106A                        l165 101A                        l270 1284  
                      l254 1234                        l246 1214                        l190 1094  
                      l174 1044                        l166 1024                        l263 125E  
                      l255 123E                        l239 11EE                        l183 106E  
                      l175 104E                        l272 1288                        l264 1268  
                      l248 1218                        l192 1098                        l184 1078  
                      l168 1028                        l281 12B2                        l273 1292  
                      l257 1242                        l249 1222                        l193 10A2  
                      l177 1052                        l169 1032                        l290 12DC  
                      l282 12BC                        l266 126C                        l258 124C  
                      l186 107C                        l178 105C                        l291 12E6  
                      l275 1296                        l267 1276                        l195 10A6  
                      l187 1086                        l284 12C0                        l276 12A0  
                      l196 10B0                        l293 12EA                        l285 12CA  
                      l269 127A                        l189 108A                        l294 12F4  
                      l278 12A4                        l198 10B4                        l287 12CE  
                      l279 12AE                        l199 10BE                        l296 12F8  
                      l288 12D8                        l297 1302                        l299 1306  
             __CFG_CPB$OFF 000000                        u520 13E6               __CFG_CPD$OFF 000000  
                      wreg 000FE8               __CFG_LVP$OFF 000000                       l1228 13C0  
                     l1472 14BE                       l1484 14D8                       STR_1 1001  
                     u1030 14D4                       u1107 13F8                       u1060 1448  
                     u1117 14B0                       u1070 1470                       u1127 154E  
                     u1137 1558                       u1067 143E                       u1077 1466  
                     _LATD 000F8C                       u1097 13CE                       _main 1560  
                     _init 1572                       fsr0h 000FEA                       indf0 000FEF  
                     fsr0l 000FE9              __CFG_BOREN$ON 000000                       start 0000  
          ?_lcd_print_char 0001              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___param_bank 000000                      ?_main 0001               ?_initOutputs 0001  
                    ?_init 0001                      _TRISD 000F95              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000            __end_of_initADC 154A            __end_of_initLCD 1426  
           __CFG_EBTRB$OFF 000000            __end_of_pinMode 11DC                      tablat 000FF5  
                    status 000FD8       __end_of_digitalWrite 13B0            __initialization 1580  
             __end_of_main 1572               __end_of_init 1580       lcd_print_char@entity 0002  
           __CFG_OSC$HSPLL 000000                     ??_main 0005                     ??_init 0005  
            __activetblptr 000002                     _TRISA0 007C90                     _TRISA1 007C91  
                   _TRISA2 007C92                     _TRISB0 007C98                     _TRISA3 007C93  
                   _TRISB1 007C99                     _TRISA4 007C94                     _TRISC0 007CA0  
                   _TRISB2 007C9A                     _TRISA5 007C95                     _TRISB3 007C9B  
                   _TRISB4 007C9C                     _TRISD0 007CA8                     _TRISB5 007C9D  
                   _TRISC3 007CA3                     _TRISD1 007CA9                     _TRISE0 007CB0  
                   _TRISC4 007CA4                     _TRISE1 007CB1                     _TRISC5 007CA5  
                   _TRISE2 007CB2                     _TRISC6 007CA6                     _TRISC7 007CA7  
           __CFG_XINST$OFF 000000           __end_of_lcdPulse 1560             __CFG_STVREN$ON 000000  
                   _lcdCmd 1478                  ??_initADC 0001                  ??_initLCD 0003  
                ??_pinMode 0002               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0080  
  __end_of__initialization 1580            __CFG_PBADEN$OFF 000000          ?_lcd_print_string 0003  
            ___rparam_used 000001         ??_lcd_print_string 0005                pinMode@mode 0001  
           __pcstackCOMRAM 0001       __size_of_initOutputs 003E           ??_lcd_print_char 0001  
    __size_of_digitalWrite 01D4                    ?_lcdCmd 0001               _digitalWrite 11DC  
                ?_lcdPulse 0001                    __Hparam 0000                    __Lparam 0000  
          __size_of_lcdCmd 0042               __psmallconst 1000                    __pcinit 1580  
             initOutputs@i 0003                    __ramtop 1000                    __ptext0 1560  
                  __ptext1 1426                    __ptext2 14F8                    __ptext3 1572  
                  __ptext4 14BA                    __ptext5 1008                    __ptext6 11DC  
                  __ptext7 13B0                    __ptext8 1478                    __ptext9 154A  
                  _initADC 152C                    _initLCD 13B0                    _pinMode 1008  
   lcd_print_string@entity 0003                 ??_lcdPulse 0001       end_of_initialization 1580  
            __Lmediumconst 0000                  _PORTDbits 000F83             __end_of_lcdCmd 14BA  
__size_of_lcd_print_string 0052        start_initialization 1580                   ??_lcdCmd 0001  
         __CFG_LPT1OSC$OFF 000000              ??_initOutputs 0003                 pinMode@pin 0002  
        __size_of_lcdPulse 0016           initOutputs@i_811 0004          __CFG_CCP2MX$PORTC 000000  
                 ?_initADC 0001                   ?_initLCD 0001                __smallconst 1000  
                 ?_pinMode 0001        __end_of_initOutputs 14F8                   _LATAbits 000F89  
                 _LATBbits 000F8A                   _LATCbits 000F8B                   _LATDbits 000F8C  
                lcdCmd@cmd 0002                   _LATEbits 000F8D           __CFG_WDTPS$32768 000000  
  __size_of_lcd_print_char 0034           _lcd_print_string 1426                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0                   __Hrparam 0000                   __Lrparam 0000  
              _initOutputs 14BA           __size_of_initADC 001E           __size_of_initLCD 0076  
         __size_of_pinMode 01D4                   __ptext10 152C                   _lcdPulse 154A  
            __size_of_main 0012              __size_of_init 000E                   initLCD@i 0004  
            ?_digitalWrite 0001             _lcd_print_char 14F8           digitalWrite@mode 0001  
           ??_digitalWrite 0002            digitalWrite@pin 0002   __end_of_lcd_print_string 1478  
   __end_of_lcd_print_char 152C  

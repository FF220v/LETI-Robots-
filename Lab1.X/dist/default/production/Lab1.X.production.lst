

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 25 13:27:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 1.45
    32                           ; Generated 16/11/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4525 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66 ;; Function _func is unused but had its address taken
    67  0000                     _INTCON3bits	set	4080
    68  0000                     _RCONbits	set	4048
    69  0000                     _INTCONbits	set	4082
    70  0000                     _INTCON2bits	set	4081
    71  0000                     _ADRESL	set	4035
    72  0000                     _ADRESH	set	4036
    73  0000                     _ADCON0bits	set	4034
    74  0000                     _ADCON2bits	set	4032
    75  0000                     _ADCON1bits	set	4033
    76  0000                     _LATDbits	set	3980
    77  0000                     _LATBbits	set	3978
    78  0000                     _LATCbits	set	3979
    79  0000                     _LATEbits	set	3981
    80  0000                     _LATAbits	set	3977
    81  0000                     _TRISD	set	3989
    82  0000                     _LATD	set	3980
    83  0000                     _PORTDbits	set	3971
    84  0000                     _TRISB2	set	31898
    85  0000                     _TRISB1	set	31897
    86  0000                     _TRISD1	set	31913
    87  0000                     _TRISD0	set	31912
    88  0000                     _TRISB3	set	31899
    89  0000                     _TRISC0	set	31904
    90  0000                     _TRISA4	set	31892
    91  0000                     _TRISC3	set	31907
    92  0000                     _TRISC4	set	31908
    93  0000                     _TRISC6	set	31910
    94  0000                     _TRISC7	set	31911
    95  0000                     _TRISB0	set	31896
    96  0000                     _TRISB5	set	31901
    97  0000                     _TRISB4	set	31900
    98  0000                     _TRISC5	set	31909
    99  0000                     _TRISE2	set	31922
   100  0000                     _TRISE1	set	31921
   101  0000                     _TRISE0	set	31920
   102  0000                     _TRISA5	set	31893
   103  0000                     _TRISA3	set	31891
   104  0000                     _TRISA2	set	31890
   105  0000                     _TRISA1	set	31889
   106  0000                     _TRISA0	set	31888
   107                           
   108                           	psect	smallconst
   109  001000                     __psmallconst:
   110                           	opt stack 0
   111  001000  00                 	db	0
   112  001001                     STR_1:
   113  001001  20                 	db	32
   114  001002  20                 	db	32
   115  001003  20                 	db	32
   116  001004  20                 	db	32
   117  001005  00                 	db	0
   118                           
   119                           ; #config settings
   120  001006  00                 	db	0	; dummy byte at the end
   121  0000                     
   122                           	psect	cinit
   123  0019BA                     __pcinit:
   124                           	opt stack 0
   125  0019BA                     start_initialization:
   126                           	opt stack 0
   127  0019BA                     __initialization:
   128                           	opt stack 0
   129                           
   130                           ; Clear objects allocated to COMRAM (12 bytes)
   131  0019BA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   132  0019BE  0E0C               	movlw	12
   133  0019C0                     clear_0:
   134  0019C0  6AEE               	clrf	postinc0,c
   135  0019C2  06E8               	decf	wreg,f,c
   136  0019C4  E1FD               	bnz	clear_0
   137  0019C6                     end_of_initialization:
   138                           	opt stack 0
   139  0019C6                     __end_of__initialization:
   140                           	opt stack 0
   141  0019C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142  0019C8  6EF8               	movwf	tblptru,c
   143  0019CA  0100               	movlb	0
   144  0019CC  EFDB  F00B         	goto	_main	;jump to C main() function
   145                           tblptru	equ	0xFF8
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           
   149                           	psect	bssCOMRAM
   150  00002C                     __pbssCOMRAM:
   151                           	opt stack 0
   152  00002C                     _milliSeconds:
   153                           	opt stack 0
   154  00002C                     	ds	4
   155  000030                     _microSeconds:
   156                           	opt stack 0
   157  000030                     	ds	4
   158  000034                     _timerFunc:
   159                           	opt stack 0
   160  000034                     	ds	2
   161  000036                     _int0func:
   162                           	opt stack 0
   163  000036                     	ds	2
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168                           	psect	cstackCOMRAM
   169  000001                     __pcstackCOMRAM:
   170                           	opt stack 0
   171  000001                     ??_lcdCmd:
   172  000001                     ??_lcd_print_char:
   173  000001                     ?_analogRead:
   174                           	opt stack 0
   175  000001                     ?___lmul:
   176                           	opt stack 0
   177  000001                     ?___aldiv:
   178                           	opt stack 0
   179  000001                     ?___almod:
   180                           	opt stack 0
   181  000001                     pinMode@mode:
   182                           	opt stack 0
   183  000001                     digitalWrite@mode:
   184                           	opt stack 0
   185  000001                     attachInterrupt@mode:
   186                           	opt stack 0
   187  000001                     ___lmul@multiplier:
   188                           	opt stack 0
   189  000001                     ___aldiv@dividend:
   190                           	opt stack 0
   191  000001                     ___almod@dividend:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0x0
   195  000001                     	ds	1
   196  000002                     lcdCmd@cmd:
   197                           	opt stack 0
   198  000002                     lcd_print_char@entity:
   199                           	opt stack 0
   200  000002                     pinMode@pin:
   201                           	opt stack 0
   202  000002                     digitalWrite@pin:
   203                           	opt stack 0
   204  000002                     attachInterrupt@func:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x1
   208  000002                     	ds	1
   209  000003                     ??_analogRead:
   210  000003                     ??_initLCD:
   211  000003                     lcd_setCursor@y:
   212                           	opt stack 0
   213  000003                     initOutputs@i:
   214                           	opt stack 0
   215  000003                     lcd_print_string@entity:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x2
   219  000003                     	ds	1
   220  000004                     initLCD@i:
   221                           	opt stack 0
   222  000004                     lcd_setCursor@x:
   223                           	opt stack 0
   224  000004                     initOutputs@i_1066:
   225                           	opt stack 0
   226  000004                     attachInterrupt@num:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x3
   230  000004                     	ds	1
   231  000005                     ___lmul@multiplicand:
   232                           	opt stack 0
   233  000005                     ___aldiv@divisor:
   234                           	opt stack 0
   235  000005                     ___almod@divisor:
   236                           	opt stack 0
   237                           
   238                           ; 4 bytes @ 0x4
   239  000005                     	ds	2
   240  000007                     analogRead@pin:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x6
   244  000007                     	ds	2
   245  000009                     ___aldiv@counter:
   246                           	opt stack 0
   247  000009                     ___almod@counter:
   248                           	opt stack 0
   249  000009                     ___lmul@product:
   250                           	opt stack 0
   251                           
   252                           ; 4 bytes @ 0x8
   253  000009                     	ds	1
   254  00000A                     ___aldiv@sign:
   255                           	opt stack 0
   256  00000A                     ___almod@sign:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x9
   260  00000A                     	ds	1
   261  00000B                     ___aldiv@quotient:
   262                           	opt stack 0
   263                           
   264                           ; 4 bytes @ 0xA
   265  00000B                     	ds	4
   266  00000F                     lcd_print_int@entity:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0xE
   270  00000F                     	ds	2
   271  000011                     ??_lcd_print_int:
   272                           
   273                           ; 1 bytes @ 0x10
   274  000011                     	ds	4
   275  000015                     lcd_print_int@buff:
   276                           	opt stack 0
   277                           
   278                           ; 16 bytes @ 0x14
   279  000015                     	ds	16
   280  000025                     lcd_print_int@num:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x24
   284  000025                     	ds	1
   285  000026                     lcd_print_int@i:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x25
   289  000026                     	ds	2
   290  000028                     lcd_print_int@value:
   291                           	opt stack 0
   292                           
   293                           ; 4 bytes @ 0x27
   294  000028                     	ds	4
   295  00002C                     tblptru	equ	0xFF8
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           ; 1 bytes @ 0x2B
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 6 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels required when called:    4
   325 ;; This function calls:
   326 ;;		_analogRead
   327 ;;		_attachInterrupt
   328 ;;		_init
   329 ;;		_lcd_print_int
   330 ;;		_lcd_print_string
   331 ;;		_lcd_setCursor
   332 ;;		_pinMode
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text0
   339  0017B6                     __ptext0:
   340                           	opt stack 0
   341  0017B6                     _main:
   342                           	opt stack 27
   343                           
   344                           ;main.c: 9: init();
   345                           
   346                           ;incstack = 0
   347  0017B6  ECF3  F00C         	call	_init	;wreg free
   348                           
   349                           ;main.c: 10: attachInterrupt(0,0,func);
   350  0017BA  0E00               	movlw	0
   351  0017BC  6E01               	movwf	attachInterrupt@mode,c
   352  0017BE  0E00               	movlw	0
   353  0017C0  6E02               	movwf	attachInterrupt@func,c
   354  0017C2  0E00               	movlw	0
   355  0017C4  6E03               	movwf	attachInterrupt@func+1,c
   356  0017C6  0E00               	movlw	0
   357  0017C8  EC93  F00C         	call	_attachInterrupt
   358                           
   359                           ;main.c: 12: lcd_setCursor(0,1);
   360  0017CC  0E01               	movlw	1
   361  0017CE  6E03               	movwf	lcd_setCursor@y,c
   362  0017D0  0E00               	movlw	0
   363  0017D2  ECD1  F00C         	call	_lcd_setCursor
   364                           
   365                           ;main.c: 13: lcd_print_int(analogRead(7));
   366  0017D6  0E07               	movlw	7
   367  0017D8  EC74  F00A         	call	_analogRead
   368  0017DC  C001  F00F         	movff	?_analogRead,lcd_print_int@entity
   369  0017E0  C002  F010         	movff	?_analogRead+1,lcd_print_int@entity+1
   370  0017E4  ECD8  F009         	call	_lcd_print_int	;wreg free
   371                           
   372                           ;main.c: 14: pinMode(18,0);
   373  0017E8  0E00               	movlw	0
   374  0017EA  6E01               	movwf	pinMode@mode,c
   375  0017EC  0E12               	movlw	18
   376  0017EE  EC04  F008         	call	_pinMode
   377  0017F2                     
   378                           ;main.c: 18: lcd_setCursor(0,1);
   379  0017F2  0E01               	movlw	1
   380  0017F4  6E03               	movwf	lcd_setCursor@y,c
   381  0017F6  0E00               	movlw	0
   382  0017F8  ECD1  F00C         	call	_lcd_setCursor
   383                           
   384                           ;main.c: 19: lcd_print_int(analogRead(7));
   385  0017FC  0E07               	movlw	7
   386  0017FE  EC74  F00A         	call	_analogRead
   387  001802  C001  F00F         	movff	?_analogRead,lcd_print_int@entity
   388  001806  C002  F010         	movff	?_analogRead+1,lcd_print_int@entity+1
   389  00180A  ECD8  F009         	call	_lcd_print_int	;wreg free
   390                           
   391                           ;main.c: 20: lcd_print_string("    ");
   392  00180E  0E01               	movlw	low STR_1
   393  001810  6E03               	movwf	lcd_print_string@entity,c
   394  001812  0E10               	movlw	high STR_1
   395  001814  6E04               	movwf	lcd_print_string@entity+1,c
   396  001816  ECAD  F00C         	call	_lcd_print_string	;wreg free
   397  00181A  D7EB               	goto	l30
   398  00181C                     __end_of_main:
   399                           	opt stack 0
   400                           tblptru	equ	0xFF8
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404 ;; *************** function _lcd_setCursor *****************
   405 ;; Defined at:
   406 ;;		line 52 in file "RobotLib.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  x               1    wreg     unsigned char 
   409 ;;  y               1    2[COMRAM] unsigned char 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  x               1    3[COMRAM] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;Total ram usage:        2 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_lcdCmd
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text1
   436  0019A2                     __ptext1:
   437                           	opt stack 0
   438  0019A2                     _lcd_setCursor:
   439                           	opt stack 28
   440                           
   441                           ;incstack = 0
   442                           ;lcd_setCursor@x stored from wreg
   443  0019A2  6E04               	movwf	lcd_setCursor@x,c
   444                           
   445                           ;RobotLib.c: 53: lcdCmd(0x02);
   446  0019A4  0E02               	movlw	2
   447  0019A6  EC39  F00C         	call	_lcdCmd
   448                           
   449                           ;RobotLib.c: 54: lcdCmd((unsigned char)0x80+x+(unsigned char)0x40*y);
   450  0019AA  5003               	movf	lcd_setCursor@y,w,c
   451  0019AC  0D40               	mullw	64
   452  0019AE  50F3               	movf	prodl,w,c
   453  0019B0  2404               	addwf	lcd_setCursor@x,w,c
   454  0019B2  0F80               	addlw	128
   455  0019B4  EC39  F00C         	call	_lcdCmd
   456  0019B8  0012               	return		;funcret
   457  0019BA                     __end_of_lcd_setCursor:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           prodl	equ	0xFF3
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           
   464 ;; *************** function _lcd_print_string *****************
   465 ;; Defined at:
   466 ;;		line 69 in file "RobotLib.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  entity          2    2[COMRAM] PTR unsigned char 
   469 ;;		 -> STR_1(5), 
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    2
   488 ;; This function calls:
   489 ;;		_lcd_print_char
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text2
   496  00195A                     __ptext2:
   497                           	opt stack 0
   498  00195A                     _lcd_print_string:
   499                           	opt stack 28
   500                           
   501                           ;RobotLib.c: 70: while(*entity)
   502                           
   503                           ;incstack = 0
   504  00195A  D00A               	goto	l171
   505  00195C                     
   506                           ;RobotLib.c: 71: {
   507                           ;RobotLib.c: 72: lcd_print_char(*entity);
   508  00195C  C003  FFF6         	movff	lcd_print_string@entity,tblptrl
   509  001960  C004  FFF7         	movff	lcd_print_string@entity+1,tblptrh
   510  001964                     	if	0	;tblptru may be non-zero
   511  001964                     	endif
   512  001964                     	if	0	;tblptru may be non-zero
   513  001964                     	endif
   514  001964  0008               	tblrd		*
   515  001966  50F5               	movf	tablat,w,c
   516  001968  EC79  F00C         	call	_lcd_print_char
   517                           
   518                           ;RobotLib.c: 73: entity++;
   519  00196C  4A03               	infsnz	lcd_print_string@entity,f,c
   520  00196E  2A04               	incf	lcd_print_string@entity+1,f,c
   521  001970                     l171:
   522  001970  C003  FFF6         	movff	lcd_print_string@entity,tblptrl
   523  001974  C004  FFF7         	movff	lcd_print_string@entity+1,tblptrh
   524  001978                     	if	0	;tblptru may be non-zero
   525  001978                     	endif
   526  001978                     	if	0	;tblptru may be non-zero
   527  001978                     	endif
   528  001978  0008               	tblrd		*
   529  00197A  50F5               	movf	tablat,w,c
   530  00197C  0900               	iorlw	0
   531  00197E  B4D8               	btfsc	status,2,c
   532  001980  0012               	return	
   533  001982  D7EC               	goto	l172
   534  001984                     __end_of_lcd_print_string:
   535                           	opt stack 0
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           prodl	equ	0xFF3
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _lcd_print_int *****************
   546 ;; Defined at:
   547 ;;		line 77 in file "RobotLib.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  entity          2   14[COMRAM] int 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  num             1   36[COMRAM] unsigned char 
   552 ;;  buff           16   20[COMRAM] unsigned char [16]
   553 ;;  value           4   39[COMRAM] long 
   554 ;;  i               2   37[COMRAM] int 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:       29 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		___aldiv
   573 ;;		___almod
   574 ;;		___lmul
   575 ;;		_lcd_print_char
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text3
   582  0013B0                     __ptext3:
   583                           	opt stack 0
   584  0013B0                     _lcd_print_int:
   585                           	opt stack 28
   586                           
   587                           ;RobotLib.c: 79: long int value = entity;
   588                           
   589                           ;incstack = 0
   590  0013B0  C00F  F028         	movff	lcd_print_int@entity,lcd_print_int@value
   591  0013B4  C010  F029         	movff	lcd_print_int@entity+1,lcd_print_int@value+1
   592  0013B8  0E00               	movlw	0
   593  0013BA  BE29               	btfsc	lcd_print_int@value+1,7,c
   594  0013BC  0EFF               	movlw	-1
   595  0013BE  6E2A               	movwf	lcd_print_int@value+2,c
   596  0013C0  6E2B               	movwf	lcd_print_int@value+3,c
   597                           
   598                           ;RobotLib.c: 80: if(entity<0)
   599  0013C2  AE10               	btfss	lcd_print_int@entity+1,7,c
   600  0013C4  D01A               	goto	l177
   601                           
   602                           ;RobotLib.c: 81: value*=(-1);
   603  0013C6  C028  F001         	movff	lcd_print_int@value,___lmul@multiplier
   604  0013CA  C029  F002         	movff	lcd_print_int@value+1,___lmul@multiplier+1
   605  0013CE  C02A  F003         	movff	lcd_print_int@value+2,___lmul@multiplier+2
   606  0013D2  C02B  F004         	movff	lcd_print_int@value+3,___lmul@multiplier+3
   607  0013D6  0EFF               	movlw	255
   608  0013D8  6E05               	movwf	___lmul@multiplicand,c
   609  0013DA  0EFF               	movlw	255
   610  0013DC  6E06               	movwf	___lmul@multiplicand+1,c
   611  0013DE  0EFF               	movlw	255
   612  0013E0  6E07               	movwf	___lmul@multiplicand+2,c
   613  0013E2  0EFF               	movlw	255
   614  0013E4  6E08               	movwf	___lmul@multiplicand+3,c
   615  0013E6  EC0E  F00C         	call	___lmul	;wreg free
   616  0013EA  C001  F028         	movff	?___lmul,lcd_print_int@value
   617  0013EE  C002  F029         	movff	?___lmul+1,lcd_print_int@value+1
   618  0013F2  C003  F02A         	movff	?___lmul+2,lcd_print_int@value+2
   619  0013F6  C004  F02B         	movff	?___lmul+3,lcd_print_int@value+3
   620  0013FA                     l177:
   621                           
   622                           ;RobotLib.c: 82: if(value == 0){
   623  0013FA  5028               	movf	lcd_print_int@value,w,c
   624  0013FC  1029               	iorwf	lcd_print_int@value+1,w,c
   625  0013FE  102A               	iorwf	lcd_print_int@value+2,w,c
   626  001400  102B               	iorwf	lcd_print_int@value+3,w,c
   627  001402  A4D8               	btfss	status,2,c
   628  001404  D004               	goto	l178
   629                           
   630                           ;RobotLib.c: 83: lcd_print_char('0');
   631  001406  0E30               	movlw	48
   632  001408  EC79  F00C         	call	_lcd_print_char
   633                           
   634                           ;RobotLib.c: 84: return;
   635  00140C  0012               	return	
   636  00140E                     l178:
   637                           
   638                           ;RobotLib.c: 85: }
   639                           ;RobotLib.c: 86: int i=0;
   640  00140E  0E00               	movlw	0
   641  001410  6E27               	movwf	lcd_print_int@i+1,c
   642  001412  0E00               	movlw	0
   643  001414  6E26               	movwf	lcd_print_int@i,c
   644                           
   645                           ;RobotLib.c: 87: char buff[16];
   646                           ;RobotLib.c: 88: while(value!=0){
   647  001416  D04B               	goto	l180
   648  001418                     
   649                           ;RobotLib.c: 89: char num = value%10;
   650  001418  C028  F001         	movff	lcd_print_int@value,___almod@dividend
   651  00141C  C029  F002         	movff	lcd_print_int@value+1,___almod@dividend+1
   652  001420  C02A  F003         	movff	lcd_print_int@value+2,___almod@dividend+2
   653  001424  C02B  F004         	movff	lcd_print_int@value+3,___almod@dividend+3
   654  001428  0E0A               	movlw	10
   655  00142A  6E05               	movwf	___almod@divisor,c
   656  00142C  0E00               	movlw	0
   657  00142E  6E06               	movwf	___almod@divisor+1,c
   658  001430  0E00               	movlw	0
   659  001432  6E07               	movwf	___almod@divisor+2,c
   660  001434  0E00               	movlw	0
   661  001436  6E08               	movwf	___almod@divisor+3,c
   662  001438  EC4A  F00B         	call	___almod	;wreg free
   663  00143C  5001               	movf	?___almod,w,c
   664  00143E  6E25               	movwf	lcd_print_int@num,c
   665                           
   666                           ;RobotLib.c: 90: buff[i] = num+0x30;
   667  001440  0E15               	movlw	low lcd_print_int@buff
   668  001442  2426               	addwf	lcd_print_int@i,w,c
   669  001444  6ED9               	movwf	fsr2l,c
   670  001446  0E00               	movlw	high lcd_print_int@buff
   671  001448  2027               	addwfc	lcd_print_int@i+1,w,c
   672  00144A  6EDA               	movwf	fsr2h,c
   673  00144C  5025               	movf	lcd_print_int@num,w,c
   674  00144E  0F30               	addlw	48
   675  001450  6EDF               	movwf	indf2,c
   676                           
   677                           ;RobotLib.c: 91: value = (value - num)/10;
   678  001452  C025  F011         	movff	lcd_print_int@num,??_lcd_print_int
   679  001456  6A12               	clrf	(??_lcd_print_int+1)& (0+255),c
   680  001458  6A13               	clrf	(??_lcd_print_int+2)& (0+255),c
   681  00145A  6A14               	clrf	(??_lcd_print_int+3)& (0+255),c
   682  00145C  1E11               	comf	??_lcd_print_int,f,c
   683  00145E  1E12               	comf	??_lcd_print_int+1,f,c
   684  001460  1E13               	comf	??_lcd_print_int+2,f,c
   685  001462  1E14               	comf	??_lcd_print_int+3,f,c
   686  001464  2A11               	incf	??_lcd_print_int,f,c
   687  001466  0E00               	movlw	0
   688  001468  2212               	addwfc	??_lcd_print_int+1,f,c
   689  00146A  2213               	addwfc	??_lcd_print_int+2,f,c
   690  00146C  2214               	addwfc	??_lcd_print_int+3,f,c
   691  00146E  5028               	movf	lcd_print_int@value,w,c
   692  001470  2411               	addwf	??_lcd_print_int,w,c
   693  001472  6E01               	movwf	___aldiv@dividend,c
   694  001474  5029               	movf	lcd_print_int@value+1,w,c
   695  001476  2012               	addwfc	??_lcd_print_int+1,w,c
   696  001478  6E02               	movwf	___aldiv@dividend+1,c
   697  00147A  502A               	movf	lcd_print_int@value+2,w,c
   698  00147C  2013               	addwfc	??_lcd_print_int+2,w,c
   699  00147E  6E03               	movwf	___aldiv@dividend+2,c
   700  001480  502B               	movf	lcd_print_int@value+3,w,c
   701  001482  2014               	addwfc	??_lcd_print_int+3,w,c
   702  001484  6E04               	movwf	___aldiv@dividend+3,c
   703  001486  0E0A               	movlw	10
   704  001488  6E05               	movwf	___aldiv@divisor,c
   705  00148A  0E00               	movlw	0
   706  00148C  6E06               	movwf	___aldiv@divisor+1,c
   707  00148E  0E00               	movlw	0
   708  001490  6E07               	movwf	___aldiv@divisor+2,c
   709  001492  0E00               	movlw	0
   710  001494  6E08               	movwf	___aldiv@divisor+3,c
   711  001496  ECE4  F00A         	call	___aldiv	;wreg free
   712  00149A  C001  F028         	movff	?___aldiv,lcd_print_int@value
   713  00149E  C002  F029         	movff	?___aldiv+1,lcd_print_int@value+1
   714  0014A2  C003  F02A         	movff	?___aldiv+2,lcd_print_int@value+2
   715  0014A6  C004  F02B         	movff	?___aldiv+3,lcd_print_int@value+3
   716                           
   717                           ;RobotLib.c: 92: i++;
   718  0014AA  4A26               	infsnz	lcd_print_int@i,f,c
   719  0014AC  2A27               	incf	lcd_print_int@i+1,f,c
   720  0014AE                     l180:
   721  0014AE  5028               	movf	lcd_print_int@value,w,c
   722  0014B0  1029               	iorwf	lcd_print_int@value+1,w,c
   723  0014B2  102A               	iorwf	lcd_print_int@value+2,w,c
   724  0014B4  102B               	iorwf	lcd_print_int@value+3,w,c
   725  0014B6  A4D8               	btfss	status,2,c
   726  0014B8  D7AF               	goto	l181
   727                           
   728                           ;RobotLib.c: 93: }
   729                           ;RobotLib.c: 94: i--;
   730  0014BA  0626               	decf	lcd_print_int@i,f,c
   731  0014BC  A0D8               	btfss	status,0,c
   732  0014BE  0627               	decf	lcd_print_int@i+1,f,c
   733                           
   734                           ;RobotLib.c: 95: if(entity<0)
   735  0014C0  AE10               	btfss	lcd_print_int@entity+1,7,c
   736  0014C2  D003               	goto	l183
   737                           
   738                           ;RobotLib.c: 96: lcd_print_char('-');
   739  0014C4  0E2D               	movlw	45
   740  0014C6  EC79  F00C         	call	_lcd_print_char
   741  0014CA                     l183:
   742                           
   743                           ;RobotLib.c: 98: for(;i>=0; i--)
   744  0014CA  BE27               	btfsc	lcd_print_int@i+1,7,c
   745  0014CC  0012               	return	
   746                           
   747                           ;RobotLib.c: 99: lcd_print_char(buff[i]);
   748  0014CE  0E15               	movlw	low lcd_print_int@buff
   749  0014D0  2426               	addwf	lcd_print_int@i,w,c
   750  0014D2  6ED9               	movwf	fsr2l,c
   751  0014D4  0E00               	movlw	high lcd_print_int@buff
   752  0014D6  2027               	addwfc	lcd_print_int@i+1,w,c
   753  0014D8  6EDA               	movwf	fsr2h,c
   754  0014DA  50DF               	movf	indf2,w,c
   755  0014DC  EC79  F00C         	call	_lcd_print_char
   756  0014E0  0626               	decf	lcd_print_int@i,f,c
   757  0014E2  A0D8               	btfss	status,0,c
   758  0014E4  0627               	decf	lcd_print_int@i+1,f,c
   759  0014E6  D7F1               	goto	l183
   760  0014E8                     __end_of_lcd_print_int:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           prodl	equ	0xFF3
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           indf2	equ	0xFDF
   770                           fsr2h	equ	0xFDA
   771                           fsr2l	equ	0xFD9
   772                           status	equ	0xFD8
   773                           
   774 ;; *************** function _lcd_print_char *****************
   775 ;; Defined at:
   776 ;;		line 61 in file "RobotLib.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  entity          1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  entity          1    1[COMRAM] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		_lcdPulse
   799 ;; This function is called by:
   800 ;;		_lcd_print_string
   801 ;;		_lcd_print_int
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text4
   806  0018F2                     __ptext4:
   807                           	opt stack 0
   808  0018F2                     _lcd_print_char:
   809                           	opt stack 28
   810                           
   811                           ;incstack = 0
   812                           ;lcd_print_char@entity stored from wreg
   813  0018F2  6E02               	movwf	lcd_print_char@entity,c
   814                           
   815                           ;RobotLib.c: 62: PORTDbits.RD2 = 1;
   816  0018F4  8483               	bsf	3971,2,c	;volatile
   817                           
   818                           ;RobotLib.c: 63: LATD = (LATD&0x0f)|(entity & 0xf0);
   819  0018F6  C002  F001         	movff	lcd_print_char@entity,??_lcd_print_char
   820  0018FA  0EF0               	movlw	240
   821  0018FC  1601               	andwf	??_lcd_print_char,f,c
   822  0018FE  508C               	movf	3980,w,c	;volatile
   823  001900  0B0F               	andlw	15
   824  001902  1001               	iorwf	??_lcd_print_char,w,c
   825  001904  6E8C               	movwf	3980,c	;volatile
   826                           
   827                           ;RobotLib.c: 64: lcdPulse();
   828  001906  ECE8  F00C         	call	_lcdPulse	;wreg free
   829                           
   830                           ;RobotLib.c: 65: LATD = (LATD&0x0f)|((entity<<4)&0xf0);
   831  00190A  C002  F001         	movff	lcd_print_char@entity,??_lcd_print_char
   832  00190E  3A01               	swapf	??_lcd_print_char,f,c
   833  001910  0EF0               	movlw	240
   834  001912  1601               	andwf	??_lcd_print_char,f,c
   835  001914  0EF0               	movlw	240
   836  001916  1601               	andwf	??_lcd_print_char,f,c
   837  001918  508C               	movf	3980,w,c	;volatile
   838  00191A  0B0F               	andlw	15
   839  00191C  1001               	iorwf	??_lcd_print_char,w,c
   840  00191E  6E8C               	movwf	3980,c	;volatile
   841                           
   842                           ;RobotLib.c: 66: lcdPulse();
   843  001920  ECE8  F00C         	call	_lcdPulse	;wreg free
   844  001924  0012               	return		;funcret
   845  001926                     __end_of_lcd_print_char:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           tblptrl	equ	0xFF6
   850                           tablat	equ	0xFF5
   851                           prodl	equ	0xFF3
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           indf2	equ	0xFDF
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function ___lmul *****************
   860 ;; Defined at:
   861 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  multiplier      4    0[COMRAM] unsigned long 
   864 ;;  multiplicand    4    4[COMRAM] unsigned long 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  product         4    8[COMRAM] unsigned long 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  4    0[COMRAM] unsigned long 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:       12 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_lcd_print_int
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890  00181C                     __ptext5:
   891                           	opt stack 0
   892  00181C                     ___lmul:
   893                           	opt stack 29
   894                           
   895                           ;incstack = 0
   896  00181C  0E00               	movlw	0
   897  00181E  6E09               	movwf	___lmul@product,c
   898  001820  0E00               	movlw	0
   899  001822  6E0A               	movwf	___lmul@product+1,c
   900  001824  0E00               	movlw	0
   901  001826  6E0B               	movwf	___lmul@product+2,c
   902  001828  0E00               	movlw	0
   903  00182A  6E0C               	movwf	___lmul@product+3,c
   904  00182C  A001               	btfss	___lmul@multiplier,0,c
   905  00182E  D008               	goto	l438
   906  001830  5005               	movf	___lmul@multiplicand,w,c
   907  001832  2609               	addwf	___lmul@product,f,c
   908  001834  5006               	movf	___lmul@multiplicand+1,w,c
   909  001836  220A               	addwfc	___lmul@product+1,f,c
   910  001838  5007               	movf	___lmul@multiplicand+2,w,c
   911  00183A  220B               	addwfc	___lmul@product+2,f,c
   912  00183C  5008               	movf	___lmul@multiplicand+3,w,c
   913  00183E  220C               	addwfc	___lmul@product+3,f,c
   914  001840                     l438:
   915  001840  90D8               	bcf	status,0,c
   916  001842  3605               	rlcf	___lmul@multiplicand,f,c
   917  001844  3606               	rlcf	___lmul@multiplicand+1,f,c
   918  001846  3607               	rlcf	___lmul@multiplicand+2,f,c
   919  001848  3608               	rlcf	___lmul@multiplicand+3,f,c
   920  00184A  90D8               	bcf	status,0,c
   921  00184C  3204               	rrcf	___lmul@multiplier+3,f,c
   922  00184E  3203               	rrcf	___lmul@multiplier+2,f,c
   923  001850  3202               	rrcf	___lmul@multiplier+1,f,c
   924  001852  3201               	rrcf	___lmul@multiplier,f,c
   925  001854  5001               	movf	___lmul@multiplier,w,c
   926  001856  1002               	iorwf	___lmul@multiplier+1,w,c
   927  001858  1003               	iorwf	___lmul@multiplier+2,w,c
   928  00185A  1004               	iorwf	___lmul@multiplier+3,w,c
   929  00185C  A4D8               	btfss	status,2,c
   930  00185E  D7E6               	goto	l437
   931  001860  C009  F001         	movff	___lmul@product,?___lmul
   932  001864  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   933  001868  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   934  00186C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   935  001870  0012               	return		;funcret
   936  001872                     __end_of___lmul:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           prodl	equ	0xFF3
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           indf2	equ	0xFDF
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function ___almod *****************
   951 ;; Defined at:
   952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  dividend        4    0[COMRAM] long 
   955 ;;  divisor         4    4[COMRAM] long 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  sign            1    9[COMRAM] unsigned char 
   958 ;;  counter         1    8[COMRAM] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  4    0[COMRAM] long 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   968 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;Total ram usage:       10 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_lcd_print_int
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text6
   982  001694                     __ptext6:
   983                           	opt stack 0
   984  001694                     ___almod:
   985                           	opt stack 29
   986                           
   987                           ;incstack = 0
   988  001694  0E00               	movlw	0
   989  001696  6E0A               	movwf	___almod@sign,c
   990  001698  AE04               	btfss	___almod@dividend+3,7,c
   991  00169A  D00A               	goto	l494
   992  00169C  1E04               	comf	___almod@dividend+3,f,c
   993  00169E  1E03               	comf	___almod@dividend+2,f,c
   994  0016A0  1E02               	comf	___almod@dividend+1,f,c
   995  0016A2  6C01               	negf	___almod@dividend,c
   996  0016A4  0E00               	movlw	0
   997  0016A6  2202               	addwfc	___almod@dividend+1,f,c
   998  0016A8  2203               	addwfc	___almod@dividend+2,f,c
   999  0016AA  2204               	addwfc	___almod@dividend+3,f,c
  1000  0016AC  0E01               	movlw	1
  1001  0016AE  6E0A               	movwf	___almod@sign,c
  1002  0016B0                     l494:
  1003  0016B0  AE08               	btfss	___almod@divisor+3,7,c
  1004  0016B2  D008               	goto	l495
  1005  0016B4  1E08               	comf	___almod@divisor+3,f,c
  1006  0016B6  1E07               	comf	___almod@divisor+2,f,c
  1007  0016B8  1E06               	comf	___almod@divisor+1,f,c
  1008  0016BA  6C05               	negf	___almod@divisor,c
  1009  0016BC  0E00               	movlw	0
  1010  0016BE  2206               	addwfc	___almod@divisor+1,f,c
  1011  0016C0  2207               	addwfc	___almod@divisor+2,f,c
  1012  0016C2  2208               	addwfc	___almod@divisor+3,f,c
  1013  0016C4                     l495:
  1014  0016C4  5005               	movf	___almod@divisor,w,c
  1015  0016C6  1006               	iorwf	___almod@divisor+1,w,c
  1016  0016C8  1007               	iorwf	___almod@divisor+2,w,c
  1017  0016CA  1008               	iorwf	___almod@divisor+3,w,c
  1018  0016CC  B4D8               	btfsc	status,2,c
  1019  0016CE  D024               	goto	l502
  1020  0016D0  0E01               	movlw	1
  1021  0016D2  6E09               	movwf	___almod@counter,c
  1022  0016D4  D006               	goto	l497
  1023  0016D6  90D8               	bcf	status,0,c
  1024  0016D8  3605               	rlcf	___almod@divisor,f,c
  1025  0016DA  3606               	rlcf	___almod@divisor+1,f,c
  1026  0016DC  3607               	rlcf	___almod@divisor+2,f,c
  1027  0016DE  3608               	rlcf	___almod@divisor+3,f,c
  1028  0016E0  2A09               	incf	___almod@counter,f,c
  1029  0016E2                     l497:
  1030  0016E2  AE08               	btfss	___almod@divisor+3,7,c
  1031  0016E4  D7F8               	goto	l498
  1032  0016E6                     u1370:
  1033  0016E6  5005               	movf	___almod@divisor,w,c
  1034  0016E8  5C01               	subwf	___almod@dividend,w,c
  1035  0016EA  5006               	movf	___almod@divisor+1,w,c
  1036  0016EC  5802               	subwfb	___almod@dividend+1,w,c
  1037  0016EE  5007               	movf	___almod@divisor+2,w,c
  1038  0016F0  5803               	subwfb	___almod@dividend+2,w,c
  1039  0016F2  5008               	movf	___almod@divisor+3,w,c
  1040  0016F4  5804               	subwfb	___almod@dividend+3,w,c
  1041  0016F6  A0D8               	btfss	status,0,c
  1042  0016F8  D008               	goto	l501
  1043  0016FA  5005               	movf	___almod@divisor,w,c
  1044  0016FC  5E01               	subwf	___almod@dividend,f,c
  1045  0016FE  5006               	movf	___almod@divisor+1,w,c
  1046  001700  5A02               	subwfb	___almod@dividend+1,f,c
  1047  001702  5007               	movf	___almod@divisor+2,w,c
  1048  001704  5A03               	subwfb	___almod@dividend+2,f,c
  1049  001706  5008               	movf	___almod@divisor+3,w,c
  1050  001708  5A04               	subwfb	___almod@dividend+3,f,c
  1051  00170A                     l501:
  1052  00170A  90D8               	bcf	status,0,c
  1053  00170C  3208               	rrcf	___almod@divisor+3,f,c
  1054  00170E  3207               	rrcf	___almod@divisor+2,f,c
  1055  001710  3206               	rrcf	___almod@divisor+1,f,c
  1056  001712  3205               	rrcf	___almod@divisor,f,c
  1057  001714  2E09               	decfsz	___almod@counter,f,c
  1058  001716  D7E7               	goto	u1370
  1059  001718                     l502:
  1060  001718  500A               	movf	___almod@sign,w,c
  1061  00171A  B4D8               	btfsc	status,2,c
  1062  00171C  D008               	goto	l503
  1063  00171E  1E04               	comf	___almod@dividend+3,f,c
  1064  001720  1E03               	comf	___almod@dividend+2,f,c
  1065  001722  1E02               	comf	___almod@dividend+1,f,c
  1066  001724  6C01               	negf	___almod@dividend,c
  1067  001726  0E00               	movlw	0
  1068  001728  2202               	addwfc	___almod@dividend+1,f,c
  1069  00172A  2203               	addwfc	___almod@dividend+2,f,c
  1070  00172C  2204               	addwfc	___almod@dividend+3,f,c
  1071  00172E                     l503:
  1072  00172E  C001  F001         	movff	___almod@dividend,?___almod
  1073  001732  C002  F002         	movff	___almod@dividend+1,?___almod+1
  1074  001736  C003  F003         	movff	___almod@dividend+2,?___almod+2
  1075  00173A  C004  F004         	movff	___almod@dividend+3,?___almod+3
  1076  00173E  0012               	return	
  1077  001740                     __end_of___almod:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodl	equ	0xFF3
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           indf2	equ	0xFDF
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function ___aldiv *****************
  1092 ;; Defined at:
  1093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  dividend        4    0[COMRAM] long 
  1096 ;;  divisor         4    4[COMRAM] long 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  quotient        4   10[COMRAM] long 
  1099 ;;  sign            1    9[COMRAM] unsigned char 
  1100 ;;  counter         1    8[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  4    0[COMRAM] long 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:       14 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_lcd_print_int
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text7
  1124  0015C8                     __ptext7:
  1125                           	opt stack 0
  1126  0015C8                     ___aldiv:
  1127                           	opt stack 29
  1128                           
  1129                           ;incstack = 0
  1130  0015C8  0E00               	movlw	0
  1131  0015CA  6E0A               	movwf	___aldiv@sign,c
  1132  0015CC  AE08               	btfss	___aldiv@divisor+3,7,c
  1133  0015CE  D00A               	goto	l481
  1134  0015D0  1E08               	comf	___aldiv@divisor+3,f,c
  1135  0015D2  1E07               	comf	___aldiv@divisor+2,f,c
  1136  0015D4  1E06               	comf	___aldiv@divisor+1,f,c
  1137  0015D6  6C05               	negf	___aldiv@divisor,c
  1138  0015D8  0E00               	movlw	0
  1139  0015DA  2206               	addwfc	___aldiv@divisor+1,f,c
  1140  0015DC  2207               	addwfc	___aldiv@divisor+2,f,c
  1141  0015DE  2208               	addwfc	___aldiv@divisor+3,f,c
  1142  0015E0  0E01               	movlw	1
  1143  0015E2  6E0A               	movwf	___aldiv@sign,c
  1144  0015E4                     l481:
  1145  0015E4  AE04               	btfss	___aldiv@dividend+3,7,c
  1146  0015E6  D00A               	goto	l482
  1147  0015E8  1E04               	comf	___aldiv@dividend+3,f,c
  1148  0015EA  1E03               	comf	___aldiv@dividend+2,f,c
  1149  0015EC  1E02               	comf	___aldiv@dividend+1,f,c
  1150  0015EE  6C01               	negf	___aldiv@dividend,c
  1151  0015F0  0E00               	movlw	0
  1152  0015F2  2202               	addwfc	___aldiv@dividend+1,f,c
  1153  0015F4  2203               	addwfc	___aldiv@dividend+2,f,c
  1154  0015F6  2204               	addwfc	___aldiv@dividend+3,f,c
  1155  0015F8  0E01               	movlw	1
  1156  0015FA  1A0A               	xorwf	___aldiv@sign,f,c
  1157  0015FC                     l482:
  1158  0015FC  0E00               	movlw	0
  1159  0015FE  6E0B               	movwf	___aldiv@quotient,c
  1160  001600  0E00               	movlw	0
  1161  001602  6E0C               	movwf	___aldiv@quotient+1,c
  1162  001604  0E00               	movlw	0
  1163  001606  6E0D               	movwf	___aldiv@quotient+2,c
  1164  001608  0E00               	movlw	0
  1165  00160A  6E0E               	movwf	___aldiv@quotient+3,c
  1166  00160C  5005               	movf	___aldiv@divisor,w,c
  1167  00160E  1006               	iorwf	___aldiv@divisor+1,w,c
  1168  001610  1007               	iorwf	___aldiv@divisor+2,w,c
  1169  001612  1008               	iorwf	___aldiv@divisor+3,w,c
  1170  001614  B4D8               	btfsc	status,2,c
  1171  001616  D02A               	goto	l489
  1172  001618  0E01               	movlw	1
  1173  00161A  6E09               	movwf	___aldiv@counter,c
  1174  00161C  D006               	goto	l484
  1175  00161E  90D8               	bcf	status,0,c
  1176  001620  3605               	rlcf	___aldiv@divisor,f,c
  1177  001622  3606               	rlcf	___aldiv@divisor+1,f,c
  1178  001624  3607               	rlcf	___aldiv@divisor+2,f,c
  1179  001626  3608               	rlcf	___aldiv@divisor+3,f,c
  1180  001628  2A09               	incf	___aldiv@counter,f,c
  1181  00162A                     l484:
  1182  00162A  AE08               	btfss	___aldiv@divisor+3,7,c
  1183  00162C  D7F8               	goto	l485
  1184  00162E                     u1310:
  1185  00162E  90D8               	bcf	status,0,c
  1186  001630  360B               	rlcf	___aldiv@quotient,f,c
  1187  001632  360C               	rlcf	___aldiv@quotient+1,f,c
  1188  001634  360D               	rlcf	___aldiv@quotient+2,f,c
  1189  001636  360E               	rlcf	___aldiv@quotient+3,f,c
  1190  001638  5005               	movf	___aldiv@divisor,w,c
  1191  00163A  5C01               	subwf	___aldiv@dividend,w,c
  1192  00163C  5006               	movf	___aldiv@divisor+1,w,c
  1193  00163E  5802               	subwfb	___aldiv@dividend+1,w,c
  1194  001640  5007               	movf	___aldiv@divisor+2,w,c
  1195  001642  5803               	subwfb	___aldiv@dividend+2,w,c
  1196  001644  5008               	movf	___aldiv@divisor+3,w,c
  1197  001646  5804               	subwfb	___aldiv@dividend+3,w,c
  1198  001648  A0D8               	btfss	status,0,c
  1199  00164A  D009               	goto	l488
  1200  00164C  5005               	movf	___aldiv@divisor,w,c
  1201  00164E  5E01               	subwf	___aldiv@dividend,f,c
  1202  001650  5006               	movf	___aldiv@divisor+1,w,c
  1203  001652  5A02               	subwfb	___aldiv@dividend+1,f,c
  1204  001654  5007               	movf	___aldiv@divisor+2,w,c
  1205  001656  5A03               	subwfb	___aldiv@dividend+2,f,c
  1206  001658  5008               	movf	___aldiv@divisor+3,w,c
  1207  00165A  5A04               	subwfb	___aldiv@dividend+3,f,c
  1208  00165C  800B               	bsf	___aldiv@quotient,0,c
  1209  00165E                     l488:
  1210  00165E  90D8               	bcf	status,0,c
  1211  001660  3208               	rrcf	___aldiv@divisor+3,f,c
  1212  001662  3207               	rrcf	___aldiv@divisor+2,f,c
  1213  001664  3206               	rrcf	___aldiv@divisor+1,f,c
  1214  001666  3205               	rrcf	___aldiv@divisor,f,c
  1215  001668  2E09               	decfsz	___aldiv@counter,f,c
  1216  00166A  D7E1               	goto	u1310
  1217  00166C                     l489:
  1218  00166C  500A               	movf	___aldiv@sign,w,c
  1219  00166E  B4D8               	btfsc	status,2,c
  1220  001670  D008               	goto	l490
  1221  001672  1E0E               	comf	___aldiv@quotient+3,f,c
  1222  001674  1E0D               	comf	___aldiv@quotient+2,f,c
  1223  001676  1E0C               	comf	___aldiv@quotient+1,f,c
  1224  001678  6C0B               	negf	___aldiv@quotient,c
  1225  00167A  0E00               	movlw	0
  1226  00167C  220C               	addwfc	___aldiv@quotient+1,f,c
  1227  00167E  220D               	addwfc	___aldiv@quotient+2,f,c
  1228  001680  220E               	addwfc	___aldiv@quotient+3,f,c
  1229  001682                     l490:
  1230  001682  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1231  001686  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1232  00168A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1233  00168E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1234  001692  0012               	return	
  1235  001694                     __end_of___aldiv:
  1236                           	opt stack 0
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           prodl	equ	0xFF3
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           indf2	equ	0xFDF
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8
  1248                           
  1249 ;; *************** function _init *****************
  1250 ;; Defined at:
  1251 ;;		line 6 in file "RobotLib.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    3
  1272 ;; This function calls:
  1273 ;;		_initADC
  1274 ;;		_initInterrupts
  1275 ;;		_initLCD
  1276 ;;		_initOutputs
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text8
  1283  0019E6                     __ptext8:
  1284                           	opt stack 0
  1285  0019E6                     _init:
  1286                           	opt stack 27
  1287                           
  1288                           ;RobotLib.c: 7: initOutputs();
  1289                           
  1290                           ;incstack = 0
  1291  0019E6  EC5A  F00C         	call	_initOutputs	;wreg free
  1292                           
  1293                           ;RobotLib.c: 8: initADC();
  1294  0019EA  ECC2  F00C         	call	_initADC	;wreg free
  1295                           
  1296                           ;RobotLib.c: 9: initInterrupts();
  1297  0019EE  ECFC  F00C         	call	_initInterrupts	;wreg free
  1298                           
  1299                           ;RobotLib.c: 10: initLCD();
  1300  0019F2  ECA0  F00B         	call	_initLCD	;wreg free
  1301  0019F6  0012               	return		;funcret
  1302  0019F8                     __end_of_init:
  1303                           	opt stack 0
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           prodl	equ	0xFF3
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           indf2	equ	0xFDF
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _initOutputs *****************
  1317 ;; Defined at:
  1318 ;;		line 104 in file "RobotLib.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               1    3[COMRAM] unsigned char 
  1323 ;;  i               1    2[COMRAM] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        2 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    1
  1340 ;; This function calls:
  1341 ;;		_digitalWrite
  1342 ;;		_pinMode
  1343 ;; This function is called by:
  1344 ;;		_init
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text9
  1349  0018B4                     __ptext9:
  1350                           	opt stack 0
  1351  0018B4                     _initOutputs:
  1352                           	opt stack 28
  1353                           
  1354                           ;RobotLib.c: 106: for(char i = 0; i<=11; i++)
  1355                           
  1356                           ;incstack = 0
  1357  0018B4  0E00               	movlw	0
  1358  0018B6  6E03               	movwf	initOutputs@i,c
  1359  0018B8                     l1727:
  1360  0018B8  0E0B               	movlw	11
  1361  0018BA  6403               	cpfsgt	initOutputs@i,c
  1362  0018BC  D001               	goto	l188
  1363  0018BE  D007               	goto	u1230
  1364  0018C0                     l188:
  1365                           
  1366                           ;RobotLib.c: 107: pinMode(i, 1);
  1367  0018C0  0E01               	movlw	1
  1368  0018C2  6E01               	movwf	pinMode@mode,c
  1369  0018C4  5003               	movf	initOutputs@i,w,c
  1370  0018C6  EC04  F008         	call	_pinMode
  1371  0018CA  2A03               	incf	initOutputs@i,f,c
  1372  0018CC  D7F5               	goto	l1727
  1373  0018CE                     u1230:
  1374                           
  1375                           ;RobotLib.c: 108: for(char i = 19; i<=22; i++){
  1376  0018CE  0E13               	movlw	19
  1377  0018D0  6E04               	movwf	initOutputs@i_1066,c
  1378  0018D2                     l1739:
  1379  0018D2  0E16               	movlw	22
  1380  0018D4  6404               	cpfsgt	initOutputs@i_1066,c
  1381  0018D6  D001               	goto	l190
  1382  0018D8  0012               	return	
  1383  0018DA                     l190:
  1384                           
  1385                           ;RobotLib.c: 109: pinMode(i, 0);
  1386  0018DA  0E00               	movlw	0
  1387  0018DC  6E01               	movwf	pinMode@mode,c
  1388  0018DE  5004               	movf	initOutputs@i_1066,w,c
  1389  0018E0  EC04  F008         	call	_pinMode
  1390                           
  1391                           ;RobotLib.c: 110: digitalWrite(i, 0);
  1392  0018E4  0E00               	movlw	0
  1393  0018E6  6E01               	movwf	digitalWrite@mode,c
  1394  0018E8  5004               	movf	initOutputs@i_1066,w,c
  1395  0018EA  ECEE  F008         	call	_digitalWrite
  1396  0018EE  2A04               	incf	initOutputs@i_1066,f,c
  1397  0018F0  D7F0               	goto	l1739
  1398  0018F2                     __end_of_initOutputs:
  1399                           	opt stack 0
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           prodl	equ	0xFF3
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           indf2	equ	0xFDF
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _pinMode *****************
  1413 ;; Defined at:
  1414 ;;		line 115 in file "RobotLib.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  pin             1    wreg     unsigned char 
  1417 ;;  mode            1    0[COMRAM] unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  pin             1    1[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;;		_initOutputs
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text10
  1444  001008                     __ptext10:
  1445                           	opt stack 0
  1446  001008                     _pinMode:
  1447                           	opt stack 30
  1448                           
  1449                           ;incstack = 0
  1450                           ;pinMode@pin stored from wreg
  1451  001008  6E02               	movwf	pinMode@pin,c
  1452                           
  1453                           ;RobotLib.c: 116: switch(pin)
  1454  00100A  D0A1               	goto	l195
  1455  00100C                     
  1456                           ;RobotLib.c: 119: if(mode)
  1457  00100C  5001               	movf	pinMode@mode,w,c
  1458  00100E  B4D8               	btfsc	status,2,c
  1459  001010  D002               	goto	l197
  1460                           
  1461                           ;RobotLib.c: 120: TRISA0 = 1;
  1462  001012  8092               	bsf	3986,0,c	;volatile
  1463  001014  0012               	return	
  1464  001016                     l197:
  1465                           
  1466                           ;RobotLib.c: 121: else
  1467                           ;RobotLib.c: 122: TRISA0 = 0;
  1468  001016  9092               	bcf	3986,0,c	;volatile
  1469                           
  1470                           ;RobotLib.c: 123: break;
  1471  001018  0012               	return	
  1472  00101A                     
  1473                           ;RobotLib.c: 126: if(mode)
  1474  00101A  5001               	movf	pinMode@mode,w,c
  1475  00101C  B4D8               	btfsc	status,2,c
  1476  00101E  D002               	goto	l201
  1477                           
  1478                           ;RobotLib.c: 127: TRISA1 = 1;
  1479  001020  8292               	bsf	3986,1,c	;volatile
  1480  001022  0012               	return	
  1481  001024                     l201:
  1482                           
  1483                           ;RobotLib.c: 128: else
  1484                           ;RobotLib.c: 129: TRISA1 = 0;
  1485  001024  9292               	bcf	3986,1,c	;volatile
  1486                           
  1487                           ;RobotLib.c: 130: break;
  1488  001026  0012               	return	
  1489  001028                     
  1490                           ;RobotLib.c: 133: if(mode)
  1491  001028  5001               	movf	pinMode@mode,w,c
  1492  00102A  B4D8               	btfsc	status,2,c
  1493  00102C  D002               	goto	l204
  1494                           
  1495                           ;RobotLib.c: 134: TRISA2 = 1;
  1496  00102E  8492               	bsf	3986,2,c	;volatile
  1497  001030  0012               	return	
  1498  001032                     l204:
  1499                           
  1500                           ;RobotLib.c: 135: else
  1501                           ;RobotLib.c: 136: TRISA2 = 0;
  1502  001032  9492               	bcf	3986,2,c	;volatile
  1503                           
  1504                           ;RobotLib.c: 137: break;
  1505  001034  0012               	return	
  1506  001036                     
  1507                           ;RobotLib.c: 140: if(mode)
  1508  001036  5001               	movf	pinMode@mode,w,c
  1509  001038  B4D8               	btfsc	status,2,c
  1510  00103A  D002               	goto	l207
  1511                           
  1512                           ;RobotLib.c: 141: TRISA3 = 1;
  1513  00103C  8692               	bsf	3986,3,c	;volatile
  1514  00103E  0012               	return	
  1515  001040                     l207:
  1516                           
  1517                           ;RobotLib.c: 142: else
  1518                           ;RobotLib.c: 143: TRISA3 = 0;
  1519  001040  9692               	bcf	3986,3,c	;volatile
  1520                           
  1521                           ;RobotLib.c: 144: break;
  1522  001042  0012               	return	
  1523  001044                     
  1524                           ;RobotLib.c: 147: if(mode)
  1525  001044  5001               	movf	pinMode@mode,w,c
  1526  001046  B4D8               	btfsc	status,2,c
  1527  001048  D002               	goto	l210
  1528                           
  1529                           ;RobotLib.c: 148: TRISA5 = 1;
  1530  00104A  8A92               	bsf	3986,5,c	;volatile
  1531  00104C  0012               	return	
  1532  00104E                     l210:
  1533                           
  1534                           ;RobotLib.c: 149: else
  1535                           ;RobotLib.c: 150: TRISA5 = 0;
  1536  00104E  9A92               	bcf	3986,5,c	;volatile
  1537                           
  1538                           ;RobotLib.c: 151: break;
  1539  001050  0012               	return	
  1540  001052                     
  1541                           ;RobotLib.c: 154: if(mode)
  1542  001052  5001               	movf	pinMode@mode,w,c
  1543  001054  B4D8               	btfsc	status,2,c
  1544  001056  D002               	goto	l213
  1545                           
  1546                           ;RobotLib.c: 155: TRISE0 = 1;
  1547  001058  8096               	bsf	3990,0,c	;volatile
  1548  00105A  0012               	return	
  1549  00105C                     l213:
  1550                           
  1551                           ;RobotLib.c: 156: else
  1552                           ;RobotLib.c: 157: TRISE0 = 0;
  1553  00105C  9096               	bcf	3990,0,c	;volatile
  1554                           
  1555                           ;RobotLib.c: 158: break;
  1556  00105E  0012               	return	
  1557  001060                     
  1558                           ;RobotLib.c: 161: if(mode)
  1559  001060  5001               	movf	pinMode@mode,w,c
  1560  001062  B4D8               	btfsc	status,2,c
  1561  001064  D002               	goto	l216
  1562                           
  1563                           ;RobotLib.c: 162: TRISE1 = 1;
  1564  001066  8296               	bsf	3990,1,c	;volatile
  1565  001068  0012               	return	
  1566  00106A                     l216:
  1567                           
  1568                           ;RobotLib.c: 163: else
  1569                           ;RobotLib.c: 164: TRISE1 = 0;
  1570  00106A  9296               	bcf	3990,1,c	;volatile
  1571                           
  1572                           ;RobotLib.c: 165: break;
  1573  00106C  0012               	return	
  1574  00106E                     
  1575                           ;RobotLib.c: 168: if(mode)
  1576  00106E  5001               	movf	pinMode@mode,w,c
  1577  001070  B4D8               	btfsc	status,2,c
  1578  001072  D002               	goto	l219
  1579                           
  1580                           ;RobotLib.c: 169: TRISE2 = 1;
  1581  001074  8496               	bsf	3990,2,c	;volatile
  1582  001076  0012               	return	
  1583  001078                     l219:
  1584                           
  1585                           ;RobotLib.c: 170: else
  1586                           ;RobotLib.c: 171: TRISE2 = 0;
  1587  001078  9496               	bcf	3990,2,c	;volatile
  1588                           
  1589                           ;RobotLib.c: 172: break;
  1590  00107A  0012               	return	
  1591  00107C                     
  1592                           ;RobotLib.c: 175: if(mode)
  1593  00107C  5001               	movf	pinMode@mode,w,c
  1594  00107E  B4D8               	btfsc	status,2,c
  1595  001080  D002               	goto	l222
  1596                           
  1597                           ;RobotLib.c: 176: TRISC5 = 1;
  1598  001082  8A94               	bsf	3988,5,c	;volatile
  1599  001084  0012               	return	
  1600  001086                     l222:
  1601                           
  1602                           ;RobotLib.c: 177: else
  1603                           ;RobotLib.c: 178: TRISC5 = 0;
  1604  001086  9A94               	bcf	3988,5,c	;volatile
  1605                           
  1606                           ;RobotLib.c: 179: break;
  1607  001088  0012               	return	
  1608  00108A                     
  1609                           ;RobotLib.c: 182: if(mode)
  1610  00108A  5001               	movf	pinMode@mode,w,c
  1611  00108C  B4D8               	btfsc	status,2,c
  1612  00108E  D002               	goto	l225
  1613                           
  1614                           ;RobotLib.c: 183: TRISB4 = 1;
  1615  001090  8893               	bsf	3987,4,c	;volatile
  1616  001092  0012               	return	
  1617  001094                     l225:
  1618                           
  1619                           ;RobotLib.c: 184: else
  1620                           ;RobotLib.c: 185: TRISB4 = 0;
  1621  001094  9893               	bcf	3987,4,c	;volatile
  1622                           
  1623                           ;RobotLib.c: 186: break;
  1624  001096  0012               	return	
  1625  001098                     
  1626                           ;RobotLib.c: 189: if(mode)
  1627  001098  5001               	movf	pinMode@mode,w,c
  1628  00109A  B4D8               	btfsc	status,2,c
  1629  00109C  D002               	goto	l228
  1630                           
  1631                           ;RobotLib.c: 190: TRISB5 = 1;
  1632  00109E  8A93               	bsf	3987,5,c	;volatile
  1633  0010A0  0012               	return	
  1634  0010A2                     l228:
  1635                           
  1636                           ;RobotLib.c: 191: else
  1637                           ;RobotLib.c: 192: TRISB5 = 0;
  1638  0010A2  9A93               	bcf	3987,5,c	;volatile
  1639                           
  1640                           ;RobotLib.c: 193: break;
  1641  0010A4  0012               	return	
  1642  0010A6                     
  1643                           ;RobotLib.c: 196: if(mode)
  1644  0010A6  5001               	movf	pinMode@mode,w,c
  1645  0010A8  B4D8               	btfsc	status,2,c
  1646  0010AA  D002               	goto	l231
  1647                           
  1648                           ;RobotLib.c: 197: TRISB0 = 1;
  1649  0010AC  8093               	bsf	3987,0,c	;volatile
  1650  0010AE  0012               	return	
  1651  0010B0                     l231:
  1652                           
  1653                           ;RobotLib.c: 198: else
  1654                           ;RobotLib.c: 199: TRISB0 = 0;
  1655  0010B0  9093               	bcf	3987,0,c	;volatile
  1656                           
  1657                           ;RobotLib.c: 200: break;
  1658  0010B2  0012               	return	
  1659  0010B4                     
  1660                           ;RobotLib.c: 203: if(mode)
  1661  0010B4  5001               	movf	pinMode@mode,w,c
  1662  0010B6  B4D8               	btfsc	status,2,c
  1663  0010B8  D002               	goto	l234
  1664                           
  1665                           ;RobotLib.c: 204: TRISC7 = 1;
  1666  0010BA  8E94               	bsf	3988,7,c	;volatile
  1667  0010BC  0012               	return	
  1668  0010BE                     l234:
  1669                           
  1670                           ;RobotLib.c: 205: else
  1671                           ;RobotLib.c: 206: TRISC7 = 0;
  1672  0010BE  9E94               	bcf	3988,7,c	;volatile
  1673                           
  1674                           ;RobotLib.c: 207: break;
  1675  0010C0  0012               	return	
  1676  0010C2                     
  1677                           ;RobotLib.c: 210: if(mode)
  1678  0010C2  5001               	movf	pinMode@mode,w,c
  1679  0010C4  B4D8               	btfsc	status,2,c
  1680  0010C6  D002               	goto	l237
  1681                           
  1682                           ;RobotLib.c: 211: TRISC6 = 1;
  1683  0010C8  8C94               	bsf	3988,6,c	;volatile
  1684  0010CA  0012               	return	
  1685  0010CC                     l237:
  1686                           
  1687                           ;RobotLib.c: 212: else
  1688                           ;RobotLib.c: 213: TRISC6 = 0;
  1689  0010CC  9C94               	bcf	3988,6,c	;volatile
  1690                           
  1691                           ;RobotLib.c: 214: break;
  1692  0010CE  0012               	return	
  1693  0010D0                     
  1694                           ;RobotLib.c: 217: if(mode)
  1695  0010D0  5001               	movf	pinMode@mode,w,c
  1696  0010D2  B4D8               	btfsc	status,2,c
  1697  0010D4  D002               	goto	l240
  1698                           
  1699                           ;RobotLib.c: 218: TRISC4 = 1;
  1700  0010D6  8894               	bsf	3988,4,c	;volatile
  1701  0010D8  0012               	return	
  1702  0010DA                     l240:
  1703                           
  1704                           ;RobotLib.c: 219: else
  1705                           ;RobotLib.c: 220: TRISC4 = 0;
  1706  0010DA  9894               	bcf	3988,4,c	;volatile
  1707                           
  1708                           ;RobotLib.c: 221: break;
  1709  0010DC  0012               	return	
  1710  0010DE                     
  1711                           ;RobotLib.c: 224: if(mode)
  1712  0010DE  5001               	movf	pinMode@mode,w,c
  1713  0010E0  B4D8               	btfsc	status,2,c
  1714  0010E2  D002               	goto	l243
  1715                           
  1716                           ;RobotLib.c: 225: TRISC3 = 1;
  1717  0010E4  8694               	bsf	3988,3,c	;volatile
  1718  0010E6  0012               	return	
  1719  0010E8                     l243:
  1720                           
  1721                           ;RobotLib.c: 226: else
  1722                           ;RobotLib.c: 227: TRISC3 = 0;
  1723  0010E8  9694               	bcf	3988,3,c	;volatile
  1724                           
  1725                           ;RobotLib.c: 228: break;
  1726  0010EA  0012               	return	
  1727  0010EC                     
  1728                           ;RobotLib.c: 231: if(mode)
  1729  0010EC  5001               	movf	pinMode@mode,w,c
  1730  0010EE  B4D8               	btfsc	status,2,c
  1731  0010F0  D002               	goto	l246
  1732                           
  1733                           ;RobotLib.c: 232: TRISA4 = 1;
  1734  0010F2  8892               	bsf	3986,4,c	;volatile
  1735  0010F4  0012               	return	
  1736  0010F6                     l246:
  1737                           
  1738                           ;RobotLib.c: 233: else
  1739                           ;RobotLib.c: 234: TRISA4 = 0;
  1740  0010F6  9892               	bcf	3986,4,c	;volatile
  1741                           
  1742                           ;RobotLib.c: 235: break;
  1743  0010F8  0012               	return	
  1744  0010FA                     
  1745                           ;RobotLib.c: 238: if(mode)
  1746  0010FA  5001               	movf	pinMode@mode,w,c
  1747  0010FC  B4D8               	btfsc	status,2,c
  1748  0010FE  D002               	goto	l249
  1749                           
  1750                           ;RobotLib.c: 239: TRISC0 = 1;
  1751  001100  8094               	bsf	3988,0,c	;volatile
  1752  001102  0012               	return	
  1753  001104                     l249:
  1754                           
  1755                           ;RobotLib.c: 240: else
  1756                           ;RobotLib.c: 241: TRISC0 = 0;
  1757  001104  9094               	bcf	3988,0,c	;volatile
  1758                           
  1759                           ;RobotLib.c: 242: break;
  1760  001106  0012               	return	
  1761  001108                     
  1762                           ;RobotLib.c: 245: if(mode)
  1763  001108  5001               	movf	pinMode@mode,w,c
  1764  00110A  B4D8               	btfsc	status,2,c
  1765  00110C  D002               	goto	l252
  1766                           
  1767                           ;RobotLib.c: 246: TRISB3 = 1;
  1768  00110E  8693               	bsf	3987,3,c	;volatile
  1769  001110  0012               	return	
  1770  001112                     l252:
  1771                           
  1772                           ;RobotLib.c: 247: else
  1773                           ;RobotLib.c: 248: TRISB3 = 0;
  1774  001112  9693               	bcf	3987,3,c	;volatile
  1775                           
  1776                           ;RobotLib.c: 249: break;
  1777  001114  0012               	return	
  1778  001116                     
  1779                           ;RobotLib.c: 252: if(mode)
  1780  001116  5001               	movf	pinMode@mode,w,c
  1781  001118  B4D8               	btfsc	status,2,c
  1782  00111A  D002               	goto	l255
  1783                           
  1784                           ;RobotLib.c: 253: TRISD0 = 1;
  1785  00111C  8095               	bsf	3989,0,c	;volatile
  1786  00111E  0012               	return	
  1787  001120                     l255:
  1788                           
  1789                           ;RobotLib.c: 254: else
  1790                           ;RobotLib.c: 255: TRISD0 = 0;
  1791  001120  9095               	bcf	3989,0,c	;volatile
  1792                           
  1793                           ;RobotLib.c: 256: break;
  1794  001122  0012               	return	
  1795  001124                     
  1796                           ;RobotLib.c: 259: if(mode)
  1797  001124  5001               	movf	pinMode@mode,w,c
  1798  001126  B4D8               	btfsc	status,2,c
  1799  001128  D002               	goto	l258
  1800                           
  1801                           ;RobotLib.c: 260: TRISD1 = 1;
  1802  00112A  8295               	bsf	3989,1,c	;volatile
  1803  00112C  0012               	return	
  1804  00112E                     l258:
  1805                           
  1806                           ;RobotLib.c: 261: else
  1807                           ;RobotLib.c: 262: TRISD1 = 0;
  1808  00112E  9295               	bcf	3989,1,c	;volatile
  1809                           
  1810                           ;RobotLib.c: 263: break;
  1811  001130  0012               	return	
  1812  001132                     
  1813                           ;RobotLib.c: 267: if(mode)
  1814  001132  5001               	movf	pinMode@mode,w,c
  1815  001134  B4D8               	btfsc	status,2,c
  1816  001136  D002               	goto	l261
  1817                           
  1818                           ;RobotLib.c: 268: TRISB1 = 1;
  1819  001138  8293               	bsf	3987,1,c	;volatile
  1820  00113A  0012               	return	
  1821  00113C                     l261:
  1822                           
  1823                           ;RobotLib.c: 269: else
  1824                           ;RobotLib.c: 270: TRISB1 = 0;
  1825  00113C  9293               	bcf	3987,1,c	;volatile
  1826                           
  1827                           ;RobotLib.c: 271: break;
  1828  00113E  0012               	return	
  1829  001140                     
  1830                           ;RobotLib.c: 274: if(mode)
  1831  001140  5001               	movf	pinMode@mode,w,c
  1832  001142  B4D8               	btfsc	status,2,c
  1833  001144  D002               	goto	l264
  1834                           
  1835                           ;RobotLib.c: 275: TRISB2 = 1;
  1836  001146  8493               	bsf	3987,2,c	;volatile
  1837  001148  0012               	return	
  1838  00114A                     l264:
  1839                           
  1840                           ;RobotLib.c: 276: else
  1841                           ;RobotLib.c: 277: TRISB2 = 0;
  1842  00114A  9493               	bcf	3987,2,c	;volatile
  1843                           
  1844                           ;RobotLib.c: 280: }
  1845                           
  1846                           ;RobotLib.c: 278: break;
  1847  00114C  0012               	return	
  1848  00114E                     l195:
  1849  00114E  5002               	movf	pinMode@pin,w,c
  1850                           
  1851                           ; Switch size 1, requested type "space"
  1852                           ; Number of cases is 23, Range of values is 0 to 22
  1853                           ; switch strategies available:
  1854                           ; Name         Instructions Cycles
  1855                           ; simple_byte           70    36 (average)
  1856                           ;	Chosen strategy is simple_byte
  1857  001150  0A00               	xorlw	0	; case 0
  1858  001152  B4D8               	btfsc	status,2,c
  1859  001154  D75B               	goto	l196
  1860  001156  0A01               	xorlw	1	; case 1
  1861  001158  B4D8               	btfsc	status,2,c
  1862  00115A  D75F               	goto	l200
  1863  00115C  0A03               	xorlw	3	; case 2
  1864  00115E  B4D8               	btfsc	status,2,c
  1865  001160  D763               	goto	l203
  1866  001162  0A01               	xorlw	1	; case 3
  1867  001164  B4D8               	btfsc	status,2,c
  1868  001166  D767               	goto	l206
  1869  001168  0A07               	xorlw	7	; case 4
  1870  00116A  B4D8               	btfsc	status,2,c
  1871  00116C  D76B               	goto	l209
  1872  00116E  0A01               	xorlw	1	; case 5
  1873  001170  B4D8               	btfsc	status,2,c
  1874  001172  D76F               	goto	l212
  1875  001174  0A03               	xorlw	3	; case 6
  1876  001176  B4D8               	btfsc	status,2,c
  1877  001178  D773               	goto	l215
  1878  00117A  0A01               	xorlw	1	; case 7
  1879  00117C  B4D8               	btfsc	status,2,c
  1880  00117E  D777               	goto	l218
  1881  001180  0A0F               	xorlw	15	; case 8
  1882  001182  B4D8               	btfsc	status,2,c
  1883  001184  D77B               	goto	l221
  1884  001186  0A01               	xorlw	1	; case 9
  1885  001188  B4D8               	btfsc	status,2,c
  1886  00118A  D77F               	goto	l224
  1887  00118C  0A03               	xorlw	3	; case 10
  1888  00118E  B4D8               	btfsc	status,2,c
  1889  001190  D783               	goto	l227
  1890  001192  0A01               	xorlw	1	; case 11
  1891  001194  B4D8               	btfsc	status,2,c
  1892  001196  D787               	goto	l230
  1893  001198  0A07               	xorlw	7	; case 12
  1894  00119A  B4D8               	btfsc	status,2,c
  1895  00119C  D78B               	goto	l233
  1896  00119E  0A01               	xorlw	1	; case 13
  1897  0011A0  B4D8               	btfsc	status,2,c
  1898  0011A2  D78F               	goto	l236
  1899  0011A4  0A03               	xorlw	3	; case 14
  1900  0011A6  B4D8               	btfsc	status,2,c
  1901  0011A8  D793               	goto	l239
  1902  0011AA  0A01               	xorlw	1	; case 15
  1903  0011AC  B4D8               	btfsc	status,2,c
  1904  0011AE  D797               	goto	l242
  1905  0011B0  0A1F               	xorlw	31	; case 16
  1906  0011B2  B4D8               	btfsc	status,2,c
  1907  0011B4  D79B               	goto	l245
  1908  0011B6  0A01               	xorlw	1	; case 17
  1909  0011B8  B4D8               	btfsc	status,2,c
  1910  0011BA  D79F               	goto	l248
  1911  0011BC  0A03               	xorlw	3	; case 18
  1912  0011BE  B4D8               	btfsc	status,2,c
  1913  0011C0  D7A3               	goto	l251
  1914  0011C2  0A01               	xorlw	1	; case 19
  1915  0011C4  B4D8               	btfsc	status,2,c
  1916  0011C6  D7A7               	goto	l254
  1917  0011C8  0A07               	xorlw	7	; case 20
  1918  0011CA  B4D8               	btfsc	status,2,c
  1919  0011CC  D7AB               	goto	l257
  1920  0011CE  0A01               	xorlw	1	; case 21
  1921  0011D0  B4D8               	btfsc	status,2,c
  1922  0011D2  D7AF               	goto	l260
  1923  0011D4  0A03               	xorlw	3	; case 22
  1924  0011D6  A4D8               	btfss	status,2,c
  1925  0011D8  0012               	return	
  1926  0011DA  D7B2               	goto	l263
  1927  0011DC                     __end_of_pinMode:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodl	equ	0xFF3
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           indf2	equ	0xFDF
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _digitalWrite *****************
  1942 ;; Defined at:
  1943 ;;		line 283 in file "RobotLib.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  pin             1    wreg     unsigned char 
  1946 ;;  mode            1    0[COMRAM] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  pin             1    1[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_initOutputs
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text11
  1972  0011DC                     __ptext11:
  1973                           	opt stack 0
  1974  0011DC                     _digitalWrite:
  1975                           	opt stack 28
  1976                           
  1977                           ;incstack = 0
  1978                           ;digitalWrite@pin stored from wreg
  1979  0011DC  6E02               	movwf	digitalWrite@pin,c
  1980                           
  1981                           ;RobotLib.c: 284: switch(pin)
  1982  0011DE  D0A1               	goto	l269
  1983  0011E0                     
  1984                           ;RobotLib.c: 287: if(mode)
  1985  0011E0  5001               	movf	digitalWrite@mode,w,c
  1986  0011E2  B4D8               	btfsc	status,2,c
  1987  0011E4  D002               	goto	l271
  1988                           
  1989                           ;RobotLib.c: 288: LATAbits.LATA0 = 1;
  1990  0011E6  8089               	bsf	3977,0,c	;volatile
  1991  0011E8  0012               	return	
  1992  0011EA                     l271:
  1993                           
  1994                           ;RobotLib.c: 289: else
  1995                           ;RobotLib.c: 290: LATAbits.LATA0 = 0;
  1996  0011EA  9089               	bcf	3977,0,c	;volatile
  1997                           
  1998                           ;RobotLib.c: 291: break;
  1999  0011EC  0012               	return	
  2000  0011EE                     
  2001                           ;RobotLib.c: 294: if(mode)
  2002  0011EE  5001               	movf	digitalWrite@mode,w,c
  2003  0011F0  B4D8               	btfsc	status,2,c
  2004  0011F2  D002               	goto	l275
  2005                           
  2006                           ;RobotLib.c: 295: LATAbits.LATA1 = 1;
  2007  0011F4  8289               	bsf	3977,1,c	;volatile
  2008  0011F6  0012               	return	
  2009  0011F8                     l275:
  2010                           
  2011                           ;RobotLib.c: 296: else
  2012                           ;RobotLib.c: 297: LATAbits.LATA1 = 0;
  2013  0011F8  9289               	bcf	3977,1,c	;volatile
  2014                           
  2015                           ;RobotLib.c: 298: break;
  2016  0011FA  0012               	return	
  2017  0011FC                     
  2018                           ;RobotLib.c: 301: if(mode)
  2019  0011FC  5001               	movf	digitalWrite@mode,w,c
  2020  0011FE  B4D8               	btfsc	status,2,c
  2021  001200  D002               	goto	l278
  2022                           
  2023                           ;RobotLib.c: 302: LATAbits.LATA2 = 1;
  2024  001202  8489               	bsf	3977,2,c	;volatile
  2025  001204  0012               	return	
  2026  001206                     l278:
  2027                           
  2028                           ;RobotLib.c: 303: else
  2029                           ;RobotLib.c: 304: LATAbits.LATA2 = 0;
  2030  001206  9489               	bcf	3977,2,c	;volatile
  2031                           
  2032                           ;RobotLib.c: 305: break;
  2033  001208  0012               	return	
  2034  00120A                     
  2035                           ;RobotLib.c: 308: if(mode)
  2036  00120A  5001               	movf	digitalWrite@mode,w,c
  2037  00120C  B4D8               	btfsc	status,2,c
  2038  00120E  D002               	goto	l281
  2039                           
  2040                           ;RobotLib.c: 309: LATAbits.LATA3 = 1;
  2041  001210  8689               	bsf	3977,3,c	;volatile
  2042  001212  0012               	return	
  2043  001214                     l281:
  2044                           
  2045                           ;RobotLib.c: 310: else
  2046                           ;RobotLib.c: 311: LATAbits.LATA3 = 0;
  2047  001214  9689               	bcf	3977,3,c	;volatile
  2048                           
  2049                           ;RobotLib.c: 312: break;
  2050  001216  0012               	return	
  2051  001218                     
  2052                           ;RobotLib.c: 315: if(mode)
  2053  001218  5001               	movf	digitalWrite@mode,w,c
  2054  00121A  B4D8               	btfsc	status,2,c
  2055  00121C  D002               	goto	l284
  2056                           
  2057                           ;RobotLib.c: 316: LATAbits.LATA5 = 1;
  2058  00121E  8A89               	bsf	3977,5,c	;volatile
  2059  001220  0012               	return	
  2060  001222                     l284:
  2061                           
  2062                           ;RobotLib.c: 317: else
  2063                           ;RobotLib.c: 318: LATAbits.LATA5 = 0;
  2064  001222  9A89               	bcf	3977,5,c	;volatile
  2065                           
  2066                           ;RobotLib.c: 319: break;
  2067  001224  0012               	return	
  2068  001226                     
  2069                           ;RobotLib.c: 322: if(mode)
  2070  001226  5001               	movf	digitalWrite@mode,w,c
  2071  001228  B4D8               	btfsc	status,2,c
  2072  00122A  D002               	goto	l287
  2073                           
  2074                           ;RobotLib.c: 323: LATEbits.LATE0 = 1;
  2075  00122C  808D               	bsf	3981,0,c	;volatile
  2076  00122E  0012               	return	
  2077  001230                     l287:
  2078                           
  2079                           ;RobotLib.c: 324: else
  2080                           ;RobotLib.c: 325: LATEbits.LATE0 = 0;
  2081  001230  908D               	bcf	3981,0,c	;volatile
  2082                           
  2083                           ;RobotLib.c: 326: break;
  2084  001232  0012               	return	
  2085  001234                     
  2086                           ;RobotLib.c: 329: if(mode)
  2087  001234  5001               	movf	digitalWrite@mode,w,c
  2088  001236  B4D8               	btfsc	status,2,c
  2089  001238  D002               	goto	l290
  2090                           
  2091                           ;RobotLib.c: 330: LATEbits.LATE1 = 1;
  2092  00123A  828D               	bsf	3981,1,c	;volatile
  2093  00123C  0012               	return	
  2094  00123E                     l290:
  2095                           
  2096                           ;RobotLib.c: 331: else
  2097                           ;RobotLib.c: 332: LATEbits.LATE1 = 0;
  2098  00123E  928D               	bcf	3981,1,c	;volatile
  2099                           
  2100                           ;RobotLib.c: 333: break;
  2101  001240  0012               	return	
  2102  001242                     
  2103                           ;RobotLib.c: 336: if(mode)
  2104  001242  5001               	movf	digitalWrite@mode,w,c
  2105  001244  B4D8               	btfsc	status,2,c
  2106  001246  D002               	goto	l293
  2107                           
  2108                           ;RobotLib.c: 337: LATEbits.LATE2 = 1;
  2109  001248  848D               	bsf	3981,2,c	;volatile
  2110  00124A  0012               	return	
  2111  00124C                     l293:
  2112                           
  2113                           ;RobotLib.c: 338: else
  2114                           ;RobotLib.c: 339: LATEbits.LATE2 = 0;
  2115  00124C  948D               	bcf	3981,2,c	;volatile
  2116                           
  2117                           ;RobotLib.c: 340: break;
  2118  00124E  0012               	return	
  2119  001250                     
  2120                           ;RobotLib.c: 343: if(mode)
  2121  001250  5001               	movf	digitalWrite@mode,w,c
  2122  001252  B4D8               	btfsc	status,2,c
  2123  001254  D002               	goto	l296
  2124                           
  2125                           ;RobotLib.c: 344: LATCbits.LATC5 = 1;
  2126  001256  8A8B               	bsf	3979,5,c	;volatile
  2127  001258  0012               	return	
  2128  00125A                     l296:
  2129                           
  2130                           ;RobotLib.c: 345: else
  2131                           ;RobotLib.c: 346: LATCbits.LATC5 = 0;
  2132  00125A  9A8B               	bcf	3979,5,c	;volatile
  2133                           
  2134                           ;RobotLib.c: 347: break;
  2135  00125C  0012               	return	
  2136  00125E                     
  2137                           ;RobotLib.c: 350: if(mode)
  2138  00125E  5001               	movf	digitalWrite@mode,w,c
  2139  001260  B4D8               	btfsc	status,2,c
  2140  001262  D002               	goto	l299
  2141                           
  2142                           ;RobotLib.c: 351: LATBbits.LATB4 = 1;
  2143  001264  888A               	bsf	3978,4,c	;volatile
  2144  001266  0012               	return	
  2145  001268                     l299:
  2146                           
  2147                           ;RobotLib.c: 352: else
  2148                           ;RobotLib.c: 353: LATBbits.LATB4 = 0;
  2149  001268  988A               	bcf	3978,4,c	;volatile
  2150                           
  2151                           ;RobotLib.c: 354: break;
  2152  00126A  0012               	return	
  2153  00126C                     
  2154                           ;RobotLib.c: 357: if(mode)
  2155  00126C  5001               	movf	digitalWrite@mode,w,c
  2156  00126E  B4D8               	btfsc	status,2,c
  2157  001270  D002               	goto	l302
  2158                           
  2159                           ;RobotLib.c: 358: LATBbits.LATB5 = 1;
  2160  001272  8A8A               	bsf	3978,5,c	;volatile
  2161  001274  0012               	return	
  2162  001276                     l302:
  2163                           
  2164                           ;RobotLib.c: 359: else
  2165                           ;RobotLib.c: 360: LATBbits.LATB5 = 0;
  2166  001276  9A8A               	bcf	3978,5,c	;volatile
  2167                           
  2168                           ;RobotLib.c: 361: break;
  2169  001278  0012               	return	
  2170  00127A                     
  2171                           ;RobotLib.c: 364: if(mode)
  2172  00127A  5001               	movf	digitalWrite@mode,w,c
  2173  00127C  B4D8               	btfsc	status,2,c
  2174  00127E  D002               	goto	l305
  2175                           
  2176                           ;RobotLib.c: 365: LATBbits.LATB0 = 1;
  2177  001280  808A               	bsf	3978,0,c	;volatile
  2178  001282  0012               	return	
  2179  001284                     l305:
  2180                           
  2181                           ;RobotLib.c: 366: else
  2182                           ;RobotLib.c: 367: LATBbits.LATB0 = 0;
  2183  001284  908A               	bcf	3978,0,c	;volatile
  2184                           
  2185                           ;RobotLib.c: 368: break;
  2186  001286  0012               	return	
  2187  001288                     
  2188                           ;RobotLib.c: 371: if(mode)
  2189  001288  5001               	movf	digitalWrite@mode,w,c
  2190  00128A  B4D8               	btfsc	status,2,c
  2191  00128C  D002               	goto	l308
  2192                           
  2193                           ;RobotLib.c: 372: LATCbits.LATC7 = 1;
  2194  00128E  8E8B               	bsf	3979,7,c	;volatile
  2195  001290  0012               	return	
  2196  001292                     l308:
  2197                           
  2198                           ;RobotLib.c: 373: else
  2199                           ;RobotLib.c: 374: LATCbits.LATC7 = 0;
  2200  001292  9E8B               	bcf	3979,7,c	;volatile
  2201                           
  2202                           ;RobotLib.c: 375: break;
  2203  001294  0012               	return	
  2204  001296                     
  2205                           ;RobotLib.c: 378: if(mode)
  2206  001296  5001               	movf	digitalWrite@mode,w,c
  2207  001298  B4D8               	btfsc	status,2,c
  2208  00129A  D002               	goto	l311
  2209                           
  2210                           ;RobotLib.c: 379: LATCbits.LATC6 = 1;
  2211  00129C  8C8B               	bsf	3979,6,c	;volatile
  2212  00129E  0012               	return	
  2213  0012A0                     l311:
  2214                           
  2215                           ;RobotLib.c: 380: else
  2216                           ;RobotLib.c: 381: LATCbits.LATC6 = 0;
  2217  0012A0  9C8B               	bcf	3979,6,c	;volatile
  2218                           
  2219                           ;RobotLib.c: 382: break;
  2220  0012A2  0012               	return	
  2221  0012A4                     
  2222                           ;RobotLib.c: 385: if(mode)
  2223  0012A4  5001               	movf	digitalWrite@mode,w,c
  2224  0012A6  B4D8               	btfsc	status,2,c
  2225  0012A8  D002               	goto	l314
  2226                           
  2227                           ;RobotLib.c: 386: LATCbits.LATC4 = 1;
  2228  0012AA  888B               	bsf	3979,4,c	;volatile
  2229  0012AC  0012               	return	
  2230  0012AE                     l314:
  2231                           
  2232                           ;RobotLib.c: 387: else
  2233                           ;RobotLib.c: 388: LATCbits.LATC4 = 0;
  2234  0012AE  988B               	bcf	3979,4,c	;volatile
  2235                           
  2236                           ;RobotLib.c: 389: break;
  2237  0012B0  0012               	return	
  2238  0012B2                     
  2239                           ;RobotLib.c: 392: if(mode)
  2240  0012B2  5001               	movf	digitalWrite@mode,w,c
  2241  0012B4  B4D8               	btfsc	status,2,c
  2242  0012B6  D002               	goto	l317
  2243                           
  2244                           ;RobotLib.c: 393: LATCbits.LATC3 = 1;
  2245  0012B8  868B               	bsf	3979,3,c	;volatile
  2246  0012BA  0012               	return	
  2247  0012BC                     l317:
  2248                           
  2249                           ;RobotLib.c: 394: else
  2250                           ;RobotLib.c: 395: LATCbits.LATC3 = 0;
  2251  0012BC  968B               	bcf	3979,3,c	;volatile
  2252                           
  2253                           ;RobotLib.c: 396: break;
  2254  0012BE  0012               	return	
  2255  0012C0                     
  2256                           ;RobotLib.c: 399: if(mode)
  2257  0012C0  5001               	movf	digitalWrite@mode,w,c
  2258  0012C2  B4D8               	btfsc	status,2,c
  2259  0012C4  D002               	goto	l320
  2260                           
  2261                           ;RobotLib.c: 400: LATAbits.LATA4 = 1;
  2262  0012C6  8889               	bsf	3977,4,c	;volatile
  2263  0012C8  0012               	return	
  2264  0012CA                     l320:
  2265                           
  2266                           ;RobotLib.c: 401: else
  2267                           ;RobotLib.c: 402: LATAbits.LATA4 = 0;
  2268  0012CA  9889               	bcf	3977,4,c	;volatile
  2269                           
  2270                           ;RobotLib.c: 403: break;
  2271  0012CC  0012               	return	
  2272  0012CE                     
  2273                           ;RobotLib.c: 406: if(mode)
  2274  0012CE  5001               	movf	digitalWrite@mode,w,c
  2275  0012D0  B4D8               	btfsc	status,2,c
  2276  0012D2  D002               	goto	l323
  2277                           
  2278                           ;RobotLib.c: 407: LATCbits.LATC0 = 1;
  2279  0012D4  808B               	bsf	3979,0,c	;volatile
  2280  0012D6  0012               	return	
  2281  0012D8                     l323:
  2282                           
  2283                           ;RobotLib.c: 408: else
  2284                           ;RobotLib.c: 409: LATCbits.LATC0 = 0;
  2285  0012D8  908B               	bcf	3979,0,c	;volatile
  2286                           
  2287                           ;RobotLib.c: 410: break;
  2288  0012DA  0012               	return	
  2289  0012DC                     
  2290                           ;RobotLib.c: 413: if(mode)
  2291  0012DC  5001               	movf	digitalWrite@mode,w,c
  2292  0012DE  B4D8               	btfsc	status,2,c
  2293  0012E0  D002               	goto	l326
  2294                           
  2295                           ;RobotLib.c: 414: LATBbits.LATB3 = 1;
  2296  0012E2  868A               	bsf	3978,3,c	;volatile
  2297  0012E4  0012               	return	
  2298  0012E6                     l326:
  2299                           
  2300                           ;RobotLib.c: 415: else
  2301                           ;RobotLib.c: 416: LATBbits.LATB3 = 0;
  2302  0012E6  968A               	bcf	3978,3,c	;volatile
  2303                           
  2304                           ;RobotLib.c: 417: break;
  2305  0012E8  0012               	return	
  2306  0012EA                     
  2307                           ;RobotLib.c: 420: if(mode)
  2308  0012EA  5001               	movf	digitalWrite@mode,w,c
  2309  0012EC  B4D8               	btfsc	status,2,c
  2310  0012EE  D002               	goto	l329
  2311                           
  2312                           ;RobotLib.c: 421: LATDbits.LATD0 = 1;
  2313  0012F0  808C               	bsf	3980,0,c	;volatile
  2314  0012F2  0012               	return	
  2315  0012F4                     l329:
  2316                           
  2317                           ;RobotLib.c: 422: else
  2318                           ;RobotLib.c: 423: LATDbits.LATD0 = 0;
  2319  0012F4  908C               	bcf	3980,0,c	;volatile
  2320                           
  2321                           ;RobotLib.c: 424: break;
  2322  0012F6  0012               	return	
  2323  0012F8                     
  2324                           ;RobotLib.c: 427: if(mode)
  2325  0012F8  5001               	movf	digitalWrite@mode,w,c
  2326  0012FA  B4D8               	btfsc	status,2,c
  2327  0012FC  D002               	goto	l332
  2328                           
  2329                           ;RobotLib.c: 428: LATDbits.LATD1 = 1;
  2330  0012FE  828C               	bsf	3980,1,c	;volatile
  2331  001300  0012               	return	
  2332  001302                     l332:
  2333                           
  2334                           ;RobotLib.c: 429: else
  2335                           ;RobotLib.c: 430: LATDbits.LATD1 = 0;
  2336  001302  928C               	bcf	3980,1,c	;volatile
  2337                           
  2338                           ;RobotLib.c: 431: break;
  2339  001304  0012               	return	
  2340  001306                     
  2341                           ;RobotLib.c: 435: if(mode)
  2342  001306  5001               	movf	digitalWrite@mode,w,c
  2343  001308  B4D8               	btfsc	status,2,c
  2344  00130A  D002               	goto	l335
  2345                           
  2346                           ;RobotLib.c: 436: LATBbits.LATB1 = 1;
  2347  00130C  828A               	bsf	3978,1,c	;volatile
  2348  00130E  0012               	return	
  2349  001310                     l335:
  2350                           
  2351                           ;RobotLib.c: 437: else
  2352                           ;RobotLib.c: 438: LATBbits.LATB1 = 0;
  2353  001310  928A               	bcf	3978,1,c	;volatile
  2354                           
  2355                           ;RobotLib.c: 439: break;
  2356  001312  0012               	return	
  2357  001314                     
  2358                           ;RobotLib.c: 442: if(mode)
  2359  001314  5001               	movf	digitalWrite@mode,w,c
  2360  001316  B4D8               	btfsc	status,2,c
  2361  001318  D002               	goto	l338
  2362                           
  2363                           ;RobotLib.c: 443: LATBbits.LATB2 = 1;
  2364  00131A  848A               	bsf	3978,2,c	;volatile
  2365  00131C  0012               	return	
  2366  00131E                     l338:
  2367                           
  2368                           ;RobotLib.c: 444: else
  2369                           ;RobotLib.c: 445: LATBbits.LATB2 = 0;
  2370  00131E  948A               	bcf	3978,2,c	;volatile
  2371                           
  2372                           ;RobotLib.c: 448: }
  2373                           
  2374                           ;RobotLib.c: 446: break;
  2375  001320  0012               	return	
  2376  001322                     l269:
  2377  001322  5002               	movf	digitalWrite@pin,w,c
  2378                           
  2379                           ; Switch size 1, requested type "space"
  2380                           ; Number of cases is 23, Range of values is 0 to 22
  2381                           ; switch strategies available:
  2382                           ; Name         Instructions Cycles
  2383                           ; simple_byte           70    36 (average)
  2384                           ;	Chosen strategy is simple_byte
  2385  001324  0A00               	xorlw	0	; case 0
  2386  001326  B4D8               	btfsc	status,2,c
  2387  001328  D75B               	goto	l270
  2388  00132A  0A01               	xorlw	1	; case 1
  2389  00132C  B4D8               	btfsc	status,2,c
  2390  00132E  D75F               	goto	l274
  2391  001330  0A03               	xorlw	3	; case 2
  2392  001332  B4D8               	btfsc	status,2,c
  2393  001334  D763               	goto	l277
  2394  001336  0A01               	xorlw	1	; case 3
  2395  001338  B4D8               	btfsc	status,2,c
  2396  00133A  D767               	goto	l280
  2397  00133C  0A07               	xorlw	7	; case 4
  2398  00133E  B4D8               	btfsc	status,2,c
  2399  001340  D76B               	goto	l283
  2400  001342  0A01               	xorlw	1	; case 5
  2401  001344  B4D8               	btfsc	status,2,c
  2402  001346  D76F               	goto	l286
  2403  001348  0A03               	xorlw	3	; case 6
  2404  00134A  B4D8               	btfsc	status,2,c
  2405  00134C  D773               	goto	l289
  2406  00134E  0A01               	xorlw	1	; case 7
  2407  001350  B4D8               	btfsc	status,2,c
  2408  001352  D777               	goto	l292
  2409  001354  0A0F               	xorlw	15	; case 8
  2410  001356  B4D8               	btfsc	status,2,c
  2411  001358  D77B               	goto	l295
  2412  00135A  0A01               	xorlw	1	; case 9
  2413  00135C  B4D8               	btfsc	status,2,c
  2414  00135E  D77F               	goto	l298
  2415  001360  0A03               	xorlw	3	; case 10
  2416  001362  B4D8               	btfsc	status,2,c
  2417  001364  D783               	goto	l301
  2418  001366  0A01               	xorlw	1	; case 11
  2419  001368  B4D8               	btfsc	status,2,c
  2420  00136A  D787               	goto	l304
  2421  00136C  0A07               	xorlw	7	; case 12
  2422  00136E  B4D8               	btfsc	status,2,c
  2423  001370  D78B               	goto	l307
  2424  001372  0A01               	xorlw	1	; case 13
  2425  001374  B4D8               	btfsc	status,2,c
  2426  001376  D78F               	goto	l310
  2427  001378  0A03               	xorlw	3	; case 14
  2428  00137A  B4D8               	btfsc	status,2,c
  2429  00137C  D793               	goto	l313
  2430  00137E  0A01               	xorlw	1	; case 15
  2431  001380  B4D8               	btfsc	status,2,c
  2432  001382  D797               	goto	l316
  2433  001384  0A1F               	xorlw	31	; case 16
  2434  001386  B4D8               	btfsc	status,2,c
  2435  001388  D79B               	goto	l319
  2436  00138A  0A01               	xorlw	1	; case 17
  2437  00138C  B4D8               	btfsc	status,2,c
  2438  00138E  D79F               	goto	l322
  2439  001390  0A03               	xorlw	3	; case 18
  2440  001392  B4D8               	btfsc	status,2,c
  2441  001394  D7A3               	goto	l325
  2442  001396  0A01               	xorlw	1	; case 19
  2443  001398  B4D8               	btfsc	status,2,c
  2444  00139A  D7A7               	goto	l328
  2445  00139C  0A07               	xorlw	7	; case 20
  2446  00139E  B4D8               	btfsc	status,2,c
  2447  0013A0  D7AB               	goto	l331
  2448  0013A2  0A01               	xorlw	1	; case 21
  2449  0013A4  B4D8               	btfsc	status,2,c
  2450  0013A6  D7AF               	goto	l334
  2451  0013A8  0A03               	xorlw	3	; case 22
  2452  0013AA  A4D8               	btfss	status,2,c
  2453  0013AC  0012               	return	
  2454  0013AE  D7B2               	goto	l337
  2455  0013B0                     __end_of_digitalWrite:
  2456                           	opt stack 0
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodl	equ	0xFF3
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           indf2	equ	0xFDF
  2465                           fsr2h	equ	0xFDA
  2466                           fsr2l	equ	0xFD9
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _initLCD *****************
  2470 ;; Defined at:
  2471 ;;		line 30 in file "RobotLib.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  i               1    3[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    2
  2492 ;; This function calls:
  2493 ;;		_lcdCmd
  2494 ;;		_lcdPulse
  2495 ;; This function is called by:
  2496 ;;		_init
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text12
  2501  001740                     __ptext12:
  2502                           	opt stack 0
  2503  001740                     _initLCD:
  2504                           	opt stack 27
  2505                           
  2506                           ;RobotLib.c: 32: TRISD &= 0x03;
  2507                           
  2508                           ;incstack = 0
  2509  001740  0E03               	movlw	3
  2510  001742  1695               	andwf	3989,f,c	;volatile
  2511                           
  2512                           ;RobotLib.c: 33: LATD &= 0b00001111;
  2513  001744  0E0F               	movlw	15
  2514  001746  168C               	andwf	3980,f,c	;volatile
  2515                           
  2516                           ;RobotLib.c: 34: PORTDbits.RD3 = 0;
  2517  001748  9683               	bcf	3971,3,c	;volatile
  2518                           
  2519                           ;RobotLib.c: 35: PORTDbits.RD2 = 0;
  2520  00174A  9483               	bcf	3971,2,c	;volatile
  2521                           
  2522                           ;RobotLib.c: 36: for(char i = 0; i<3; i++){
  2523  00174C  0E00               	movlw	0
  2524  00174E  6E04               	movwf	initLCD@i,c
  2525  001750                     l1301:
  2526  001750  0E02               	movlw	2
  2527  001752  6404               	cpfsgt	initLCD@i,c
  2528  001754  D001               	goto	l157
  2529  001756  D00F               	goto	u520
  2530  001758                     l157:
  2531                           
  2532                           ;RobotLib.c: 37: _delay((unsigned long)((1)*(40000000/4000.0)));
  2533  001758  0E0D               	movlw	13
  2534  00175A  6E03               	movwf	??_initLCD& (0+255),c
  2535  00175C  0EFC               	movlw	252
  2536  00175E                     u1497:
  2537  00175E  2EE8               	decfsz	wreg,f,c
  2538  001760  D7FE               	bra	u1497
  2539  001762  2E03               	decfsz	??_initLCD& (0+255),f,c
  2540  001764  D7FC               	bra	u1497
  2541                           
  2542                           ;RobotLib.c: 38: LATD = (LATD&0x0f)|0x30;
  2543  001766  508C               	movf	3980,w,c	;volatile
  2544  001768  0B0F               	andlw	15
  2545  00176A  0930               	iorlw	48
  2546  00176C  6E8C               	movwf	3980,c	;volatile
  2547                           
  2548                           ;RobotLib.c: 39: lcdPulse();
  2549  00176E  ECE8  F00C         	call	_lcdPulse	;wreg free
  2550  001772  2A04               	incf	initLCD@i,f,c
  2551  001774  D7ED               	goto	l1301
  2552  001776                     u520:
  2553                           
  2554                           ;RobotLib.c: 40: }
  2555                           ;RobotLib.c: 41: LATD = (LATD&0x0f)|0x20;
  2556  001776  508C               	movf	3980,w,c	;volatile
  2557  001778  0B0F               	andlw	15
  2558  00177A  0920               	iorlw	32
  2559  00177C  6E8C               	movwf	3980,c	;volatile
  2560                           
  2561                           ;RobotLib.c: 42: lcdPulse();
  2562  00177E  ECE8  F00C         	call	_lcdPulse	;wreg free
  2563                           
  2564                           ;RobotLib.c: 43: _delay((unsigned long)((1)*(40000000/4000.0)));
  2565  001782  0E0D               	movlw	13
  2566  001784  6E03               	movwf	??_initLCD& (0+255),c
  2567  001786  0EFC               	movlw	252
  2568  001788                     u1507:
  2569  001788  2EE8               	decfsz	wreg,f,c
  2570  00178A  D7FE               	bra	u1507
  2571  00178C  2E03               	decfsz	??_initLCD& (0+255),f,c
  2572  00178E  D7FC               	bra	u1507
  2573                           
  2574                           ;RobotLib.c: 44: lcdCmd(0x28);
  2575  001790  0E28               	movlw	40
  2576  001792  EC39  F00C         	call	_lcdCmd
  2577                           
  2578                           ;RobotLib.c: 45: lcdCmd(0x01);
  2579  001796  0E01               	movlw	1
  2580  001798  EC39  F00C         	call	_lcdCmd
  2581                           
  2582                           ;RobotLib.c: 46: lcdCmd(0x06);
  2583  00179C  0E06               	movlw	6
  2584  00179E  EC39  F00C         	call	_lcdCmd
  2585                           
  2586                           ;RobotLib.c: 47: lcdCmd(0x0C);
  2587  0017A2  0E0C               	movlw	12
  2588  0017A4  EC39  F00C         	call	_lcdCmd
  2589                           
  2590                           ;RobotLib.c: 48: lcdCmd(0x02);
  2591  0017A8  0E02               	movlw	2
  2592  0017AA  EC39  F00C         	call	_lcdCmd
  2593                           
  2594                           ;RobotLib.c: 49: lcdCmd(0x01);
  2595  0017AE  0E01               	movlw	1
  2596  0017B0  EC39  F00C         	call	_lcdCmd
  2597  0017B4  0012               	return		;funcret
  2598  0017B6                     __end_of_initLCD:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           prodl	equ	0xFF3
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           indf2	equ	0xFDF
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _lcdCmd *****************
  2613 ;; Defined at:
  2614 ;;		line 21 in file "RobotLib.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  cmd             1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  cmd             1    1[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		_lcdPulse
  2637 ;; This function is called by:
  2638 ;;		_initLCD
  2639 ;;		_lcd_setCursor
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text13
  2644  001872                     __ptext13:
  2645                           	opt stack 0
  2646  001872                     _lcdCmd:
  2647                           	opt stack 28
  2648                           
  2649                           ;incstack = 0
  2650                           ;lcdCmd@cmd stored from wreg
  2651  001872  6E02               	movwf	lcdCmd@cmd,c
  2652                           
  2653                           ;RobotLib.c: 22: PORTDbits.RD2 = 0;
  2654  001874  9483               	bcf	3971,2,c	;volatile
  2655                           
  2656                           ;RobotLib.c: 23: LATD = (LATD&0x0f)|(cmd&0xf0);
  2657  001876  C002  F001         	movff	lcdCmd@cmd,??_lcdCmd
  2658  00187A  0EF0               	movlw	240
  2659  00187C  1601               	andwf	??_lcdCmd,f,c
  2660  00187E  508C               	movf	3980,w,c	;volatile
  2661  001880  0B0F               	andlw	15
  2662  001882  1001               	iorwf	??_lcdCmd,w,c
  2663  001884  6E8C               	movwf	3980,c	;volatile
  2664                           
  2665                           ;RobotLib.c: 24: lcdPulse();
  2666  001886  ECE8  F00C         	call	_lcdPulse	;wreg free
  2667                           
  2668                           ;RobotLib.c: 25: LATD = (LATD&0x0f)|((cmd<<4)&0xf0);
  2669  00188A  C002  F001         	movff	lcdCmd@cmd,??_lcdCmd
  2670  00188E  3A01               	swapf	??_lcdCmd,f,c
  2671  001890  0EF0               	movlw	240
  2672  001892  1601               	andwf	??_lcdCmd,f,c
  2673  001894  0EF0               	movlw	240
  2674  001896  1601               	andwf	??_lcdCmd,f,c
  2675  001898  508C               	movf	3980,w,c	;volatile
  2676  00189A  0B0F               	andlw	15
  2677  00189C  1001               	iorwf	??_lcdCmd,w,c
  2678  00189E  6E8C               	movwf	3980,c	;volatile
  2679                           
  2680                           ;RobotLib.c: 26: lcdPulse();
  2681  0018A0  ECE8  F00C         	call	_lcdPulse	;wreg free
  2682                           
  2683                           ;RobotLib.c: 27: _delay((unsigned long)((1)*(40000000/4000.0)));
  2684  0018A4  0E0D               	movlw	13
  2685  0018A6  6E01               	movwf	??_lcdCmd& (0+255),c
  2686  0018A8  0EFC               	movlw	252
  2687  0018AA                     u1517:
  2688  0018AA  2EE8               	decfsz	wreg,f,c
  2689  0018AC  D7FE               	bra	u1517
  2690  0018AE  2E01               	decfsz	??_lcdCmd& (0+255),f,c
  2691  0018B0  D7FC               	bra	u1517
  2692  0018B2  0012               	return		;funcret
  2693  0018B4                     __end_of_lcdCmd:
  2694                           	opt stack 0
  2695                           tblptru	equ	0xFF8
  2696                           tblptrh	equ	0xFF7
  2697                           tblptrl	equ	0xFF6
  2698                           tablat	equ	0xFF5
  2699                           prodl	equ	0xFF3
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           indf2	equ	0xFDF
  2703                           fsr2h	equ	0xFDA
  2704                           fsr2l	equ	0xFD9
  2705                           status	equ	0xFD8
  2706                           
  2707 ;; *************** function _lcdPulse *****************
  2708 ;; Defined at:
  2709 ;;		line 14 in file "RobotLib.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_lcdCmd
  2733 ;;		_initLCD
  2734 ;;		_lcd_print_char
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text14
  2739  0019D0                     __ptext14:
  2740                           	opt stack 0
  2741  0019D0                     _lcdPulse:
  2742                           	opt stack 28
  2743                           
  2744                           ;RobotLib.c: 15: PORTDbits.RD3=1;
  2745                           
  2746                           ;incstack = 0
  2747  0019D0  8683               	bsf	3971,3,c	;volatile
  2748                           
  2749                           ;RobotLib.c: 16: _delay((unsigned long)((50)*(40000000/4000000.0)));
  2750  0019D2  0EA6               	movlw	166
  2751  0019D4                     u1527:
  2752  0019D4  2EE8               	decfsz	wreg,f,c
  2753  0019D6  D7FE               	bra	u1527
  2754  0019D8  D000               	nop2	
  2755                           
  2756                           ;RobotLib.c: 17: PORTDbits.RD3=0;
  2757  0019DA  9683               	bcf	3971,3,c	;volatile
  2758                           
  2759                           ;RobotLib.c: 18: _delay((unsigned long)((50)*(40000000/4000000.0)));
  2760  0019DC  0EA6               	movlw	166
  2761  0019DE                     u1537:
  2762  0019DE  2EE8               	decfsz	wreg,f,c
  2763  0019E0  D7FE               	bra	u1537
  2764  0019E2  D000               	nop2	
  2765  0019E4  0012               	return		;funcret
  2766  0019E6                     __end_of_lcdPulse:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodl	equ	0xFF3
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           indf2	equ	0xFDF
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _initInterrupts *****************
  2781 ;; Defined at:
  2782 ;;		line 605 in file "RobotLib.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		None
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_init
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text15
  2810  0019F8                     __ptext15:
  2811                           	opt stack 0
  2812  0019F8                     _initInterrupts:
  2813                           	opt stack 29
  2814                           
  2815                           ;RobotLib.c: 606: RCONbits.IPEN=1;
  2816                           
  2817                           ;incstack = 0
  2818  0019F8  8ED0               	bsf	4048,7,c	;volatile
  2819                           
  2820                           ;RobotLib.c: 607: INTCONbits.GIEH = 1;
  2821  0019FA  8EF2               	bsf	intcon,7,c	;volatile
  2822                           
  2823                           ;RobotLib.c: 608: INTCONbits.GIEL = 1;
  2824  0019FC  8CF2               	bsf	intcon,6,c	;volatile
  2825                           
  2826                           ;RobotLib.c: 610: INTCONbits.INT0IE = 0;
  2827  0019FE  98F2               	bcf	intcon,4,c	;volatile
  2828                           
  2829                           ;RobotLib.c: 611: INTCON3bits.INT2IE = 0;
  2830  001A00  98F0               	bcf	intcon3,4,c	;volatile
  2831                           
  2832                           ;RobotLib.c: 612: INTCON3bits.INT1IE = 0;
  2833  001A02  96F0               	bcf	intcon3,3,c	;volatile
  2834  001A04  0012               	return		;funcret
  2835  001A06                     __end_of_initInterrupts:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodl	equ	0xFF3
  2842                           intcon	equ	0xFF2
  2843                           intcon3	equ	0xFF0
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _initADC *****************
  2852 ;; Defined at:
  2853 ;;		line 482 in file "RobotLib.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_init
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text16
  2881  001984                     __ptext16:
  2882                           	opt stack 0
  2883  001984                     _initADC:
  2884                           	opt stack 29
  2885                           
  2886                           ;RobotLib.c: 484: ADCON1bits.PCFG=0b1111;
  2887                           
  2888                           ;incstack = 0
  2889  001984  80C1               	bsf	4033,0,c	;volatile
  2890  001986  82C1               	bsf	4033,1,c	;volatile
  2891  001988  84C1               	bsf	4033,2,c	;volatile
  2892  00198A  86C1               	bsf	4033,3,c	;volatile
  2893                           
  2894                           ;RobotLib.c: 485: ADCON1bits.VCFG=0b00;
  2895  00198C  0ECF               	movlw	-49
  2896  00198E  16C1               	andwf	4033,f,c	;volatile
  2897                           
  2898                           ;RobotLib.c: 486: ADCON2bits.ACQT=0b111;
  2899  001990  86C0               	bsf	4032,3,c	;volatile
  2900  001992  88C0               	bsf	4032,4,c	;volatile
  2901  001994  8AC0               	bsf	4032,5,c	;volatile
  2902                           
  2903                           ;RobotLib.c: 487: ADCON2bits.ADCS=0b110;
  2904  001996  50C0               	movf	4032,w,c	;volatile
  2905  001998  0BF8               	andlw	-8
  2906  00199A  0906               	iorlw	6
  2907  00199C  6EC0               	movwf	4032,c	;volatile
  2908                           
  2909                           ;RobotLib.c: 488: ADCON2bits.ADFM=0;
  2910  00199E  9EC0               	bcf	4032,7,c	;volatile
  2911  0019A0  0012               	return		;funcret
  2912  0019A2                     __end_of_initADC:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodl	equ	0xFF3
  2919                           intcon	equ	0xFF2
  2920                           intcon3	equ	0xFF0
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           indf2	equ	0xFDF
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _attachInterrupt *****************
  2929 ;; Defined at:
  2930 ;;		line 578 in file "RobotLib.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  num             1    wreg     unsigned char 
  2933 ;;  mode            1    0[COMRAM] unsigned char 
  2934 ;;  func            2    1[COMRAM] PTR FTN()void 
  2935 ;;		 -> func(1), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  num             1    3[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;Total ram usage:        4 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text17
  2961  001926                     __ptext17:
  2962                           	opt stack 0
  2963  001926                     _attachInterrupt:
  2964                           	opt stack 30
  2965                           
  2966                           ;incstack = 0
  2967                           ;attachInterrupt@num stored from wreg
  2968  001926  6E04               	movwf	attachInterrupt@num,c
  2969                           
  2970                           ;RobotLib.c: 579: switch (num){
  2971  001928  D013               	goto	l409
  2972  00192A                     l410:
  2973                           
  2974                           ;RobotLib.c: 581: int0func = func;
  2975  00192A  C002  F036         	movff	attachInterrupt@func,_int0func
  2976  00192E  C003  F037         	movff	attachInterrupt@func+1,_int0func+1
  2977                           
  2978                           ;RobotLib.c: 582: switch(mode){
  2979  001932  D004               	goto	l411
  2980  001934                     l412:
  2981                           
  2982                           ;RobotLib.c: 584: INTCON2bits.INTEDG0 = 1;
  2983  001934  8CF1               	bsf	intcon2,6,c	;volatile
  2984                           
  2985                           ;RobotLib.c: 585: break;
  2986  001936  D009               	goto	l413
  2987  001938                     l414:
  2988                           
  2989                           ;RobotLib.c: 588: INTCON2bits.INTEDG0 = 0;
  2990  001938  9CF1               	bcf	intcon2,6,c	;volatile
  2991                           
  2992                           ;RobotLib.c: 590: }
  2993                           
  2994                           ;RobotLib.c: 589: break;
  2995  00193A  D007               	goto	l413
  2996  00193C                     l411:
  2997  00193C  5001               	movf	attachInterrupt@mode,w,c
  2998                           
  2999                           ; Switch size 1, requested type "space"
  3000                           ; Number of cases is 2, Range of values is 0 to 1
  3001                           ; switch strategies available:
  3002                           ; Name         Instructions Cycles
  3003                           ; simple_byte            7     4 (average)
  3004                           ;	Chosen strategy is simple_byte
  3005  00193E  0A00               	xorlw	0	; case 0
  3006  001940  B4D8               	btfsc	status,2,c
  3007  001942  D7F8               	goto	l412
  3008  001944  0A01               	xorlw	1	; case 1
  3009  001946  B4D8               	btfsc	status,2,c
  3010  001948  D7F7               	goto	l414
  3011  00194A                     l413:
  3012                           
  3013                           ;RobotLib.c: 591: INTCONbits.INT0IF = 0;
  3014  00194A  92F2               	bcf	intcon,1,c	;volatile
  3015                           
  3016                           ;RobotLib.c: 592: INTCONbits.INT0IE = 1;
  3017  00194C  88F2               	bsf	intcon,4,c	;volatile
  3018                           
  3019                           ;RobotLib.c: 595: }
  3020                           
  3021                           ;RobotLib.c: 594: break;
  3022  00194E  0012               	return	
  3023  001950                     l409:
  3024  001950  5004               	movf	attachInterrupt@num,w,c
  3025                           
  3026                           ; Switch size 1, requested type "space"
  3027                           ; Number of cases is 1, Range of values is 0 to 0
  3028                           ; switch strategies available:
  3029                           ; Name         Instructions Cycles
  3030                           ; simple_byte            4     3 (average)
  3031                           ;	Chosen strategy is simple_byte
  3032  001952  0A00               	xorlw	0	; case 0
  3033  001954  A4D8               	btfss	status,2,c
  3034  001956  0012               	return	
  3035  001958  D7E8               	goto	l410
  3036  00195A                     __end_of_attachInterrupt:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodl	equ	0xFF3
  3043                           intcon	equ	0xFF2
  3044                           intcon2	equ	0xFF1
  3045                           intcon3	equ	0xFF0
  3046                           postinc0	equ	0xFEE
  3047                           wreg	equ	0xFE8
  3048                           indf2	equ	0xFDF
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _analogRead *****************
  3054 ;; Defined at:
  3055 ;;		line 491 in file "RobotLib.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  pin             1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  pin             1    6[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    0[COMRAM] int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:        7 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text18
  3083  0014E8                     __ptext18:
  3084                           	opt stack 0
  3085  0014E8                     _analogRead:
  3086                           	opt stack 30
  3087                           
  3088                           ;incstack = 0
  3089                           ;analogRead@pin stored from wreg
  3090  0014E8  6E07               	movwf	analogRead@pin,c
  3091                           
  3092                           ;RobotLib.c: 492: ADCON1bits.PCFG=0b0000;
  3093  0014EA  90C1               	bcf	4033,0,c	;volatile
  3094  0014EC  92C1               	bcf	4033,1,c	;volatile
  3095  0014EE  94C1               	bcf	4033,2,c	;volatile
  3096  0014F0  96C1               	bcf	4033,3,c	;volatile
  3097                           
  3098                           ;RobotLib.c: 493: ADCON0bits.ADON=1;
  3099  0014F2  80C2               	bsf	4034,0,c	;volatile
  3100                           
  3101                           ;RobotLib.c: 496: switch(pin){
  3102  0014F4  D02A               	goto	l374
  3103  0014F6                     l375:
  3104                           
  3105                           ;RobotLib.c: 498: ADCON0bits.CHS=0;
  3106  0014F6  94C2               	bcf	4034,2,c	;volatile
  3107  0014F8  96C2               	bcf	4034,3,c	;volatile
  3108  0014FA  98C2               	bcf	4034,4,c	;volatile
  3109  0014FC  9AC2               	bcf	4034,5,c	;volatile
  3110                           
  3111                           ;RobotLib.c: 499: break;
  3112  0014FE  D044               	goto	l376
  3113  001500                     
  3114                           ;RobotLib.c: 502: ADCON0bits.CHS=1;
  3115  001500  50C2               	movf	4034,w,c	;volatile
  3116  001502  0BC3               	andlw	-61
  3117  001504  0904               	iorlw	4
  3118  001506  D01F               	goto	L8
  3119  001508                     
  3120                           ;RobotLib.c: 506: ADCON0bits.CHS=2;
  3121  001508  50C2               	movf	4034,w,c	;volatile
  3122  00150A  0BC3               	andlw	-61
  3123  00150C  0908               	iorlw	8
  3124  00150E  D01B               	goto	L8
  3125  001510                     
  3126                           ;RobotLib.c: 510: ADCON0bits.CHS=3;
  3127  001510  50C2               	movf	4034,w,c	;volatile
  3128  001512  0BC3               	andlw	-61
  3129  001514  090C               	iorlw	12
  3130  001516  D017               	goto	L8
  3131  001518                     
  3132                           ;RobotLib.c: 514: ADCON0bits.CHS=4;
  3133  001518  50C2               	movf	4034,w,c	;volatile
  3134  00151A  0BC3               	andlw	-61
  3135  00151C  0910               	iorlw	16
  3136  00151E  D013               	goto	L8
  3137  001520                     
  3138                           ;RobotLib.c: 518: ADCON0bits.CHS=5;
  3139  001520  50C2               	movf	4034,w,c	;volatile
  3140  001522  0BC3               	andlw	-61
  3141  001524  0914               	iorlw	20
  3142  001526  D00F               	goto	L8
  3143  001528                     
  3144                           ;RobotLib.c: 522: ADCON0bits.CHS=6;
  3145  001528  50C2               	movf	4034,w,c	;volatile
  3146  00152A  0BC3               	andlw	-61
  3147  00152C  0918               	iorlw	24
  3148  00152E  D00B               	goto	L8
  3149  001530                     
  3150                           ;RobotLib.c: 526: ADCON0bits.CHS=7;
  3151  001530  50C2               	movf	4034,w,c	;volatile
  3152  001532  0BC3               	andlw	-61
  3153  001534  091C               	iorlw	28
  3154  001536  D007               	goto	L8
  3155  001538                     
  3156                           ;RobotLib.c: 530: ADCON0bits.CHS=11;
  3157  001538  50C2               	movf	4034,w,c	;volatile
  3158  00153A  0BC3               	andlw	-61
  3159  00153C  092C               	iorlw	44
  3160  00153E  D003               	goto	L8
  3161  001540                     
  3162                           ;RobotLib.c: 534: ADCON0bits.CHS=12;
  3163  001540  50C2               	movf	4034,w,c	;volatile
  3164  001542  0BC3               	andlw	-61
  3165  001544  0930               	iorlw	48
  3166  001546                     L8:
  3167  001546  6EC2               	movwf	4034,c	;volatile
  3168                           
  3169                           ;RobotLib.c: 536: }
  3170                           
  3171                           ;RobotLib.c: 535: break;
  3172  001548  D01F               	goto	l376
  3173  00154A                     l374:
  3174  00154A  5007               	movf	analogRead@pin,w,c
  3175                           
  3176                           ; Switch size 1, requested type "space"
  3177                           ; Number of cases is 10, Range of values is 0 to 11
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte           31    16 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182  00154C  0A00               	xorlw	0	; case 0
  3183  00154E  B4D8               	btfsc	status,2,c
  3184  001550  D7D2               	goto	l375
  3185  001552  0A01               	xorlw	1	; case 1
  3186  001554  B4D8               	btfsc	status,2,c
  3187  001556  D7D4               	goto	l377
  3188  001558  0A03               	xorlw	3	; case 2
  3189  00155A  B4D8               	btfsc	status,2,c
  3190  00155C  D7D5               	goto	l378
  3191  00155E  0A01               	xorlw	1	; case 3
  3192  001560  B4D8               	btfsc	status,2,c
  3193  001562  D7D6               	goto	l379
  3194  001564  0A07               	xorlw	7	; case 4
  3195  001566  B4D8               	btfsc	status,2,c
  3196  001568  D7D7               	goto	l380
  3197  00156A  0A01               	xorlw	1	; case 5
  3198  00156C  B4D8               	btfsc	status,2,c
  3199  00156E  D7D8               	goto	l381
  3200  001570  0A03               	xorlw	3	; case 6
  3201  001572  B4D8               	btfsc	status,2,c
  3202  001574  D7D9               	goto	l382
  3203  001576  0A01               	xorlw	1	; case 7
  3204  001578  B4D8               	btfsc	status,2,c
  3205  00157A  D7DA               	goto	l383
  3206  00157C  0A0E               	xorlw	14	; case 9
  3207  00157E  B4D8               	btfsc	status,2,c
  3208  001580  D7DB               	goto	l384
  3209  001582  0A02               	xorlw	2	; case 11
  3210  001584  B4D8               	btfsc	status,2,c
  3211  001586  D7DC               	goto	l385
  3212  001588                     l376:
  3213                           
  3214                           ;RobotLib.c: 538: ADCON0bits.GO_DONE=1;
  3215  001588  82C2               	bsf	4034,1,c	;volatile
  3216  00158A  B2C2               	btfsc	4034,1,c	;volatile
  3217  00158C  D7FE               	goto	l387
  3218                           
  3219                           ;RobotLib.c: 540: ADCON1bits.PCFG=0b1111;
  3220  00158E  80C1               	bsf	4033,0,c	;volatile
  3221  001590  82C1               	bsf	4033,1,c	;volatile
  3222  001592  84C1               	bsf	4033,2,c	;volatile
  3223  001594  86C1               	bsf	4033,3,c	;volatile
  3224                           
  3225                           ;RobotLib.c: 541: ADCON0bits.ADON=0;
  3226  001596  90C2               	bcf	4034,0,c	;volatile
  3227                           
  3228                           ;RobotLib.c: 542: return (ADRESH<<2)+(ADRESL>>6);
  3229  001598  CFC3 F003          	movff	4035,??_analogRead	;volatile
  3230  00159C  0E06               	movlw	6
  3231  00159E  6E04               	movwf	(??_analogRead+1)& (0+255),c
  3232  0015A0                     u1415:
  3233  0015A0  90D8               	bcf	status,0,c
  3234  0015A2  3203               	rrcf	??_analogRead,f,c
  3235  0015A4  2E04               	decfsz	(??_analogRead+1)& (0+255),f,c
  3236  0015A6  D7FC               	goto	u1415
  3237  0015A8  50C4               	movf	4036,w,c	;volatile
  3238  0015AA  6E05               	movwf	(??_analogRead+2)& (0+255),c
  3239  0015AC  6A06               	clrf	(??_analogRead+3)& (0+255),c
  3240  0015AE  90D8               	bcf	status,0,c
  3241  0015B0  3605               	rlcf	??_analogRead+2,f,c
  3242  0015B2  3606               	rlcf	??_analogRead+3,f,c
  3243  0015B4  90D8               	bcf	status,0,c
  3244  0015B6  3605               	rlcf	??_analogRead+2,f,c
  3245  0015B8  3606               	rlcf	??_analogRead+3,f,c
  3246  0015BA  5003               	movf	??_analogRead,w,c
  3247  0015BC  2405               	addwf	??_analogRead+2,w,c
  3248  0015BE  6E01               	movwf	?_analogRead,c
  3249  0015C0  0E00               	movlw	0
  3250  0015C2  2006               	addwfc	??_analogRead+3,w,c
  3251  0015C4  6E02               	movwf	?_analogRead+1,c
  3252  0015C6  0012               	return	
  3253  0015C8                     __end_of_analogRead:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodl	equ	0xFF3
  3260                           intcon	equ	0xFF2
  3261                           intcon2	equ	0xFF1
  3262                           intcon3	equ	0xFF0
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           indf2	equ	0xFDF
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           intcon2	equ	0xFF1
  3276                           intcon3	equ	0xFF0
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           indf2	equ	0xFDF
  3280                           fsr2h	equ	0xFDA
  3281                           fsr2l	equ	0xFD9
  3282                           status	equ	0xFD8
  3283                           
  3284                           	psect	rparam
  3285  0000                     tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodl	equ	0xFF3
  3290                           intcon	equ	0xFF2
  3291                           intcon2	equ	0xFF1
  3292                           intcon3	equ	0xFF0
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           indf2	equ	0xFDF
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    timerFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    attachInterrupt@func	PTR FTN()void  size(2) Largest target is 1
		 -> func(), 

    int0func	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), func(), 

    lcd_print_string@entity	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_lcd_print_int
    _lcd_setCursor->_lcdCmd
    _lcd_print_string->_lcd_print_char
    _lcd_print_int->___aldiv
    _init->_initLCD
    _init->_initOutputs
    _initOutputs->_digitalWrite
    _initOutputs->_pinMode
    _initLCD->_lcdCmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4766
                         _analogRead
                    _attachInterrupt
                               _init
                      _lcd_print_int
                   _lcd_print_string
                      _lcd_setCursor
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _lcd_setCursor                                        2     1      1     226
                                              2 COMRAM     2     1      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcd_print_string                                     2     0      2     151
                                              2 COMRAM     2     0      2
                     _lcd_print_char
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                       29    27      2    1815
                                             14 COMRAM    29    27      2
                            ___aldiv
                            ___almod
                             ___lmul
                         _analogRead (ARG)
                     _lcd_print_char
 ---------------------------------------------------------------------------------
 (2) _lcd_print_char                                       2     2      0      30
                                              0 COMRAM     2     2      0
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1578
                            _initADC
                     _initInterrupts
                            _initLCD
                        _initOutputs
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          2     2      0    1518
                                              2 COMRAM     2     2      0
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              2     1      1     756
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         2     1      1     604
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      60
                                              2 COMRAM     2     2      0
                             _lcdCmd
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               2     2      0      30
                                              0 COMRAM     2     2      0
                           _lcdPulse
 ---------------------------------------------------------------------------------
 (3) _lcdPulse                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _attachInterrupt                                      4     1      3     218
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _analogRead                                           7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogRead
   _attachInterrupt
   _init
     _initADC
     _initInterrupts
     _initLCD
       _lcdCmd
         _lcdPulse
       _lcdPulse
     _initOutputs
       _digitalWrite
       _pinMode
   _lcd_print_int
     ___aldiv
     ___almod
     ___lmul
     _analogRead (ARG)
     _lcd_print_char (ARG)
       _lcdPulse
   _lcd_print_string
     _lcd_print_char
       _lcdPulse
   _lcd_setCursor
     _lcdCmd
       _lcdPulse
   _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      37       1       43.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      34        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 25 13:27:12 2018

           ?_lcd_setCursor 0003                         l30 17F2                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
              __CFG_WDT$ON 000000                        l200 101A                        l201 1024  
                      l210 104E                        l203 1028                        l212 1052  
                      l204 1032                        l301 126C                        l221 107C  
                      l213 105C                        l310 1296                        l302 1276  
                      l230 10A6                        l222 1086                        l206 1036  
                      l311 12A0                        l231 10B0                        l215 1060  
                      l207 1040                        l320 12CA                        l304 127A  
                      l240 10DA                        l224 108A                        l216 106A  
                      l313 12A4                        l305 1284                        l233 10B4  
                      l225 1094                        l209 1044                        l410 192A  
                      l322 12CE                        l314 12AE                        l242 10DE  
                      l234 10BE                        l218 106E                        l411 193C  
                      l331 12F8                        l323 12D8                        l307 1288  
                      l251 1108                        l243 10E8                        l227 1098  
                      l219 1078                        l171 1970                        l412 1934  
                      l332 1302                        l316 12B2                        l308 1292  
                      l260 1132                        l252 1112                        l236 10C2  
                      l228 10A2                        l180 14AE                        l172 195C  
                      l413 194A                        l157 1758                        l325 12DC  
                      l317 12BC                        l261 113C                        l245 10EC  
                      l237 10CC                        l501 170A                        l181 1418  
                      l414 1938                        l334 1306                        l326 12E6  
                      l270 11E0                        l254 1116                        l246 10F6  
                      l190 18DA                        l502 1718                        l335 1310  
                      l319 12C0                        l271 11EA                        l263 1140  
                      l255 1120                        l239 10D0                        l503 172E  
                      l183 14CA                        l328 12EA                        l280 120A  
                      l264 114A                        l248 10FA                        l409 1950  
                      l337 1314                        l329 12F4                        l281 1214  
                      l257 1124                        l249 1104                        l177 13FA  
                      l338 131E                        l290 123E                        l274 11EE  
                      l258 112E                        l178 140E                        l283 1218  
                      l275 11F8                        l195 114E                        l380 1518  
                      l292 1242                        l284 1222                        l196 100C  
                      l188 18C0                        l381 1520                        l269 1322  
                      l293 124C                        l277 11FC                        l197 1016  
                      l437 182C                        l374 154A                        l382 1528  
                      l286 1226                        l278 1206                        l438 1840  
                      l383 1530                        l375 14F6                        l295 1250  
                      l287 1230                        l384 1538                        l376 1588  
                      l296 125A                        l385 1540                        l377 1500  
                      l289 1234                        l481 15E4                        l378 1508  
                      l298 125E                        l490 1682                        l482 15FC  
                      l387 158A                        l379 1510                        l299 1268  
                      l484 162A                        l485 161E                        l494 16B0  
                      l495 16C4                        l488 165E                        l489 166C  
                      l497 16E2                        l498 16D6               __CFG_CPB$OFF 000000  
                      u520 1776               __CFG_CPD$OFF 000000    __end_of_attachInterrupt 195A  
                      wreg 000FE8             ?_lcd_print_int 000F               __CFG_LVP$OFF 000000  
                     l1301 1750                       l1727 18B8                       l1739 18D2  
                     STR_1 1001                       u1230 18CE                       u1310 162E  
                     u1415 15A0                       _LATD 000F8C                       u1370 16E6  
                     u1507 1788                       u1517 18AA                       u1527 19D4  
                     u1537 19DE                       u1497 175E                       _main 17B6  
                     _func 000000                       _init 19E6                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_BOREN$ON 000000                       prodl 000FF3  
                     start 0000            ?_lcd_print_char 0001              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000000            __end_of___aldiv 1694  
          __end_of___almod 1740                      ?_main 0001               ?_initOutputs 0001  
                    ?_init 0001                      _TRISD 000F95              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
      ___lmul@multiplicand 0005             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000            __end_of_initADC 19A2  
          __end_of_initLCD 17B6             __CFG_EBTRB$OFF 000000            __end_of_pinMode 11DC  
                    tablat 000FF5                      status 000FD8       __end_of_digitalWrite 13B0  
          __initialization 19BA            ??_lcd_setCursor 0004               __end_of_main 181C  
             __end_of_init 19F8       lcd_print_char@entity 0002             __CFG_OSC$HSPLL 000000  
                   ??_main 002C                     ??_init 0005              __activetblptr 000002  
          ??_lcd_print_int 0011        lcd_print_int@entity 000F           ?_attachInterrupt 0001  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     _TRISA0 007C90  
                   _TRISA1 007C91                     _TRISA2 007C92                     _TRISB0 007C98  
                   _TRISA3 007C93                     _TRISB1 007C99                     _TRISA4 007C94  
                   _TRISC0 007CA0                     _TRISB2 007C9A                     _TRISA5 007C95  
                   _TRISB3 007C9B                     _TRISB4 007C9C                     _TRISD0 007CA8  
                   _TRISB5 007C9D                     _TRISC3 007CA3                     _TRISD1 007CA9  
                   _TRISE0 007CB0                     _TRISC4 007CA4                     _TRISE1 007CB1  
                   _TRISC5 007CA5                     _TRISE2 007CB2                     _TRISC6 007CA6  
                   _TRISC7 007CA7             __CFG_XINST$OFF 000000           __end_of_lcdPulse 19E6  
                   ___lmul 181C                  ??___aldiv 0009                  ??___almod 0009  
           __CFG_STVREN$ON 000000                     _lcdCmd 1872                     clear_0 19C0  
                ??_initADC 0001                  ??_initLCD 0003                  ??_pinMode 0002  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8         attachInterrupt@num 0004                 __accesstop 0080  
  __end_of__initialization 19C6            __CFG_PBADEN$OFF 000000          ?_lcd_print_string 0003  
            ___rparam_used 000001         ??_lcd_print_string 0005                pinMode@mode 0001  
           __pcstackCOMRAM 0001    __size_of_initInterrupts 000E          lcd_print_int@buff 0015  
     __size_of_initOutputs 003E          initOutputs@i_1066 0004           ??_lcd_print_char 0001  
    __size_of_digitalWrite 01D4             lcd_setCursor@x 0004             lcd_setCursor@y 0003  
               _analogRead 14E8                    ?___lmul 0001                    ?_lcdCmd 0001  
           ___lmul@product 0009               _digitalWrite 11DC                  ?_lcdPulse 0001  
                  __Hparam 0000                    __Lparam 0000                    ___aldiv 15C8  
                  ___almod 1694            __size_of___lmul 0056            __size_of_lcdCmd 0042  
           lcd_print_int@i 0026               __psmallconst 1000                    __pcinit 19BA  
             initOutputs@i 0003                    __ramtop 1000                    __ptext0 17B6  
                  __ptext1 19A2                    __ptext2 195A                    __ptext3 13B0  
                  __ptext4 18F2                    __ptext5 181C                    __ptext6 1694  
                  __ptext7 15C8                    __ptext8 19E6                    __ptext9 18B4  
                  _initADC 1984                    _initLCD 1740                    _pinMode 1008  
         ___aldiv@dividend 0001     lcd_print_string@entity 0003                 ??_lcdPulse 0001  
     end_of_initialization 19C6              analogRead@pin 0007              __Lmediumconst 0000  
              ?_analogRead 0001           ___aldiv@quotient 000B             _initInterrupts 19F8  
                  postinc0 000FEE      __end_of_lcd_setCursor 19BA        attachInterrupt@func 0002  
      attachInterrupt@mode 0001                  _PORTDbits 000F83      __end_of_lcd_print_int 14E8  
 __size_of_attachInterrupt 0034     __end_of_initInterrupts 1A06             __end_of___lmul 1872  
           __end_of_lcdCmd 18B4  __size_of_lcd_print_string 002A        __size_of_analogRead 00E0  
      start_initialization 19BA         lcd_print_int@value 0028            ?_initInterrupts 0001  
                 ??___lmul 0009                   ??_lcdCmd 0001           __CFG_LPT1OSC$OFF 000000  
            ??_initOutputs 0003                __pbssCOMRAM 002C                 pinMode@pin 0002  
         lcd_print_int@num 0025          __size_of_lcdPulse 0016               _microSeconds 0030  
        __CFG_CCP2MX$PORTC 000000          ??_attachInterrupt 0004                   ?___aldiv 0001  
                 ?___almod 0001           ___almod@dividend 0001                   ?_initADC 0001  
             _milliSeconds 002C                   ?_initLCD 0001                __smallconst 1000  
                 ?_pinMode 0001        __end_of_initOutputs 18F2            ___aldiv@divisor 0005  
          ___aldiv@counter 0009                   _LATAbits 000F89                   _LATBbits 000F8A  
                 _LATCbits 000F8B                   _LATDbits 000F8C                  lcdCmd@cmd 0002  
                 _LATEbits 000F8D               ??_analogRead 0003                   _RCONbits 000FD0  
         __CFG_WDTPS$32768 000000    __size_of_lcd_print_char 0034                  _timerFunc 0034  
         _lcd_print_string 195A                 _ADCON0bits 000FC2                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0         __end_of_analogRead 15C8          ___lmul@multiplier 0001  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0                   __Hrparam 0000  
                 __Lrparam 0000           __size_of___aldiv 00CC           __size_of___almod 00AC  
              _initOutputs 18B4           __size_of_initADC 001E           __size_of_initLCD 0076  
         __size_of_pinMode 01D4                   __ptext10 1008                   __ptext11 11DC  
                 __ptext12 1740                   __ptext13 1872                   __ptext14 19D0  
                 __ptext15 19F8                   __ptext16 1984                   __ptext17 1926  
                 __ptext18 14E8                   _lcdPulse 19D0                   _int0func 0036  
          ___almod@divisor 0005            ___almod@counter 0009     __size_of_lcd_setCursor 0018  
         ??_initInterrupts 0001              __size_of_main 0066              __size_of_init 0012  
   __size_of_lcd_print_int 0138                   initLCD@i 0004                 _INTCONbits 000FF2  
            ?_digitalWrite 0001            _attachInterrupt 1926             _lcd_print_char 18F2  
            _lcd_setCursor 19A2           digitalWrite@mode 0001             ??_digitalWrite 0002  
             ___aldiv@sign 000A              _lcd_print_int 13B0            digitalWrite@pin 0002  
             ___almod@sign 000A   __end_of_lcd_print_string 1984     __end_of_lcd_print_char 1926  
